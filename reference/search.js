window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"prosodic": {"fullname": "prosodic", "modulename": "prosodic", "kind": "module", "doc": "<p></p>\n"}, "prosodic.cli": {"fullname": "prosodic.cli", "modulename": "prosodic.cli", "kind": "module", "doc": "<p></p>\n"}, "prosodic.cli.cli": {"fullname": "prosodic.cli.cli", "modulename": "prosodic.cli", "qualname": "cli", "kind": "variable", "doc": "<p>Main command group for the CLI application.</p>\n", "default_value": "&lt;Group cli&gt;"}, "prosodic.cli.web": {"fullname": "prosodic.cli.web", "modulename": "prosodic.cli", "qualname": "web", "kind": "variable", "doc": "<p>Start the prosodic web server.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>host (str):</strong>  The host address to bind the server to. Defaults to '127.0.0.1'.</li>\n<li><strong>port (int):</strong>  The port number to run the server on. Defaults to 8181.</li>\n<li><strong>debug (bool):</strong>  Enable debug mode if True. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "default_value": "&lt;Command web&gt;"}, "prosodic.cli.ipython": {"fullname": "prosodic.cli.ipython", "modulename": "prosodic.cli", "qualname": "ipython", "kind": "variable", "doc": "<p>Start an IPython session with prosodic imported.</p>\n\n<p>This function launches an interactive IPython shell with prosodic\npre-imported for convenience.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "default_value": "&lt;Command ipython&gt;"}, "prosodic.ents": {"fullname": "prosodic.ents", "modulename": "prosodic.ents", "kind": "module", "doc": "<p></p>\n"}, "prosodic.ents.Entity": {"fullname": "prosodic.ents.Entity", "modulename": "prosodic.ents", "qualname": "Entity", "kind": "class", "doc": "<p>Root Entity class representing a hierarchical structure in prosodic analysis.</p>\n\n<p>This class serves as the base for various prosodic entities such as texts, stanzas,\nlines, words, syllables, and phonemes. It provides common functionality for\nmanaging hierarchical relationships, attributes, and data representation.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>child_type (str):</strong>  The type of child entities this entity can contain.</li>\n<li><strong>is_parseable (bool):</strong>  Whether this entity can be parsed.</li>\n<li><strong>index_name (str):</strong>  The name used for indexing this entity type.</li>\n<li><strong>prefix (str):</strong>  A prefix used for attribute naming.</li>\n<li><strong>list_type (type):</strong>  The type of list used for storing children.</li>\n<li><strong>cached_properties_to_clear (list):</strong>  Properties to clear from cache.</li>\n<li><strong>use_cache (bool):</strong>  Whether to use caching for this entity.</li>\n<li><strong>sep (str):</strong>  Separator used when joining child texts.</li>\n</ul>\n", "bases": "collections.UserList"}, "prosodic.ents.Entity.__init__": {"fullname": "prosodic.ents.Entity.__init__", "modulename": "prosodic.ents", "qualname": "Entity.__init__", "kind": "function", "doc": "<p>Initialize an Entity object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text content of the entity.</li>\n<li><strong>children (list):</strong>  List of child entities.</li>\n<li><strong>parent (Entity):</strong>  The parent entity.</li>\n<li><strong>**kwargs:</strong>  Additional attributes to set on the entity.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">children</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.ents.Entity.child_type": {"fullname": "prosodic.ents.Entity.child_type", "modulename": "prosodic.ents", "qualname": "Entity.child_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Text&#x27;"}, "prosodic.ents.Entity.is_parseable": {"fullname": "prosodic.ents.Entity.is_parseable", "modulename": "prosodic.ents", "qualname": "Entity.is_parseable", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "prosodic.ents.Entity.index_name": {"fullname": "prosodic.ents.Entity.index_name", "modulename": "prosodic.ents", "qualname": "Entity.index_name", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.ents.Entity.prefix": {"fullname": "prosodic.ents.Entity.prefix", "modulename": "prosodic.ents", "qualname": "Entity.prefix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ent&#x27;"}, "prosodic.ents.Entity.list_type": {"fullname": "prosodic.ents.Entity.list_type", "modulename": "prosodic.ents", "qualname": "Entity.list_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.ents.Entity.cached_properties_to_clear": {"fullname": "prosodic.ents.Entity.cached_properties_to_clear", "modulename": "prosodic.ents", "qualname": "Entity.cached_properties_to_clear", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, "prosodic.ents.Entity.use_cache": {"fullname": "prosodic.ents.Entity.use_cache", "modulename": "prosodic.ents", "qualname": "Entity.use_cache", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "prosodic.ents.Entity.sep": {"fullname": "prosodic.ents.Entity.sep", "modulename": "prosodic.ents", "qualname": "Entity.sep", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&#x27;"}, "prosodic.ents.Entity.parent": {"fullname": "prosodic.ents.Entity.parent", "modulename": "prosodic.ents", "qualname": "Entity.parent", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.ents.Entity.children": {"fullname": "prosodic.ents.Entity.children", "modulename": "prosodic.ents", "qualname": "Entity.children", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.ents.Entity.to_hash": {"fullname": "prosodic.ents.Entity.to_hash", "modulename": "prosodic.ents", "qualname": "Entity.to_hash", "kind": "function", "doc": "<p>Generate a hash representation of the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: A hash string representing the entity's content and attributes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.html": {"fullname": "prosodic.ents.Entity.html", "modulename": "prosodic.ents", "qualname": "Entity.html", "kind": "variable", "doc": "<p>Get the HTML representation of the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: HTML representation of the entity, if available.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.key": {"fullname": "prosodic.ents.Entity.key", "modulename": "prosodic.ents", "qualname": "Entity.key", "kind": "variable", "doc": "<p>Generate a unique key for the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: A string key representing the entity's class and attributes.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.hash": {"fullname": "prosodic.ents.Entity.hash", "modulename": "prosodic.ents", "qualname": "Entity.hash", "kind": "variable", "doc": "<p>Get a hash value for the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: A hash string for the entity.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.to_json": {"fullname": "prosodic.ents.Entity.to_json", "modulename": "prosodic.ents", "qualname": "Entity.to_json", "kind": "function", "doc": "<p>Convert the entity to a JSON representation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn (str, optional):</strong>  Filename to save the JSON output.</li>\n<li><strong>no_txt (bool):</strong>  If True, exclude the text content.</li>\n<li><strong>yes_txt (bool):</strong>  If True, include the full text content.</li>\n<li><strong>**kwargs:</strong>  Additional key-value pairs to include in the JSON.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary representation of the entity.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">no_txt</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">yes_txt</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.save": {"fullname": "prosodic.ents.Entity.save", "modulename": "prosodic.ents", "qualname": "Entity.save", "kind": "function", "doc": "<p>Save the entity to a file in JSON format.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn (str):</strong>  The filename to save to.</li>\n<li><strong>**kwargs:</strong>  Additional arguments to pass to to_json.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The result of to_json with the given filename.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fn</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.render": {"fullname": "prosodic.ents.Entity.render", "modulename": "prosodic.ents", "qualname": "Entity.render", "kind": "function", "doc": "<p>Render the entity as HTML.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>as_str (bool):</strong>  If True, return the result as a string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str or HTML: The rendered HTML representation of the entity.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_str</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.from_json": {"fullname": "prosodic.ents.Entity.from_json", "modulename": "prosodic.ents", "qualname": "Entity.from_json", "kind": "function", "doc": "<p>Create an Entity object from a JSON dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>json_d (dict):</strong>  A dictionary containing the entity data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Entity: An instance of the appropriate Entity subclass.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">json_d</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.attrs": {"fullname": "prosodic.ents.Entity.attrs", "modulename": "prosodic.ents", "qualname": "Entity.attrs", "kind": "variable", "doc": "<p>Get the attributes of the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary of the entity's attributes.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.prefix_attrs": {"fullname": "prosodic.ents.Entity.prefix_attrs", "modulename": "prosodic.ents", "qualname": "Entity.prefix_attrs", "kind": "variable", "doc": "<p>Get the attributes of the entity with a prefix.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>with_parent (bool):</strong>  If True, include parent attributes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary of the entity's attributes with a prefix.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.txt": {"fullname": "prosodic.ents.Entity.txt", "modulename": "prosodic.ents", "qualname": "Entity.txt", "kind": "variable", "doc": "<p>Get the text content of the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The text content of the entity.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.data": {"fullname": "prosodic.ents.Entity.data", "modulename": "prosodic.ents", "qualname": "Entity.data", "kind": "variable", "doc": "<p>Get the data associated with the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: The list of child entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.l": {"fullname": "prosodic.ents.Entity.l", "modulename": "prosodic.ents", "qualname": "Entity.l", "kind": "variable", "doc": "<p>Get the list of child entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: The list of child entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.clear_cached_properties": {"fullname": "prosodic.ents.Entity.clear_cached_properties", "modulename": "prosodic.ents", "qualname": "Entity.clear_cached_properties", "kind": "function", "doc": "<p>Clear cached properties to free up memory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.inspect": {"fullname": "prosodic.ents.Entity.inspect", "modulename": "prosodic.ents", "qualname": "Entity.inspect", "kind": "function", "doc": "<p>Inspect the entity and its children.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>indent (int):</strong>  The indentation level for the output.</li>\n<li><strong>maxlines (int):</strong>  The maximum number of lines to display.</li>\n<li><strong>incl_phons (bool):</strong>  If True, include phoneme information.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">maxlines</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">incl_phons</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.ld": {"fullname": "prosodic.ents.Entity.ld", "modulename": "prosodic.ents", "qualname": "Entity.ld", "kind": "variable", "doc": "<p>Get a list of dictionaries representing the entity and its children.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of dictionaries representing the entity and its children.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.child_class": {"fullname": "prosodic.ents.Entity.child_class", "modulename": "prosodic.ents", "qualname": "Entity.child_class", "kind": "variable", "doc": "<p>Get the class of the child entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>type: The class of the child entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.get_ld": {"fullname": "prosodic.ents.Entity.get_ld", "modulename": "prosodic.ents", "qualname": "Entity.get_ld", "kind": "function", "doc": "<p>Get a list of dictionaries representing the entity and its children.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>incl_phons (bool):</strong>  If True, include phoneme information.</li>\n<li><strong>incl_sylls (bool):</strong>  If True, include syllable information.</li>\n<li><strong>multiple_wordforms (bool):</strong>  If True, include multiple word forms.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of dictionaries representing the entity and its children.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">incl_phons</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">incl_sylls</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">multiple_wordforms</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.get_df": {"fullname": "prosodic.ents.Entity.get_df", "modulename": "prosodic.ents", "qualname": "Entity.get_df", "kind": "function", "doc": "<p>Get a DataFrame representation of the entity and its children.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>  Additional arguments to pass to get_ld.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>DataFrame: A DataFrame representation of the entity and its children.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.df": {"fullname": "prosodic.ents.Entity.df", "modulename": "prosodic.ents", "qualname": "Entity.df", "kind": "variable", "doc": "<p>Get a DataFrame representation of the entity and its children.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>DataFrame: A DataFrame representation of the entity and its children.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.get_parent": {"fullname": "prosodic.ents.Entity.get_parent", "modulename": "prosodic.ents", "qualname": "Entity.get_parent", "kind": "function", "doc": "<p>Get the parent entity of a specific type.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>parent_type (str):</strong>  The type of parent entity to find.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Entity: The parent entity of the specified type, or None if not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parent_type</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.stanzas": {"fullname": "prosodic.ents.Entity.stanzas", "modulename": "prosodic.ents", "qualname": "Entity.stanzas", "kind": "variable", "doc": "<p>Get the list of stanza entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>StanzaList: A list of stanza entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.line_r": {"fullname": "prosodic.ents.Entity.line_r", "modulename": "prosodic.ents", "qualname": "Entity.line_r", "kind": "variable", "doc": "<p>Get a random line entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Line: A random line entity, or None if no lines exist.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.word_r": {"fullname": "prosodic.ents.Entity.word_r", "modulename": "prosodic.ents", "qualname": "Entity.word_r", "kind": "variable", "doc": "<p>Get a random word entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordToken: A random word entity, or None if no words exist.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.lines": {"fullname": "prosodic.ents.Entity.lines", "modulename": "prosodic.ents", "qualname": "Entity.lines", "kind": "variable", "doc": "<p>Get the list of line entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>LineList: A list of line entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordtokens": {"fullname": "prosodic.ents.Entity.wordtokens", "modulename": "prosodic.ents", "qualname": "Entity.wordtokens", "kind": "variable", "doc": "<p>Get the list of word token entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordTokenList: A list of word token entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.words": {"fullname": "prosodic.ents.Entity.words", "modulename": "prosodic.ents", "qualname": "Entity.words", "kind": "variable", "doc": "<p>Get the list of word token entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordTokenList: A list of word token entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordtypes": {"fullname": "prosodic.ents.Entity.wordtypes", "modulename": "prosodic.ents", "qualname": "Entity.wordtypes", "kind": "variable", "doc": "<p>Get the list of word type entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordTypeList: A list of word type entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordforms": {"fullname": "prosodic.ents.Entity.wordforms", "modulename": "prosodic.ents", "qualname": "Entity.wordforms", "kind": "variable", "doc": "<p>Get the list of word form entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordFormList: A list of word form entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordforms_nopunc": {"fullname": "prosodic.ents.Entity.wordforms_nopunc", "modulename": "prosodic.ents", "qualname": "Entity.wordforms_nopunc", "kind": "variable", "doc": "<p>Get the list of word form entities, excluding punctuation.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of word form entities, excluding punctuation.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordforms_all": {"fullname": "prosodic.ents.Entity.wordforms_all", "modulename": "prosodic.ents", "qualname": "Entity.wordforms_all", "kind": "variable", "doc": "<p>Get the list of all word form entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of all word form entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.syllables": {"fullname": "prosodic.ents.Entity.syllables", "modulename": "prosodic.ents", "qualname": "Entity.syllables", "kind": "variable", "doc": "<p>Get the list of syllable entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>SyllableList: A list of syllable entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.phonemes": {"fullname": "prosodic.ents.Entity.phonemes", "modulename": "prosodic.ents", "qualname": "Entity.phonemes", "kind": "variable", "doc": "<p>Get the list of phoneme entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>PhonemeList: A list of phoneme entities.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.text": {"fullname": "prosodic.ents.Entity.text", "modulename": "prosodic.ents", "qualname": "Entity.text", "kind": "variable", "doc": "<p>Get the parent text entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Text: The parent text entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.stanza": {"fullname": "prosodic.ents.Entity.stanza", "modulename": "prosodic.ents", "qualname": "Entity.stanza", "kind": "variable", "doc": "<p>Get the parent stanza entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Stanza: The parent stanza entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.line": {"fullname": "prosodic.ents.Entity.line", "modulename": "prosodic.ents", "qualname": "Entity.line", "kind": "variable", "doc": "<p>Get the parent line entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Line: The parent line entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordtoken": {"fullname": "prosodic.ents.Entity.wordtoken", "modulename": "prosodic.ents", "qualname": "Entity.wordtoken", "kind": "variable", "doc": "<p>Get the parent word token entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordToken: The parent word token entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordtype": {"fullname": "prosodic.ents.Entity.wordtype", "modulename": "prosodic.ents", "qualname": "Entity.wordtype", "kind": "variable", "doc": "<p>Get the parent word type entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordType: The parent word type entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.wordform": {"fullname": "prosodic.ents.Entity.wordform", "modulename": "prosodic.ents", "qualname": "Entity.wordform", "kind": "variable", "doc": "<p>Get the parent word form entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordForm: The parent word form entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.syllable": {"fullname": "prosodic.ents.Entity.syllable", "modulename": "prosodic.ents", "qualname": "Entity.syllable", "kind": "variable", "doc": "<p>Get the parent syllable entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Syllable: The parent syllable entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.i": {"fullname": "prosodic.ents.Entity.i", "modulename": "prosodic.ents", "qualname": "Entity.i", "kind": "variable", "doc": "<p>Get the index of the entity in its parent's children list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The index of the entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.num": {"fullname": "prosodic.ents.Entity.num", "modulename": "prosodic.ents", "qualname": "Entity.num", "kind": "variable", "doc": "<p>Get the 1-based index of the entity in its parent's children list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The 1-based index of the entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.next": {"fullname": "prosodic.ents.Entity.next", "modulename": "prosodic.ents", "qualname": "Entity.next", "kind": "variable", "doc": "<p>Get the next sibling entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Entity: The next sibling entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.prev": {"fullname": "prosodic.ents.Entity.prev", "modulename": "prosodic.ents", "qualname": "Entity.prev", "kind": "variable", "doc": "<p>Get the previous sibling entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Entity: The previous sibling entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_text": {"fullname": "prosodic.ents.Entity.is_text", "modulename": "prosodic.ents", "qualname": "Entity.is_text", "kind": "variable", "doc": "<p>Check if the entity is a text entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a text entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_stanza": {"fullname": "prosodic.ents.Entity.is_stanza", "modulename": "prosodic.ents", "qualname": "Entity.is_stanza", "kind": "variable", "doc": "<p>Check if the entity is a stanza entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a stanza entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_line": {"fullname": "prosodic.ents.Entity.is_line", "modulename": "prosodic.ents", "qualname": "Entity.is_line", "kind": "variable", "doc": "<p>Check if the entity is a line entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a line entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_wordtoken": {"fullname": "prosodic.ents.Entity.is_wordtoken", "modulename": "prosodic.ents", "qualname": "Entity.is_wordtoken", "kind": "variable", "doc": "<p>Check if the entity is a word token entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a word token entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_wordtype": {"fullname": "prosodic.ents.Entity.is_wordtype", "modulename": "prosodic.ents", "qualname": "Entity.is_wordtype", "kind": "variable", "doc": "<p>Check if the entity is a word type entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a word type entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_wordform": {"fullname": "prosodic.ents.Entity.is_wordform", "modulename": "prosodic.ents", "qualname": "Entity.is_wordform", "kind": "variable", "doc": "<p>Check if the entity is a word form entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a word form entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_syll": {"fullname": "prosodic.ents.Entity.is_syll", "modulename": "prosodic.ents", "qualname": "Entity.is_syll", "kind": "variable", "doc": "<p>Check if the entity is a syllable entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a syllable entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.is_phon": {"fullname": "prosodic.ents.Entity.is_phon", "modulename": "prosodic.ents", "qualname": "Entity.is_phon", "kind": "variable", "doc": "<p>Check if the entity is a phoneme entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the entity is a phoneme entity, False otherwise.</p>\n</blockquote>\n"}, "prosodic.ents.Entity.children_from_cache": {"fullname": "prosodic.ents.Entity.children_from_cache", "modulename": "prosodic.ents", "qualname": "Entity.children_from_cache", "kind": "function", "doc": "<p>Get the children of the entity from the cache.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: The list of child entities, or None if not found in the cache.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.get_key": {"fullname": "prosodic.ents.Entity.get_key", "modulename": "prosodic.ents", "qualname": "Entity.get_key", "kind": "function", "doc": "<p>Get a key for caching purposes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>key:</strong>  The key object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The hashed key.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.from_cache": {"fullname": "prosodic.ents.Entity.from_cache", "modulename": "prosodic.ents", "qualname": "Entity.from_cache", "kind": "function", "doc": "<p>Get an object from the cache.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>obj:</strong>  The object to cache.</li>\n<li><strong>key:</strong>  The key for the cache.</li>\n<li><strong>as_dict (bool):</strong>  If True, return the cached data as a dictionary.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The cached object, or None if not found.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">as_dict</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.get_cache": {"fullname": "prosodic.ents.Entity.get_cache", "modulename": "prosodic.ents", "qualname": "Entity.get_cache", "kind": "function", "doc": "<p>Get the cache object.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>SimpleCache: The cache object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.Entity.cache": {"fullname": "prosodic.ents.Entity.cache", "modulename": "prosodic.ents", "qualname": "Entity.cache", "kind": "function", "doc": "<p>Cache an object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>key_obj:</strong>  The object to use as the cache key.</li>\n<li><strong>val_obj:</strong>  The object to cache.</li>\n<li><strong>key:</strong>  An optional key for the cache.</li>\n<li><strong>force (bool):</strong>  If True, force the cache to be updated.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key_obj</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">val_obj</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.ents.EntityList": {"fullname": "prosodic.ents.EntityList", "modulename": "prosodic.ents", "qualname": "EntityList", "kind": "class", "doc": "<p>A list of Entity objects.</p>\n", "bases": "Entity"}, "prosodic.ents.EntityList.__init__": {"fullname": "prosodic.ents.EntityList.__init__", "modulename": "prosodic.ents", "qualname": "EntityList.__init__", "kind": "function", "doc": "<p>Initialize an EntityList object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>children (list):</strong>  List of child entities.</li>\n<li><strong>parent (Entity):</strong>  The parent entity.</li>\n<li><strong>**kwargs:</strong>  Additional attributes to set on the entity.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">children</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.ents.EntityList.parent": {"fullname": "prosodic.ents.EntityList.parent", "modulename": "prosodic.ents", "qualname": "EntityList.parent", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.ents.EntityList.children": {"fullname": "prosodic.ents.EntityList.children", "modulename": "prosodic.ents", "qualname": "EntityList.children", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.ents.EntityList.txt": {"fullname": "prosodic.ents.EntityList.txt", "modulename": "prosodic.ents", "qualname": "EntityList.txt", "kind": "variable", "doc": "<p>Get the text content of the entity list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None: Always returns None for EntityList objects.</p>\n</blockquote>\n"}, "prosodic.imports": {"fullname": "prosodic.imports", "modulename": "prosodic.imports", "kind": "module", "doc": "<p></p>\n"}, "prosodic.imports.PATH_HERE": {"fullname": "prosodic.imports.PATH_HERE", "modulename": "prosodic.imports", "qualname": "PATH_HERE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic&#x27;"}, "prosodic.imports.PATH_REPO": {"fullname": "prosodic.imports.PATH_REPO", "modulename": "prosodic.imports", "qualname": "PATH_REPO", "kind": "variable", "doc": "<p></p>\n", "default_value": "$PWD"}, "prosodic.imports.PATH_PROSODIC": {"fullname": "prosodic.imports.PATH_PROSODIC", "modulename": "prosodic.imports", "qualname": "PATH_PROSODIC", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic&#x27;"}, "prosodic.imports.PATH_LANGS": {"fullname": "prosodic.imports.PATH_LANGS", "modulename": "prosodic.imports", "qualname": "PATH_LANGS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs&#x27;"}, "prosodic.imports.PATH_PHONS": {"fullname": "prosodic.imports.PATH_PHONS", "modulename": "prosodic.imports", "qualname": "PATH_PHONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/phonemes.json&#x27;"}, "prosodic.imports.PATH_WEB": {"fullname": "prosodic.imports.PATH_WEB", "modulename": "prosodic.imports", "qualname": "PATH_WEB", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/web&#x27;"}, "prosodic.imports.PATH_REPO_DATA": {"fullname": "prosodic.imports.PATH_REPO_DATA", "modulename": "prosodic.imports", "qualname": "PATH_REPO_DATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/data&#x27;"}, "prosodic.imports.PATH_DICTS": {"fullname": "prosodic.imports.PATH_DICTS", "modulename": "prosodic.imports", "qualname": "PATH_DICTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/data/dicts&#x27;"}, "prosodic.imports.PATH_HOME": {"fullname": "prosodic.imports.PATH_HOME", "modulename": "prosodic.imports", "qualname": "PATH_HOME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/prosodic_data&#x27;"}, "prosodic.imports.PATH_HOME_DATA": {"fullname": "prosodic.imports.PATH_HOME_DATA", "modulename": "prosodic.imports", "qualname": "PATH_HOME_DATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/prosodic_data/data&#x27;"}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"fullname": "prosodic.imports.PATH_HOME_DATA_CACHE", "modulename": "prosodic.imports", "qualname": "PATH_HOME_DATA_CACHE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/prosodic_data/data/cache&#x27;"}, "prosodic.imports.USE_CACHE": {"fullname": "prosodic.imports.USE_CACHE", "modulename": "prosodic.imports", "qualname": "USE_CACHE", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "prosodic.imports.USE_REDIS": {"fullname": "prosodic.imports.USE_REDIS", "modulename": "prosodic.imports", "qualname": "USE_REDIS", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "prosodic.imports.HASHSTR_LEN": {"fullname": "prosodic.imports.HASHSTR_LEN", "modulename": "prosodic.imports", "qualname": "HASHSTR_LEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.imports.DEFAULT_NUM_PROC": {"fullname": "prosodic.imports.DEFAULT_NUM_PROC", "modulename": "prosodic.imports", "qualname": "DEFAULT_NUM_PROC", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.imports.PATH_MTREE": {"fullname": "prosodic.imports.PATH_MTREE", "modulename": "prosodic.imports", "qualname": "PATH_MTREE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/metricaltree&#x27;"}, "prosodic.imports.DASHES": {"fullname": "prosodic.imports.DASHES", "modulename": "prosodic.imports", "qualname": "DASHES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;--&#x27;, &#x27;\u2013&#x27;, &#x27;\u2014&#x27;]"}, "prosodic.imports.REPLACE_DASHES": {"fullname": "prosodic.imports.REPLACE_DASHES", "modulename": "prosodic.imports", "qualname": "REPLACE_DASHES", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"fullname": "prosodic.imports.PSTRESS_THRESH_DEFAULT", "modulename": "prosodic.imports", "qualname": "PSTRESS_THRESH_DEFAULT", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.imports.TOKENIZER": {"fullname": "prosodic.imports.TOKENIZER", "modulename": "prosodic.imports", "qualname": "TOKENIZER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;[^\\\\s+]+&#x27;"}, "prosodic.imports.SEPS_PHRASE": {"fullname": "prosodic.imports.SEPS_PHRASE", "modulename": "prosodic.imports", "qualname": "SEPS_PHRASE", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;,&#x27;, &#x27;\u2014&#x27;, &#x27;;&#x27;, &#x27;)&#x27;, &#x27;!&#x27;, &#x27;\u201c&#x27;, &#x27;\u201d&#x27;, &#x27;&quot;&#x27;, &#x27;:&#x27;, &#x27;\u2013&#x27;, &#x27;]&#x27;, &#x27;\u2019&#x27;, &#x27;\u2018&#x27;, &#x27;[&#x27;, &#x27;.&#x27;, &#x27;(&#x27;, &#x27;?&#x27;}"}, "prosodic.imports.SEP_STANZA": {"fullname": "prosodic.imports.SEP_STANZA", "modulename": "prosodic.imports", "qualname": "SEP_STANZA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n\\n&#x27;"}, "prosodic.imports.SEP_PARA": {"fullname": "prosodic.imports.SEP_PARA", "modulename": "prosodic.imports", "qualname": "SEP_PARA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n\\n&#x27;"}, "prosodic.imports.SEP_LINE": {"fullname": "prosodic.imports.SEP_LINE", "modulename": "prosodic.imports", "qualname": "SEP_LINE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n&#x27;"}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"fullname": "prosodic.imports.DEFAULT_PARSE_MAXSEC", "modulename": "prosodic.imports", "qualname": "DEFAULT_PARSE_MAXSEC", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, "prosodic.imports.DEFAULT_LINE_LIM": {"fullname": "prosodic.imports.DEFAULT_LINE_LIM", "modulename": "prosodic.imports", "qualname": "DEFAULT_LINE_LIM", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.imports.DEFAULT_PROCESSORS": {"fullname": "prosodic.imports.DEFAULT_PROCESSORS", "modulename": "prosodic.imports", "qualname": "DEFAULT_PROCESSORS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;tokenize&#x27;: &#x27;combined&#x27;}"}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"fullname": "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT", "modulename": "prosodic.imports", "qualname": "MAX_SYLL_IN_PARSE_UNIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "14"}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"fullname": "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT", "modulename": "prosodic.imports", "qualname": "MIN_SYLL_IN_PARSE_UNIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"fullname": "prosodic.imports.MIN_WORDS_IN_PHRASE", "modulename": "prosodic.imports", "qualname": "MIN_WORDS_IN_PHRASE", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"fullname": "prosodic.imports.MAX_WORDS_IN_PHRASE", "modulename": "prosodic.imports", "qualname": "MAX_WORDS_IN_PHRASE", "kind": "variable", "doc": "<p></p>\n", "default_value": "15"}, "prosodic.imports.DEFAULT_LANG": {"fullname": "prosodic.imports.DEFAULT_LANG", "modulename": "prosodic.imports", "qualname": "DEFAULT_LANG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;en&#x27;"}, "prosodic.imports.LOG_FORMAT": {"fullname": "prosodic.imports.LOG_FORMAT", "modulename": "prosodic.imports", "qualname": "LOG_FORMAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&lt;green&gt;{time:YYYY-MM-DD HH:mm:ss.SSS}&lt;/green&gt; | &lt;cyan&gt;{function}&lt;/cyan&gt; | &lt;level&gt;{message}&lt;/level&gt; | &lt;cyan&gt;{file}&lt;/cyan&gt;:&lt;cyan&gt;{line}&lt;/cyan&gt;&#x27;"}, "prosodic.imports.LOG_LEVEL": {"fullname": "prosodic.imports.LOG_LEVEL", "modulename": "prosodic.imports", "qualname": "LOG_LEVEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, "prosodic.imports.DEFAULT_METER": {"fullname": "prosodic.imports.DEFAULT_METER", "modulename": "prosodic.imports", "qualname": "DEFAULT_METER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;default_english&#x27;"}, "prosodic.imports.METER_MAX_S": {"fullname": "prosodic.imports.METER_MAX_S", "modulename": "prosodic.imports", "qualname": "METER_MAX_S", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.imports.METER_MAX_W": {"fullname": "prosodic.imports.METER_MAX_W", "modulename": "prosodic.imports", "qualname": "METER_MAX_W", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"fullname": "prosodic.imports.METER_RESOLVE_OPTIONALITY", "modulename": "prosodic.imports", "qualname": "METER_RESOLVE_OPTIONALITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"fullname": "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS", "modulename": "prosodic.imports", "qualname": "DEFAULT_CATEGORICAL_CONSTRAINTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[]"}, "prosodic.imports.ESPEAK_PATHS": {"fullname": "prosodic.imports.ESPEAK_PATHS", "modulename": "prosodic.imports", "qualname": "ESPEAK_PATHS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;/opt/homebrew/Cellar/espeak/&#x27;, &#x27;/usr/lib/espeak/&#x27;, &#x27;/usr/lib/x86_64-linux-gnu/&#x27;, &#x27;/usr/lib/&#x27;, &#x27;/usr/local/lib/&#x27;]"}, "prosodic.imports.DF_INDEX": {"fullname": "prosodic.imports.DF_INDEX", "modulename": "prosodic.imports", "qualname": "DF_INDEX", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;line_txt&#x27;, &#x27;parse_rank&#x27;, &#x27;parse_txt&#x27;, &#x27;bestparse_txt&#x27;, &#x27;parse_meter&#x27;, &#x27;parse_stress&#x27;, &#x27;parse_meter_str&#x27;, &#x27;parse_stress_str&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;, &#x27;wordtoken_num&#x27;, &#x27;word_lang&#x27;, &#x27;wordtype_lang&#x27;, &#x27;wordtoken_txt&#x27;, &#x27;wordform_num&#x27;, &#x27;meterpos_num&#x27;, &#x27;meterpos_txt&#x27;, &#x27;meterpos_val&#x27;, &#x27;syll_num&#x27;, &#x27;syll_txt&#x27;, &#x27;syll_ipa&#x27;, &#x27;meterslot_num&#x27;, &#x27;meterslot_txt&#x27;, &#x27;phon_txt&#x27;]"}, "prosodic.imports.DF_COLS_RENAME": {"fullname": "prosodic.imports.DF_COLS_RENAME", "modulename": "prosodic.imports", "qualname": "DF_COLS_RENAME", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;wordtoken_sent_num&#x27;: &#x27;sent_num&#x27;, &#x27;wordtoken_sentpart_num&#x27;: &#x27;sentpart_num&#x27;, &#x27;meterpos_meter_val&#x27;: &#x27;meterpos_val&#x27;, &#x27;meterslot_w_peak&#x27;: &#x27;*w_peak&#x27;, &#x27;meterslot_w_stress&#x27;: &#x27;*w_stress&#x27;, &#x27;meterslot_s_unstress&#x27;: &#x27;*s_unstress&#x27;, &#x27;meterslot_unres_across&#x27;: &#x27;*unres_across&#x27;, &#x27;meterslot_unres_within&#x27;: &#x27;*unres_within&#x27;, &#x27;meterslot_foot_size&#x27;: &#x27;*foot_size&#x27;, &#x27;parse_line_num&#x27;: &#x27;line_num&#x27;, &#x27;parse_stanza_num&#x27;: &#x27;stanza_num&#x27;, &#x27;parse_line_txt&#x27;: &#x27;line_txt&#x27;, &#x27;parselist_num_parses&#x27;: &#x27;line_numparse&#x27;, &#x27;word_lang&#x27;: &#x27;wordtoken_lang&#x27;}"}, "prosodic.imports.DF_BADCOLS": {"fullname": "prosodic.imports.DF_BADCOLS", "modulename": "prosodic.imports", "qualname": "DF_BADCOLS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;word_txt&#x27;, &#x27;word_num&#x27;, &#x27;wordform_txt&#x27;]"}, "prosodic.imports.LANGS": {"fullname": "prosodic.imports.LANGS", "modulename": "prosodic.imports", "qualname": "LANGS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;en&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;fi&#x27;: &lt;functools._lru_cache_wrapper object&gt;}"}, "prosodic.imports.HTML_CSS": {"fullname": "prosodic.imports.HTML_CSS", "modulename": "prosodic.imports", "qualname": "HTML_CSS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n\\n.miniquote { margin-left:0em;margin-top:.5em;font-family:monospace; font-size:.8em;}\\n.parse { line-height:2.5em; letter-spacing:.1em;}\\n.parselist { list-style-type: none; }\\n.parselist li { padding-left:2em;}\\n.parselist li:nth-child(5n) { list-style-type: decimal; }\\n.parse { text-decoration-offset:5px; }\\n\\n.viol_y { text-decoration-color:#f43838; color: #f43838; }\\n.mtr_s { text-decoration: overline; }\\n.str_s { font-weight:600; }\\n.parselist &gt; li:first-of-type { list-style-type: decimal; }\\n.parselist &gt; li:last-of-type { list-style-type: decimal; }\\n&#x27;"}, "prosodic.imports.RHYME_MAX_DIST": {"fullname": "prosodic.imports.RHYME_MAX_DIST", "modulename": "prosodic.imports", "qualname": "RHYME_MAX_DIST", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "prosodic.imports.sonnet": {"fullname": "prosodic.imports.sonnet", "modulename": "prosodic.imports", "qualname": "sonnet", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nThose hours, that with gentle work did frame\\nThe lovely gaze where every eye doth dwell,\\nWill play the tyrants to the very same\\nAnd that unfair which fairly doth excel;\\nFor never-resting time leads summer on\\nTo hideous winter, and confounds him there;\\nSap checked with frost, and lusty leaves quite gone,\\nBeauty o\u2019er-snowed and bareness every where:\\nThen were not summer\u2019s distillation left,\\nA liquid prisoner pent in walls of glass,\\nBeauty\u2019s effect with beauty were bereft,\\nNor it, nor no remembrance what it was:\\nBut flowers distill\u2019d, though they with winter meet,\\nLeese but their show; their substance still lives sweet.\\n&#x27;"}, "prosodic.imports.GROUPBY_STANZA": {"fullname": "prosodic.imports.GROUPBY_STANZA", "modulename": "prosodic.imports", "qualname": "GROUPBY_STANZA", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;stanza_num&#x27;]"}, "prosodic.imports.GROUPBY_LINE": {"fullname": "prosodic.imports.GROUPBY_LINE", "modulename": "prosodic.imports", "qualname": "GROUPBY_LINE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;]"}, "prosodic.imports.GROUPBY_WORD": {"fullname": "prosodic.imports.GROUPBY_WORD", "modulename": "prosodic.imports", "qualname": "GROUPBY_WORD", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;, &#x27;wordtoken_num&#x27;, &#x27;wordform_num&#x27;]"}, "prosodic.imports.GROUPBY_SYLL": {"fullname": "prosodic.imports.GROUPBY_SYLL", "modulename": "prosodic.imports", "qualname": "GROUPBY_SYLL", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;, &#x27;wordtoken_num&#x27;, &#x27;wordform_num&#x27;, &#x27;syll_num&#x27;]"}, "prosodic.imports.GLOBALS": {"fullname": "prosodic.imports.GLOBALS", "modulename": "prosodic.imports", "qualname": "GLOBALS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;__name__&#x27;: &#x27;prosodic.imports&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: &#x27;prosodic&#x27;, &#x27;__loader__&#x27;: &lt;_frozen_importlib_external.SourceFileLoader object&gt;, &#x27;__spec__&#x27;: ModuleSpec(name=&#x27;prosodic.imports&#x27;, loader=&lt;_frozen_importlib_external.SourceFileLoader object&gt;, origin=&#x27;/Users/ryan/github/prosodic/prosodic/imports.py&#x27;), &#x27;__file__&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic/imports.py&#x27;, &#x27;__cached__&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic/__pycache__/imports.cpython-39.pyc&#x27;, &#x27;__builtins__&#x27;: {&#x27;__name__&#x27;: &#x27;builtins&#x27;, &#x27;__doc__&#x27;: &quot;Built-in functions, exceptions, and other objects.\\n\\nNoteworthy: None is the `nil&#x27; object; Ellipsis represents `...&#x27; in slices.&quot;, &#x27;__package__&#x27;: &#x27;&#x27;, &#x27;__loader__&#x27;: &lt;class &#x27;_frozen_importlib.BuiltinImporter&#x27;&gt;, &#x27;__spec__&#x27;: ModuleSpec(name=&#x27;builtins&#x27;, loader=&lt;class &#x27;_frozen_importlib.BuiltinImporter&#x27;&gt;, origin=&#x27;built-in&#x27;), &#x27;__build_class__&#x27;: &lt;built-in function __build_class__&gt;, &#x27;__import__&#x27;: &lt;built-in function __import__&gt;, &#x27;abs&#x27;: &lt;built-in function abs&gt;, &#x27;all&#x27;: &lt;built-in function all&gt;, &#x27;any&#x27;: &lt;built-in function any&gt;, &#x27;ascii&#x27;: &lt;built-in function ascii&gt;, &#x27;bin&#x27;: &lt;built-in function bin&gt;, &#x27;breakpoint&#x27;: &lt;built-in function breakpoint&gt;, &#x27;callable&#x27;: &lt;built-in function callable&gt;, &#x27;chr&#x27;: &lt;built-in function chr&gt;, &#x27;compile&#x27;: &lt;built-in function compile&gt;, &#x27;delattr&#x27;: &lt;built-in function delattr&gt;, &#x27;dir&#x27;: &lt;built-in function dir&gt;, &#x27;divmod&#x27;: &lt;built-in function divmod&gt;, &#x27;eval&#x27;: &lt;built-in function eval&gt;, &#x27;exec&#x27;: &lt;built-in function exec&gt;, &#x27;format&#x27;: &lt;built-in function format&gt;, &#x27;getattr&#x27;: &lt;built-in function getattr&gt;, &#x27;globals&#x27;: &lt;built-in function globals&gt;, &#x27;hasattr&#x27;: &lt;built-in function hasattr&gt;, &#x27;hash&#x27;: &lt;built-in function hash&gt;, &#x27;hex&#x27;: &lt;built-in function hex&gt;, &#x27;id&#x27;: &lt;built-in function id&gt;, &#x27;input&#x27;: &lt;built-in function input&gt;, &#x27;isinstance&#x27;: &lt;built-in function isinstance&gt;, &#x27;issubclass&#x27;: &lt;built-in function issubclass&gt;, &#x27;iter&#x27;: &lt;built-in function iter&gt;, &#x27;len&#x27;: &lt;built-in function len&gt;, &#x27;locals&#x27;: &lt;built-in function locals&gt;, &#x27;max&#x27;: &lt;built-in function max&gt;, &#x27;min&#x27;: &lt;built-in function min&gt;, &#x27;next&#x27;: &lt;built-in function next&gt;, &#x27;oct&#x27;: &lt;built-in function oct&gt;, &#x27;ord&#x27;: &lt;built-in function ord&gt;, &#x27;pow&#x27;: &lt;built-in function pow&gt;, &#x27;print&#x27;: &lt;built-in function print&gt;, &#x27;repr&#x27;: &lt;built-in function repr&gt;, &#x27;round&#x27;: &lt;built-in function round&gt;, &#x27;setattr&#x27;: &lt;built-in function setattr&gt;, &#x27;sorted&#x27;: &lt;built-in function sorted&gt;, &#x27;sum&#x27;: &lt;built-in function sum&gt;, &#x27;vars&#x27;: &lt;built-in function vars&gt;, &#x27;None&#x27;: None, &#x27;Ellipsis&#x27;: Ellipsis, &#x27;NotImplemented&#x27;: NotImplemented, &#x27;False&#x27;: False, &#x27;True&#x27;: True, &#x27;bool&#x27;: &lt;class &#x27;bool&#x27;&gt;, &#x27;memoryview&#x27;: &lt;class &#x27;memoryview&#x27;&gt;, &#x27;bytearray&#x27;: &lt;class &#x27;bytearray&#x27;&gt;, &#x27;bytes&#x27;: &lt;class &#x27;bytes&#x27;&gt;, &#x27;classmethod&#x27;: &lt;class &#x27;classmethod&#x27;&gt;, &#x27;complex&#x27;: &lt;class &#x27;complex&#x27;&gt;, &#x27;dict&#x27;: &lt;class &#x27;dict&#x27;&gt;, &#x27;enumerate&#x27;: &lt;class &#x27;enumerate&#x27;&gt;, &#x27;filter&#x27;: &lt;class &#x27;filter&#x27;&gt;, &#x27;float&#x27;: &lt;class &#x27;float&#x27;&gt;, &#x27;frozenset&#x27;: &lt;class &#x27;frozenset&#x27;&gt;, &#x27;property&#x27;: &lt;class &#x27;property&#x27;&gt;, &#x27;int&#x27;: &lt;class &#x27;int&#x27;&gt;, &#x27;list&#x27;: &lt;class &#x27;list&#x27;&gt;, &#x27;map&#x27;: &lt;class &#x27;map&#x27;&gt;, &#x27;object&#x27;: &lt;class &#x27;object&#x27;&gt;, &#x27;range&#x27;: &lt;class &#x27;range&#x27;&gt;, &#x27;reversed&#x27;: &lt;class &#x27;reversed&#x27;&gt;, &#x27;set&#x27;: &lt;class &#x27;set&#x27;&gt;, &#x27;slice&#x27;: &lt;class &#x27;slice&#x27;&gt;, &#x27;staticmethod&#x27;: &lt;class &#x27;staticmethod&#x27;&gt;, &#x27;str&#x27;: &lt;class &#x27;str&#x27;&gt;, &#x27;super&#x27;: &lt;class &#x27;super&#x27;&gt;, &#x27;tuple&#x27;: &lt;class &#x27;tuple&#x27;&gt;, &#x27;type&#x27;: &lt;class &#x27;type&#x27;&gt;, &#x27;zip&#x27;: &lt;class &#x27;zip&#x27;&gt;, &#x27;__debug__&#x27;: True, &#x27;BaseException&#x27;: &lt;class &#x27;BaseException&#x27;&gt;, &#x27;Exception&#x27;: &lt;class &#x27;Exception&#x27;&gt;, &#x27;TypeError&#x27;: &lt;class &#x27;TypeError&#x27;&gt;, &#x27;StopAsyncIteration&#x27;: &lt;class &#x27;StopAsyncIteration&#x27;&gt;, &#x27;StopIteration&#x27;: &lt;class &#x27;StopIteration&#x27;&gt;, &#x27;GeneratorExit&#x27;: &lt;class &#x27;GeneratorExit&#x27;&gt;, &#x27;SystemExit&#x27;: &lt;class &#x27;SystemExit&#x27;&gt;, &#x27;KeyboardInterrupt&#x27;: &lt;class &#x27;KeyboardInterrupt&#x27;&gt;, &#x27;ImportError&#x27;: &lt;class &#x27;ImportError&#x27;&gt;, &#x27;ModuleNotFoundError&#x27;: &lt;class &#x27;ModuleNotFoundError&#x27;&gt;, &#x27;OSError&#x27;: &lt;class &#x27;OSError&#x27;&gt;, &#x27;EnvironmentError&#x27;: &lt;class &#x27;OSError&#x27;&gt;, &#x27;IOError&#x27;: &lt;class &#x27;OSError&#x27;&gt;, &#x27;EOFError&#x27;: &lt;class &#x27;EOFError&#x27;&gt;, &#x27;RuntimeError&#x27;: &lt;class &#x27;RuntimeError&#x27;&gt;, &#x27;RecursionError&#x27;: &lt;class &#x27;RecursionError&#x27;&gt;, &#x27;NotImplementedError&#x27;: &lt;class &#x27;NotImplementedError&#x27;&gt;, &#x27;NameError&#x27;: &lt;class &#x27;NameError&#x27;&gt;, &#x27;UnboundLocalError&#x27;: &lt;class &#x27;UnboundLocalError&#x27;&gt;, &#x27;AttributeError&#x27;: &lt;class &#x27;AttributeError&#x27;&gt;, &#x27;SyntaxError&#x27;: &lt;class &#x27;SyntaxError&#x27;&gt;, &#x27;IndentationError&#x27;: &lt;class &#x27;IndentationError&#x27;&gt;, &#x27;TabError&#x27;: &lt;class &#x27;TabError&#x27;&gt;, &#x27;LookupError&#x27;: &lt;class &#x27;LookupError&#x27;&gt;, &#x27;IndexError&#x27;: &lt;class &#x27;IndexError&#x27;&gt;, &#x27;KeyError&#x27;: &lt;class &#x27;KeyError&#x27;&gt;, &#x27;ValueError&#x27;: &lt;class &#x27;ValueError&#x27;&gt;, &#x27;UnicodeError&#x27;: &lt;class &#x27;UnicodeError&#x27;&gt;, &#x27;UnicodeEncodeError&#x27;: &lt;class &#x27;UnicodeEncodeError&#x27;&gt;, &#x27;UnicodeDecodeError&#x27;: &lt;class &#x27;UnicodeDecodeError&#x27;&gt;, &#x27;UnicodeTranslateError&#x27;: &lt;class &#x27;UnicodeTranslateError&#x27;&gt;, &#x27;AssertionError&#x27;: &lt;class &#x27;AssertionError&#x27;&gt;, &#x27;ArithmeticError&#x27;: &lt;class &#x27;ArithmeticError&#x27;&gt;, &#x27;FloatingPointError&#x27;: &lt;class &#x27;FloatingPointError&#x27;&gt;, &#x27;OverflowError&#x27;: &lt;class &#x27;OverflowError&#x27;&gt;, &#x27;ZeroDivisionError&#x27;: &lt;class &#x27;ZeroDivisionError&#x27;&gt;, &#x27;SystemError&#x27;: &lt;class &#x27;SystemError&#x27;&gt;, &#x27;ReferenceError&#x27;: &lt;class &#x27;ReferenceError&#x27;&gt;, &#x27;MemoryError&#x27;: &lt;class &#x27;MemoryError&#x27;&gt;, &#x27;BufferError&#x27;: &lt;class &#x27;BufferError&#x27;&gt;, &#x27;Warning&#x27;: &lt;class &#x27;Warning&#x27;&gt;, &#x27;UserWarning&#x27;: &lt;class &#x27;UserWarning&#x27;&gt;, &#x27;DeprecationWarning&#x27;: &lt;class &#x27;DeprecationWarning&#x27;&gt;, &#x27;PendingDeprecationWarning&#x27;: &lt;class &#x27;PendingDeprecationWarning&#x27;&gt;, &#x27;SyntaxWarning&#x27;: &lt;class &#x27;SyntaxWarning&#x27;&gt;, &#x27;RuntimeWarning&#x27;: &lt;class &#x27;RuntimeWarning&#x27;&gt;, &#x27;FutureWarning&#x27;: &lt;class &#x27;FutureWarning&#x27;&gt;, &#x27;ImportWarning&#x27;: &lt;class &#x27;ImportWarning&#x27;&gt;, &#x27;UnicodeWarning&#x27;: &lt;class &#x27;UnicodeWarning&#x27;&gt;, &#x27;BytesWarning&#x27;: &lt;class &#x27;BytesWarning&#x27;&gt;, &#x27;ResourceWarning&#x27;: &lt;class &#x27;ResourceWarning&#x27;&gt;, &#x27;ConnectionError&#x27;: &lt;class &#x27;ConnectionError&#x27;&gt;, &#x27;BlockingIOError&#x27;: &lt;class &#x27;BlockingIOError&#x27;&gt;, &#x27;BrokenPipeError&#x27;: &lt;class &#x27;BrokenPipeError&#x27;&gt;, &#x27;ChildProcessError&#x27;: &lt;class &#x27;ChildProcessError&#x27;&gt;, &#x27;ConnectionAbortedError&#x27;: &lt;class &#x27;ConnectionAbortedError&#x27;&gt;, &#x27;ConnectionRefusedError&#x27;: &lt;class &#x27;ConnectionRefusedError&#x27;&gt;, &#x27;ConnectionResetError&#x27;: &lt;class &#x27;ConnectionResetError&#x27;&gt;, &#x27;FileExistsError&#x27;: &lt;class &#x27;FileExistsError&#x27;&gt;, &#x27;FileNotFoundError&#x27;: &lt;class &#x27;FileNotFoundError&#x27;&gt;, &#x27;IsADirectoryError&#x27;: &lt;class &#x27;IsADirectoryError&#x27;&gt;, &#x27;NotADirectoryError&#x27;: &lt;class &#x27;NotADirectoryError&#x27;&gt;, &#x27;InterruptedError&#x27;: &lt;class &#x27;InterruptedError&#x27;&gt;, &#x27;PermissionError&#x27;: &lt;class &#x27;PermissionError&#x27;&gt;, &#x27;ProcessLookupError&#x27;: &lt;class &#x27;ProcessLookupError&#x27;&gt;, &#x27;TimeoutError&#x27;: &lt;class &#x27;TimeoutError&#x27;&gt;, &#x27;open&#x27;: &lt;built-in function open&gt;, &#x27;quit&#x27;: Use quit() or Ctrl-D (i.e. EOF) to exit, &#x27;exit&#x27;: Use exit() or Ctrl-D (i.e. EOF) to exit, &#x27;copyright&#x27;: Copyright (c) 2001-2022 Python Software Foundation.\nAll Rights Reserved.\n\nCopyright (c) 2000 BeOpen.com.\nAll Rights Reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.\nAll Rights Reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.\nAll Rights Reserved., &#x27;credits&#x27;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands\n    for supporting Python development.  See www.python.org for more information., &#x27;license&#x27;: Type license() to see the full license text, &#x27;help&#x27;: Type help() for interactive help, or help(object) for help about object., &#x27;__pybind11_internals_v4_clang_libcpp_cxxabi1002__&#x27;: &lt;capsule object NULL&gt;, &#x27;profile&#x27;: &lt;function profile&gt;}, &#x27;os&#x27;: &lt;module &#x27;os&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/os.py&#x27;&gt;, &#x27;sys&#x27;: &lt;module &#x27;sys&#x27; (built-in)&gt;, &#x27;logmap&#x27;: &lt;class &#x27;logmap.logmap.logmap&#x27;&gt;, &#x27;logger&#x27;: &lt;loguru.logger handlers=[(id=1, level=10, sink=&lt;_io.StringIO object&gt;)]&gt;, &#x27;b64decode&#x27;: &lt;function b64decode&gt;, &#x27;b64encode&#x27;: &lt;function b64encode&gt;, &#x27;wraps&#x27;: &lt;function wraps&gt;, &#x27;pprint&#x27;: &lt;function pprint&gt;, &#x27;pformat&#x27;: &lt;function pformat&gt;, &#x27;orjson&#x27;: &lt;module &#x27;orjson&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/orjson/__init__.py&#x27;&gt;, &#x27;json&#x27;: &lt;module &#x27;json&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/json/__init__.py&#x27;&gt;, &#x27;Multiset&#x27;: &lt;class &#x27;multiset.Multiset&#x27;&gt;, &#x27;tqdm&#x27;: &lt;class &#x27;tqdm.std.tqdm&#x27;&gt;, &#x27;logging&#x27;: &lt;module &#x27;logging&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/logging/__init__.py&#x27;&gt;, &#x27;detect_lang&#x27;: &lt;function detect&gt;, &#x27;pd&#x27;: &lt;module &#x27;pandas&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/pandas/__init__.py&#x27;&gt;, &#x27;nltk&#x27;: &lt;module &#x27;nltk&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/nltk/__init__.py&#x27;&gt;, &#x27;np&#x27;: &lt;module &#x27;numpy&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/numpy/__init__.py&#x27;&gt;, &#x27;ftfy&#x27;: &lt;module &#x27;ftfy&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/ftfy/__init__.py&#x27;&gt;, &#x27;builtins&#x27;: &lt;module &#x27;builtins&#x27; (built-in)&gt;, &#x27;mp&#x27;: &lt;module &#x27;multiprocessing&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/multiprocessing/__init__.py&#x27;&gt;, &#x27;deque&#x27;: &lt;class &#x27;collections.deque&#x27;&gt;, &#x27;requests&#x27;: &lt;module &#x27;requests&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/requests/__init__.py&#x27;&gt;, &#x27;textwrap&#x27;: &lt;module &#x27;textwrap&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/textwrap.py&#x27;&gt;, &#x27;random&#x27;: &lt;module &#x27;random&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/random.py&#x27;&gt;, &#x27;string&#x27;: &lt;module &#x27;string&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/string.py&#x27;&gt;, &#x27;cached_property&#x27;: &lt;class &#x27;functools.cached_property&#x27;&gt;, &#x27;cache&#x27;: &lt;function lru_cache&gt;, &#x27;total_ordering&#x27;: &lt;function total_ordering&gt;, &#x27;copy&#x27;: &lt;function copy&gt;, &#x27;itertools&#x27;: &lt;module &#x27;itertools&#x27; (built-in)&gt;, &#x27;zlib&#x27;: &lt;module &#x27;zlib&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/lib-dynload/zlib.cpython-39-darwin.so&#x27;&gt;, &#x27;time&#x27;: &lt;module &#x27;time&#x27; (built-in)&gt;, &#x27;warnings&#x27;: &lt;module &#x27;warnings&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/warnings.py&#x27;&gt;, &#x27;UserList&#x27;: &lt;class &#x27;collections.UserList&#x27;&gt;, &#x27;Counter&#x27;: typing.Counter, &#x27;defaultdict&#x27;: &lt;class &#x27;collections.defaultdict&#x27;&gt;, &#x27;Annotated&#x27;: &lt;class &#x27;typing.Annotated&#x27;&gt;, &#x27;Any&#x27;: typing.Any, &#x27;Callable&#x27;: typing.Callable, &#x27;ClassVar&#x27;: typing.ClassVar, &#x27;Final&#x27;: typing.Final, &#x27;ForwardRef&#x27;: &lt;class &#x27;typing.ForwardRef&#x27;&gt;, &#x27;Generic&#x27;: &lt;class &#x27;typing.Generic&#x27;&gt;, &#x27;Literal&#x27;: typing.Literal, &#x27;Optional&#x27;: typing.Optional, &#x27;Protocol&#x27;: &lt;class &#x27;typing.Protocol&#x27;&gt;, &#x27;Tuple&#x27;: typing.Tuple, &#x27;Type&#x27;: typing.Type, &#x27;TypeVar&#x27;: &lt;class &#x27;typing.TypeVar&#x27;&gt;, &#x27;Union&#x27;: typing.Union, &#x27;AbstractSet&#x27;: typing.AbstractSet, &#x27;ByteString&#x27;: typing.ByteString, &#x27;Container&#x27;: typing.Container, &#x27;ContextManager&#x27;: typing.ContextManager, &#x27;Hashable&#x27;: typing.Hashable, &#x27;ItemsView&#x27;: typing.ItemsView, &#x27;Iterable&#x27;: typing.Iterable, &#x27;Iterator&#x27;: typing.Iterator, &#x27;KeysView&#x27;: typing.KeysView, &#x27;Mapping&#x27;: typing.Mapping, &#x27;MappingView&#x27;: typing.MappingView, &#x27;MutableMapping&#x27;: typing.MutableMapping, &#x27;MutableSequence&#x27;: typing.MutableSequence, &#x27;MutableSet&#x27;: typing.MutableSet, &#x27;Sequence&#x27;: typing.Sequence, &#x27;Sized&#x27;: typing.Sized, &#x27;ValuesView&#x27;: typing.ValuesView, &#x27;Awaitable&#x27;: typing.Awaitable, &#x27;AsyncIterator&#x27;: typing.AsyncIterator, &#x27;AsyncIterable&#x27;: typing.AsyncIterable, &#x27;Coroutine&#x27;: typing.Coroutine, &#x27;Collection&#x27;: typing.Collection, &#x27;AsyncGenerator&#x27;: typing.AsyncGenerator, &#x27;AsyncContextManager&#x27;: typing.AsyncContextManager, &#x27;Reversible&#x27;: typing.Reversible, &#x27;SupportsAbs&#x27;: &lt;class &#x27;typing.SupportsAbs&#x27;&gt;, &#x27;SupportsBytes&#x27;: &lt;class &#x27;typing.SupportsBytes&#x27;&gt;, &#x27;SupportsComplex&#x27;: &lt;class &#x27;typing.SupportsComplex&#x27;&gt;, &#x27;SupportsFloat&#x27;: &lt;class &#x27;typing.SupportsFloat&#x27;&gt;, &#x27;SupportsIndex&#x27;: &lt;class &#x27;typing.SupportsIndex&#x27;&gt;, &#x27;SupportsInt&#x27;: &lt;class &#x27;typing.SupportsInt&#x27;&gt;, &#x27;SupportsRound&#x27;: &lt;class &#x27;typing.SupportsRound&#x27;&gt;, &#x27;ChainMap&#x27;: typing.ChainMap, &#x27;Deque&#x27;: typing.Deque, &#x27;Dict&#x27;: typing.Dict, &#x27;DefaultDict&#x27;: typing.DefaultDict, &#x27;List&#x27;: typing.List, &#x27;OrderedDict&#x27;: typing.OrderedDict, &#x27;Set&#x27;: typing.Set, &#x27;FrozenSet&#x27;: typing.FrozenSet, &#x27;NamedTuple&#x27;: &lt;function NamedTuple&gt;, &#x27;TypedDict&#x27;: &lt;function TypedDict&gt;, &#x27;Generator&#x27;: typing.Generator, &#x27;BinaryIO&#x27;: &lt;class &#x27;typing.BinaryIO&#x27;&gt;, &#x27;IO&#x27;: &lt;class &#x27;typing.IO&#x27;&gt;, &#x27;Match&#x27;: typing.Match, &#x27;Pattern&#x27;: typing.Pattern, &#x27;TextIO&#x27;: &lt;class &#x27;typing.TextIO&#x27;&gt;, &#x27;AnyStr&#x27;: ~AnyStr, &#x27;cast&#x27;: &lt;function cast&gt;, &#x27;final&#x27;: &lt;function final&gt;, &#x27;get_args&#x27;: &lt;function get_args&gt;, &#x27;get_origin&#x27;: &lt;function get_origin&gt;, &#x27;get_type_hints&#x27;: &lt;function get_type_hints&gt;, &#x27;NewType&#x27;: &lt;function NewType&gt;, &#x27;no_type_check&#x27;: &lt;function no_type_check&gt;, &#x27;no_type_check_decorator&#x27;: &lt;function no_type_check_decorator&gt;, &#x27;NoReturn&#x27;: typing.NoReturn, &#x27;overload&#x27;: &lt;function overload&gt;, &#x27;runtime_checkable&#x27;: &lt;function runtime_checkable&gt;, &#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.texts.Text&#x27;&gt;, &#x27;TYPE_CHECKING&#x27;: False, &#x27;re&#x27;: &lt;module &#x27;re&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/re.py&#x27;&gt;, &#x27;contextmanager&#x27;: &lt;function contextmanager&gt;, &#x27;panphon&#x27;: &lt;module &#x27;panphon&#x27; from &#x27;/Users/ryan/github/prosodic/venv/lib/python3.9/site-packages/panphon/__init__.py&#x27;&gt;, &#x27;csv&#x27;: &lt;module &#x27;csv&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/csv.py&#x27;&gt;, &#x27;resources&#x27;: &lt;module &#x27;importlib.resources&#x27; from &#x27;/Users/ryan/.pyenv/versions/3.9.13/lib/python3.9/importlib/resources.py&#x27;&gt;, &#x27;PATH_HERE&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic&#x27;, &#x27;PATH_REPO&#x27;: &#x27;/Users/ryan/github/prosodic&#x27;, &#x27;PATH_PROSODIC&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic&#x27;, &#x27;PATH_LANGS&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic/langs&#x27;, &#x27;PATH_PHONS&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic/langs/phonemes.json&#x27;, &#x27;PATH_WEB&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic/web&#x27;, &#x27;PATH_REPO_DATA&#x27;: &#x27;/Users/ryan/github/prosodic/data&#x27;, &#x27;PATH_DICTS&#x27;: &#x27;/Users/ryan/github/prosodic/data/dicts&#x27;, &#x27;PATH_HOME&#x27;: &#x27;/Users/ryan/prosodic_data&#x27;, &#x27;PATH_HOME_DATA&#x27;: &#x27;/Users/ryan/prosodic_data/data&#x27;, &#x27;PATH_HOME_DATA_CACHE&#x27;: &#x27;/Users/ryan/prosodic_data/data/cache&#x27;, &#x27;USE_CACHE&#x27;: False, &#x27;USE_REDIS&#x27;: False, &#x27;HASHSTR_LEN&#x27;: None, &#x27;DEFAULT_NUM_PROC&#x27;: None, &#x27;PATH_MTREE&#x27;: &#x27;/Users/ryan/github/prosodic/metricaltree&#x27;, &#x27;DASHES&#x27;: [&#x27;--&#x27;, &#x27;\u2013&#x27;, &#x27;\u2014&#x27;], &#x27;REPLACE_DASHES&#x27;: True, &#x27;PSTRESS_THRESH_DEFAULT&#x27;: 2, &#x27;TOKENIZER&#x27;: &#x27;[^\\\\s+]+&#x27;, &#x27;SEPS_PHRASE&#x27;: {&#x27;,&#x27;, &#x27;\u2014&#x27;, &#x27;;&#x27;, &#x27;)&#x27;, &#x27;!&#x27;, &#x27;\u201c&#x27;, &#x27;\u201d&#x27;, &#x27;&quot;&#x27;, &#x27;:&#x27;, &#x27;\u2013&#x27;, &#x27;]&#x27;, &#x27;\u2019&#x27;, &#x27;\u2018&#x27;, &#x27;[&#x27;, &#x27;.&#x27;, &#x27;(&#x27;, &#x27;?&#x27;}, &#x27;SEP_STANZA&#x27;: &#x27;\\n\\n&#x27;, &#x27;SEP_PARA&#x27;: &#x27;\\n\\n&#x27;, &#x27;SEP_LINE&#x27;: &#x27;\\n&#x27;, &#x27;DEFAULT_PARSE_MAXSEC&#x27;: 30, &#x27;DEFAULT_LINE_LIM&#x27;: None, &#x27;DEFAULT_PROCESSORS&#x27;: {&#x27;tokenize&#x27;: &#x27;combined&#x27;}, &#x27;MAX_SYLL_IN_PARSE_UNIT&#x27;: 14, &#x27;MIN_SYLL_IN_PARSE_UNIT&#x27;: None, &#x27;MIN_WORDS_IN_PHRASE&#x27;: 2, &#x27;MAX_WORDS_IN_PHRASE&#x27;: 15, &#x27;DEFAULT_LANG&#x27;: &#x27;en&#x27;, &#x27;LOG_FORMAT&#x27;: &#x27;&lt;green&gt;{time:YYYY-MM-DD HH:mm:ss.SSS}&lt;/green&gt; | &lt;cyan&gt;{function}&lt;/cyan&gt; | &lt;level&gt;{message}&lt;/level&gt; | &lt;cyan&gt;{file}&lt;/cyan&gt;:&lt;cyan&gt;{line}&lt;/cyan&gt;&#x27;, &#x27;LOG_LEVEL&#x27;: 5, &#x27;DEFAULT_METER&#x27;: &#x27;default_english&#x27;, &#x27;METER_MAX_S&#x27;: 2, &#x27;METER_MAX_W&#x27;: 2, &#x27;METER_RESOLVE_OPTIONALITY&#x27;: True, &#x27;DEFAULT_CATEGORICAL_CONSTRAINTS&#x27;: [], &#x27;ESPEAK_PATHS&#x27;: [&#x27;/opt/homebrew/Cellar/espeak/&#x27;, &#x27;/usr/lib/espeak/&#x27;, &#x27;/usr/lib/x86_64-linux-gnu/&#x27;, &#x27;/usr/lib/&#x27;, &#x27;/usr/local/lib/&#x27;], &#x27;DF_INDEX&#x27;: [&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;line_txt&#x27;, &#x27;parse_rank&#x27;, &#x27;parse_txt&#x27;, &#x27;bestparse_txt&#x27;, &#x27;parse_meter&#x27;, &#x27;parse_stress&#x27;, &#x27;parse_meter_str&#x27;, &#x27;parse_stress_str&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;, &#x27;wordtoken_num&#x27;, &#x27;word_lang&#x27;, &#x27;wordtype_lang&#x27;, &#x27;wordtoken_txt&#x27;, &#x27;wordform_num&#x27;, &#x27;meterpos_num&#x27;, &#x27;meterpos_txt&#x27;, &#x27;meterpos_val&#x27;, &#x27;syll_num&#x27;, &#x27;syll_txt&#x27;, &#x27;syll_ipa&#x27;, &#x27;meterslot_num&#x27;, &#x27;meterslot_txt&#x27;, &#x27;phon_txt&#x27;], &#x27;DF_COLS_RENAME&#x27;: {&#x27;wordtoken_sent_num&#x27;: &#x27;sent_num&#x27;, &#x27;wordtoken_sentpart_num&#x27;: &#x27;sentpart_num&#x27;, &#x27;meterpos_meter_val&#x27;: &#x27;meterpos_val&#x27;, &#x27;meterslot_w_peak&#x27;: &#x27;*w_peak&#x27;, &#x27;meterslot_w_stress&#x27;: &#x27;*w_stress&#x27;, &#x27;meterslot_s_unstress&#x27;: &#x27;*s_unstress&#x27;, &#x27;meterslot_unres_across&#x27;: &#x27;*unres_across&#x27;, &#x27;meterslot_unres_within&#x27;: &#x27;*unres_within&#x27;, &#x27;meterslot_foot_size&#x27;: &#x27;*foot_size&#x27;, &#x27;parse_line_num&#x27;: &#x27;line_num&#x27;, &#x27;parse_stanza_num&#x27;: &#x27;stanza_num&#x27;, &#x27;parse_line_txt&#x27;: &#x27;line_txt&#x27;, &#x27;parselist_num_parses&#x27;: &#x27;line_numparse&#x27;, &#x27;word_lang&#x27;: &#x27;wordtoken_lang&#x27;}, &#x27;DF_BADCOLS&#x27;: [&#x27;word_txt&#x27;, &#x27;word_num&#x27;, &#x27;wordform_txt&#x27;], &#x27;LANGS&#x27;: {&#x27;en&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;fi&#x27;: &lt;functools._lru_cache_wrapper object&gt;}, &#x27;HTML_CSS&#x27;: &#x27;\\n\\n.miniquote { margin-left:0em;margin-top:.5em;font-family:monospace; font-size:.8em;}\\n.parse { line-height:2.5em; letter-spacing:.1em;}\\n.parselist { list-style-type: none; }\\n.parselist li { padding-left:2em;}\\n.parselist li:nth-child(5n) { list-style-type: decimal; }\\n.parse { text-decoration-offset:5px; }\\n\\n.viol_y { text-decoration-color:#f43838; color: #f43838; }\\n.mtr_s { text-decoration: overline; }\\n.str_s { font-weight:600; }\\n.parselist &gt; li:first-of-type { list-style-type: decimal; }\\n.parselist &gt; li:last-of-type { list-style-type: decimal; }\\n&#x27;, &#x27;RHYME_MAX_DIST&#x27;: 1, &#x27;profile&#x27;: &lt;function profile&gt;, &#x27;sonnet&#x27;: &#x27;\\nThose hours, that with gentle work did frame\\nThe lovely gaze where every eye doth dwell,\\nWill play the tyrants to the very same\\nAnd that unfair which fairly doth excel;\\nFor never-resting time leads summer on\\nTo hideous winter, and confounds him there;\\nSap checked with frost, and lusty leaves quite gone,\\nBeauty o\u2019er-snowed and bareness every where:\\nThen were not summer\u2019s distillation left,\\nA liquid prisoner pent in walls of glass,\\nBeauty\u2019s effect with beauty were bereft,\\nNor it, nor no remembrance what it was:\\nBut flowers distill\u2019d, though they with winter meet,\\nLeese but their show; their substance still lives sweet.\\n&#x27;, &#x27;GROUPBY_STANZA&#x27;: [&#x27;stanza_num&#x27;], &#x27;GROUPBY_LINE&#x27;: [&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;], &#x27;GROUPBY_WORD&#x27;: [&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;, &#x27;wordtoken_num&#x27;, &#x27;wordform_num&#x27;], &#x27;GROUPBY_SYLL&#x27;: [&#x27;stanza_num&#x27;, &#x27;line_num&#x27;, &#x27;sent_num&#x27;, &#x27;sentpart_num&#x27;, &#x27;wordtoken_num&#x27;, &#x27;wordform_num&#x27;, &#x27;syll_num&#x27;], &#x27;SimpleCache&#x27;: &lt;class &#x27;prosodic.utils.SimpleCache&#x27;&gt;, &#x27;retry_on_io_error&#x27;: &lt;function retry_on_io_error&gt;, &#x27;group_ents&#x27;: &lt;function group_ents&gt;, &#x27;groupby&#x27;: &lt;function groupby&gt;, &#x27;get_txt&#x27;: &lt;function get_txt&gt;, &#x27;clean_text&#x27;: &lt;function clean_text&gt;, &#x27;get_attr_str&#x27;: &lt;function get_attr_str&gt;, &#x27;safesum&#x27;: &lt;function safesum&gt;, &#x27;setindex&#x27;: &lt;function setindex&gt;, &#x27;get_stress&#x27;: &lt;function get_stress&gt;, &#x27;get_initial_whitespace&#x27;: &lt;function get_initial_whitespace&gt;, &#x27;unique&#x27;: &lt;function unique&gt;, &#x27;hashstr&#x27;: &lt;function hashstr&gt;, &#x27;read_json&#x27;: &lt;function read_json&gt;, &#x27;from_json&#x27;: &lt;function from_json&gt;, &#x27;load&#x27;: &lt;function load&gt;, &#x27;to_json&#x27;: &lt;function to_json&gt;, &#x27;ensure_dir&#x27;: &lt;function ensure_dir&gt;, &#x27;encode_cache&#x27;: &lt;function encode_cache&gt;, &#x27;decode_cache&#x27;: &lt;function decode_cache&gt;, &#x27;to_html&#x27;: &lt;function to_html&gt;, &#x27;enable_caching&#x27;: &lt;function enable_caching&gt;, &#x27;caching_is_enabled&#x27;: &lt;function caching_is_enabled&gt;, &#x27;disable_caching&#x27;: &lt;function disable_caching&gt;, &#x27;caching_enabled&#x27;: &lt;function caching_enabled&gt;, &#x27;caching_disabled&#x27;: &lt;function caching_disabled&gt;, &#x27;logging_disabled&#x27;: &lt;function logging_disabled&gt;, &#x27;logging_enabled&#x27;: &lt;function logging_enabled&gt;, &#x27;force_int&#x27;: &lt;function force_int&gt;, &#x27;tokenize_agnostic&#x27;: &lt;function tokenize_agnostic&gt;, &#x27;tokenizers&#x27;: &lt;module &#x27;prosodic.sents.tokenizers&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/sents/tokenizers.py&#x27;&gt;, &#x27;get_sent_tokenizer&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;tokenize_sents_txt&#x27;: &lt;function tokenize_sents_txt&gt;, &#x27;tokenize_words_txt&#x27;: &lt;function tokenize_words_txt&gt;, &#x27;tokenize_sentwords_df&#x27;: &lt;function tokenize_sentwords_df&gt;, &#x27;tokenize_sentwords_iter&#x27;: &lt;function tokenize_sentwords_iter&gt;, &#x27;sents&#x27;: &lt;module &#x27;prosodic.sents.sents&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/sents/sents.py&#x27;&gt;, &#x27;Entity&#x27;: &lt;class &#x27;prosodic.ents.Entity&#x27;&gt;, &#x27;EntityList&#x27;: &lt;class &#x27;prosodic.ents.EntityList&#x27;&gt;, &#x27;texts&#x27;: &lt;module &#x27;prosodic.texts.texts&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/texts/texts.py&#x27;&gt;, &#x27;NUMBUILT&#x27;: 0, &#x27;lines&#x27;: &lt;module &#x27;prosodic.texts.lines&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/texts/lines.py&#x27;&gt;, &#x27;stanzas&#x27;: &lt;module &#x27;prosodic.texts.stanzas&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/texts/stanzas.py&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.texts.lines.Line&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.stanzas.Stanza&#x27;&gt;, &#x27;StanzaList&#x27;: &lt;class &#x27;prosodic.texts.stanzas.StanzaList&#x27;&gt;, &#x27;LineList&#x27;: &lt;class &#x27;prosodic.texts.lines.LineList&#x27;&gt;, &#x27;words&#x27;: &lt;module &#x27;prosodic.words.words&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/words/words.py&#x27;&gt;, &#x27;SYLL_SEP&#x27;: &#x27;.&#x27;, &#x27;Word&#x27;: &lt;function Word&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordToken&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordType&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;WordTypeList&#x27;: &lt;class &#x27;prosodic.words.words.WordTypeList&#x27;&gt;, &#x27;WordFormList&#x27;: &lt;class &#x27;prosodic.words.words.WordFormList&#x27;&gt;, &#x27;WordTokenList&#x27;: &lt;class &#x27;prosodic.words.words.WordTokenList&#x27;&gt;, &#x27;phonemes&#x27;: &lt;module &#x27;prosodic.words.phonemes&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/words/phonemes.py&#x27;&gt;, &#x27;syllables&#x27;: &lt;module &#x27;prosodic.words.syllables&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/words/syllables.py&#x27;&gt;, &#x27;PhonemeList&#x27;: &lt;class &#x27;prosodic.words.phonemes.PhonemeList&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.syllables.Syllable&#x27;&gt;, &#x27;SyllableList&#x27;: &lt;class &#x27;prosodic.words.syllables.SyllableList&#x27;&gt;, &#x27;PhonemeClass&#x27;: &lt;class &#x27;prosodic.words.phonemes.PhonemeClass&#x27;&gt;, &#x27;get_phoneme_featuretable&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;Phoneme&#x27;: &lt;function Phoneme&gt;, &#x27;FEATS_PANPHON&#x27;: [&#x27;num&#x27;, &#x27;txt&#x27;, &#x27;syl&#x27;, &#x27;son&#x27;, &#x27;cons&#x27;, &#x27;cont&#x27;, &#x27;delrel&#x27;, &#x27;lat&#x27;, &#x27;nas&#x27;, &#x27;strid&#x27;, &#x27;voi&#x27;, &#x27;sg&#x27;, &#x27;cg&#x27;, &#x27;ant&#x27;, &#x27;cor&#x27;, &#x27;distr&#x27;, &#x27;lab&#x27;, &#x27;hi&#x27;, &#x27;lo&#x27;, &#x27;back&#x27;, &#x27;round&#x27;, &#x27;velaric&#x27;, &#x27;tense&#x27;, &#x27;long&#x27;, &#x27;hitone&#x27;, &#x27;hireg&#x27;], &#x27;get_ipa_info&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;langs&#x27;: &lt;module &#x27;prosodic.langs.langs&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/langs/langs.py&#x27;&gt;, &#x27;Language&#x27;: &lt;class &#x27;prosodic.langs.langs.Language&#x27;&gt;, &#x27;fix_recasing&#x27;: &lt;function fix_recasing&gt;, &#x27;fix_num_sylls&#x27;: &lt;function fix_num_sylls&gt;, &#x27;unstress&#x27;: &lt;function unstress&gt;, &#x27;stress&#x27;: &lt;function stress&gt;, &#x27;ensure_maybe_stressed&#x27;: &lt;function ensure_maybe_stressed&gt;, &#x27;ensure_unstressed&#x27;: &lt;function ensure_unstressed&gt;, &#x27;get_espeak_error_msg&#x27;: &lt;function get_espeak_error_msg&gt;, &#x27;get_espeak_env&#x27;: &lt;function get_espeak_env&gt;, &#x27;set_espeak_env&#x27;: &lt;function set_espeak_env&gt;, &#x27;english&#x27;: &lt;module &#x27;prosodic.langs.english.english&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/langs/english/english.py&#x27;&gt;, &#x27;EnglishLanguage&#x27;: &lt;class &#x27;prosodic.langs.english.english.EnglishLanguage&#x27;&gt;, &#x27;English&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;finnish&#x27;: &lt;module &#x27;prosodic.langs.finnish.finnish&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish/finnish.py&#x27;&gt;, &#x27;dirself&#x27;: &#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish&#x27;, &#x27;make_annotation&#x27;: &lt;function make_annotation&gt;, &#x27;stress2stroke&#x27;: {0: &#x27;&#x27;, 1: &quot;&#x27;&quot;, 2: &#x27;`&#x27;}, &#x27;orth2phon&#x27;: {&#x27;a&#x27;: [&#x27;\u0251&#x27;], &#x27;aa&#x27;: [&#x27;\u0251\u02d0&#x27;], &#x27;e&#x27;: [&#x27;e&#x27;], &#x27;ee&#x27;: [&#x27;e\u02d0&#x27;], &#x27;i&#x27;: [&#x27;i&#x27;], &#x27;ii&#x27;: [&#x27;i\u02d0&#x27;], &#x27;o&#x27;: [&#x27;o&#x27;], &#x27;oo&#x27;: [&#x27;o\u02d0&#x27;], &#x27;u&#x27;: [&#x27;\u028a&#x27;], &#x27;uu&#x27;: [&#x27;u\u02d0&#x27;], &#x27;y&#x27;: [&#x27;y&#x27;], &#x27;yy&#x27;: [&#x27;y\u02d0&#x27;], &#x27;\u00e4&#x27;: [&#x27;\u00e6&#x27;], &#x27;\u00e4\u00e4&#x27;: [&#x27;\u00e6\u02d0&#x27;], &#x27;\u00f6&#x27;: [&#x27;\u00f8&#x27;], &#x27;\u00f6\u00f6&#x27;: [&#x27;\u00f8\u02d0&#x27;], &#x27;\u00e5&#x27;: [&#x27;o&#x27;], &#x27;ai&#x27;: [&#x27;\u0251&#x27;, &#x27;i&#x27;], &#x27;ei&#x27;: [&#x27;e&#x27;, &#x27;i&#x27;], &#x27;oi&#x27;: [&#x27;o&#x27;, &#x27;i&#x27;], &#x27;\u00e4i&#x27;: [&#x27;\u00e6&#x27;, &#x27;i&#x27;], &#x27;\u00f6i&#x27;: [&#x27;\u00f8&#x27;, &#x27;i&#x27;], &#x27;au&#x27;: [&#x27;\u0251&#x27;, &#x27;\u028a&#x27;], &#x27;eu&#x27;: [&#x27;e&#x27;, &#x27;\u028a&#x27;], &#x27;ou&#x27;: [&#x27;o&#x27;, &#x27;\u028a&#x27;], &#x27;ey&#x27;: [&#x27;e&#x27;, &#x27;y&#x27;], &#x27;\u00e4y&#x27;: [&#x27;\u00e6&#x27;, &#x27;y&#x27;], &#x27;\u00f6y&#x27;: [&#x27;\u00f8&#x27;, &#x27;y&#x27;], &#x27;ui&#x27;: [&#x27;\u028a&#x27;, &#x27;i&#x27;], &#x27;yi&#x27;: [&#x27;y&#x27;, &#x27;i&#x27;], &#x27;iu&#x27;: [&#x27;i&#x27;, &#x27;\u028a&#x27;], &#x27;iy&#x27;: [&#x27;i&#x27;, &#x27;y&#x27;], &#x27;ie&#x27;: [&#x27;i&#x27;, &#x27;e&#x27;], &#x27;uo&#x27;: [&#x27;\u028a&#x27;, &#x27;o&#x27;], &#x27;y\u00f6&#x27;: [&#x27;y&#x27;, &#x27;\u00f8&#x27;], &#x27;b&#x27;: [&#x27;b&#x27;], &#x27;c&#x27;: [&#x27;k&#x27;], &#x27;d&#x27;: [&#x27;d&#x27;], &#x27;f&#x27;: [&#x27;f&#x27;], &#x27;g&#x27;: [&#x27;g&#x27;], &#x27;h&#x27;: [&#x27;h&#x27;], &#x27;j&#x27;: [&#x27;j&#x27;], &#x27;k&#x27;: [&#x27;k&#x27;], &#x27;l&#x27;: [&#x27;l&#x27;], &#x27;m&#x27;: [&#x27;m&#x27;], &#x27;n&#x27;: [&#x27;n&#x27;], &#x27;p&#x27;: [&#x27;p&#x27;], &#x27;r&#x27;: [&#x27;r&#x27;], &#x27;s&#x27;: [&#x27;s&#x27;], &#x27;t&#x27;: [&#x27;t&#x27;], &#x27;v&#x27;: [&#x27;v&#x27;], &#x27;z&#x27;: [&#x27;z&#x27;], &#x27;w&#x27;: [&#x27;v&#x27;], &#x27;x&#x27;: [&#x27;z&#x27;], &#x27;q&#x27;: [&#x27;k&#x27;]}, &#x27;ipa2x&#x27;: {&#x27;\u0251&#x27;: &#x27;a&#x27;, &#x27;\u0251\u02d0&#x27;: &#x27;aa&#x27;, &#x27;e&#x27;: &#x27;e&#x27;, &#x27;e\u02d0&#x27;: &#x27;ee&#x27;, &#x27;i&#x27;: &#x27;i&#x27;, &#x27;i\u02d0&#x27;: &#x27;ii&#x27;, &#x27;o&#x27;: &#x27;\u00e5&#x27;, &#x27;o\u02d0&#x27;: &#x27;oo&#x27;, &#x27;\u028a&#x27;: &#x27;u&#x27;, &#x27;u\u02d0&#x27;: &#x27;uu&#x27;, &#x27;y&#x27;: &#x27;y&#x27;, &#x27;y\u02d0&#x27;: &#x27;yy&#x27;, &#x27;\u00e6&#x27;: &#x27;\u00e4&#x27;, &#x27;\u00e6\u02d0&#x27;: &#x27;\u00e4\u00e4&#x27;, &#x27;\u00f8&#x27;: &#x27;\u00f6&#x27;, &#x27;\u00f8\u02d0&#x27;: &#x27;\u00f6\u00f6&#x27;, &#x27;\u0251i&#x27;: &#x27;ai&#x27;, &#x27;ei&#x27;: &#x27;ei&#x27;, &#x27;oi&#x27;: &#x27;oi&#x27;, &#x27;\u00e6i&#x27;: &#x27;\u00e4i&#x27;, &#x27;\u00f8i&#x27;: &#x27;\u00f6i&#x27;, &#x27;\u0251\u028a&#x27;: &#x27;au&#x27;, &#x27;e\u028a&#x27;: &#x27;eu&#x27;, &#x27;o\u028a&#x27;: &#x27;ou&#x27;, &#x27;ey&#x27;: &#x27;ey&#x27;, &#x27;\u00e6y&#x27;: &#x27;\u00e4y&#x27;, &#x27;\u00f8y&#x27;: &#x27;\u00f6y&#x27;, &#x27;\u028ai&#x27;: &#x27;ui&#x27;, &#x27;yi&#x27;: &#x27;yi&#x27;, &#x27;i\u028a&#x27;: &#x27;iu&#x27;, &#x27;iy&#x27;: &#x27;iy&#x27;, &#x27;ie&#x27;: &#x27;ie&#x27;, &#x27;\u028ao&#x27;: &#x27;uo&#x27;, &#x27;y\u00f8&#x27;: &#x27;y\u00f6&#x27;, &#x27;b&#x27;: &#x27;b&#x27;, &#x27;k&#x27;: &#x27;q&#x27;, &#x27;d&#x27;: &#x27;d&#x27;, &#x27;f&#x27;: &#x27;f&#x27;, &#x27;g&#x27;: &#x27;g&#x27;, &#x27;h&#x27;: &#x27;h&#x27;, &#x27;j&#x27;: &#x27;j&#x27;, &#x27;l&#x27;: &#x27;l&#x27;, &#x27;m&#x27;: &#x27;m&#x27;, &#x27;n&#x27;: &#x27;n&#x27;, &#x27;p&#x27;: &#x27;p&#x27;, &#x27;r&#x27;: &#x27;r&#x27;, &#x27;s&#x27;: &#x27;s&#x27;, &#x27;t&#x27;: &#x27;t&#x27;, &#x27;v&#x27;: &#x27;w&#x27;, &#x27;z&#x27;: &#x27;x&#x27;}, &#x27;FinnishLanguage&#x27;: &lt;class &#x27;prosodic.langs.finnish.finnish.FinnishLanguage&#x27;&gt;, &#x27;Finnish&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;constraints&#x27;: &lt;module &#x27;prosodic.parsing.constraints&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/constraints.py&#x27;&gt;, &#x27;w_stress&#x27;: &lt;function w_stress&gt;, &#x27;s_unstress&#x27;: &lt;function s_unstress&gt;, &#x27;unres_within&#x27;: &lt;function unres_within&gt;, &#x27;foot_size&#x27;: &lt;function foot_size&gt;, &#x27;unres_across&#x27;: &lt;function unres_across&gt;, &#x27;w_peak&#x27;: &lt;function w_peak&gt;, &#x27;s_trough&#x27;: &lt;function s_trough&gt;, &#x27;DEFAULT_CONSTRAINTS_NAMES&#x27;: [&#x27;w_peak&#x27;, &#x27;w_stress&#x27;, &#x27;s_unstress&#x27;, &#x27;unres_across&#x27;, &#x27;unres_within&#x27;], &#x27;CONSTRAINTS&#x27;: {&#x27;w_peak&#x27;: &lt;function w_peak&gt;, &#x27;w_stress&#x27;: &lt;function w_stress&gt;, &#x27;s_unstress&#x27;: &lt;function s_unstress&gt;, &#x27;unres_across&#x27;: &lt;function unres_across&gt;, &#x27;unres_within&#x27;: &lt;function unres_within&gt;, &#x27;s_trough&#x27;: &lt;function s_trough&gt;, &#x27;foot_size&#x27;: &lt;function foot_size&gt;}, &#x27;DEFAULT_CONSTRAINTS&#x27;: [&lt;function w_peak&gt;, &lt;function w_stress&gt;, &lt;function s_unstress&gt;, &lt;function unres_across&gt;, &lt;function unres_within&gt;], &#x27;get_constraints&#x27;: &lt;function get_constraints&gt;, &#x27;CONSTRAINT_DESCS&#x27;: {&#x27;w_peak&#x27;: &#x27;No polysyllabic stress on weak position&#x27;, &#x27;s_trough&#x27;: &#x27;No polysyllabic unstress on strong position&#x27;, &#x27;w_stress&#x27;: &#x27;No stressed syllables on weak position&#x27;, &#x27;s_unstress&#x27;: &#x27;No unstressed syllable on strong position&#x27;, &#x27;unres_across&#x27;: &#x27;Disyllabic positions crossing words can only contain function words&#x27;, &#x27;unres_within&#x27;: &#x27;Disyllabic positions within words must start with a light and stressed syllable&#x27;, &#x27;foot_size&#x27;: &#x27;Do not allow positions to exceed two syllables&#x27;, &#x27;max_s&#x27;: &#x27;Maximum number of syllables in strong position&#x27;, &#x27;max_w&#x27;: &#x27;Maximum number of syllables in weak position&#x27;, &#x27;resolve_optionality&#x27;: &quot;Allow parser to choose best words&#x27; stress patterns option&quot;, &#x27;exhaustive&#x27;: &#x27;Compute even harmonically bounded parses (those worse in the same ways + another way compared to another parse)&#x27;}, &#x27;utils&#x27;: &lt;module &#x27;prosodic.parsing.utils&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/utils.py&#x27;&gt;, &#x27;positions&#x27;: &lt;module &#x27;prosodic.parsing.positions&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/positions.py&#x27;&gt;, &#x27;slots&#x27;: &lt;module &#x27;prosodic.parsing.slots&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/slots.py&#x27;&gt;, &#x27;parses&#x27;: &lt;module &#x27;prosodic.parsing.parses&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/parses.py&#x27;&gt;, &#x27;parselists&#x27;: &lt;module &#x27;prosodic.parsing.parselists&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/parselists.py&#x27;&gt;, &#x27;meter&#x27;: &lt;module &#x27;prosodic.parsing.meter&#x27; from &#x27;/Users/ryan/github/prosodic/prosodic/parsing/meter.py&#x27;&gt;, &#x27;Parse&#x27;: &lt;class &#x27;prosodic.parsing.parses.Parse&#x27;&gt;, &#x27;ParseList&#x27;: &lt;class &#x27;prosodic.parsing.parselists.ParseList&#x27;&gt;, &#x27;Bounding&#x27;: &lt;class &#x27;prosodic.parsing.utils.Bounding&#x27;&gt;, &#x27;get_iambic_parse&#x27;: &lt;function get_iambic_parse&gt;, &#x27;split_scansion&#x27;: &lt;function split_scansion&gt;, &#x27;get_possible_scansions&#x27;: &lt;functools._lru_cache_wrapper object&gt;, &#x27;getlenparse&#x27;: &lt;function getlenparse&gt;, &#x27;iter_mpos&#x27;: &lt;function iter_mpos&gt;, &#x27;NUM_GOING&#x27;: 0, &#x27;DEFAULT_METER_KWARGS&#x27;: {&#x27;constraints&#x27;: [&lt;function w_peak&gt;, &lt;function w_stress&gt;, &lt;function s_unstress&gt;, &lt;function unres_across&gt;, &lt;function unres_within&gt;], &#x27;categorical_constraints&#x27;: [], &#x27;max_s&#x27;: 2, &#x27;max_w&#x27;: 2, &#x27;resolve_optionality&#x27;: True, &#x27;exhaustive&#x27;: False}, &#x27;MTRDEFAULT&#x27;: {&#x27;constraints&#x27;: [&lt;function w_peak&gt;, &lt;function w_stress&gt;, &lt;function s_unstress&gt;, &lt;function unres_across&gt;, &lt;function unres_within&gt;], &#x27;categorical_constraints&#x27;: [], &#x27;max_s&#x27;: 2, &#x27;max_w&#x27;: 2, &#x27;resolve_optionality&#x27;: True, &#x27;exhaustive&#x27;: False}, &#x27;Meter&#x27;: &lt;class &#x27;prosodic.parsing.meter.Meter&#x27;&gt;, &#x27;ParsePosition&#x27;: &lt;class &#x27;prosodic.parsing.positions.ParsePosition&#x27;&gt;, &#x27;ParseSlot&#x27;: &lt;class &#x27;prosodic.parsing.slots.ParseSlot&#x27;&gt;, &#x27;GLOBALS&#x27;: {...}, &#x27;list&#x27;: &lt;class &#x27;list&#x27;&gt;, &#x27;INITCLASSES&#x27;: {&#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.texts.Text&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.stanzas.Stanza&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.texts.lines.Line&#x27;&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordToken&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordType&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.syllables.Syllable&#x27;&gt;, &#x27;Phoneme&#x27;: &lt;function Phoneme&gt;, &#x27;WordFormList&#x27;: &lt;class &#x27;prosodic.words.words.WordFormList&#x27;&gt;, &#x27;Parse&#x27;: &lt;class &#x27;prosodic.parsing.parses.Parse&#x27;&gt;, &#x27;ParsePosition&#x27;: &lt;class &#x27;prosodic.parsing.positions.ParsePosition&#x27;&gt;, &#x27;ParseSlot&#x27;: &lt;class &#x27;prosodic.parsing.slots.ParseSlot&#x27;&gt;, &#x27;ParseList&#x27;: &lt;class &#x27;prosodic.parsing.parselists.ParseList&#x27;&gt;}, &#x27;CHILDCLASSES&#x27;: {&#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.stanzas.Stanza&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.lines.Line&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.words.words.WordToken&#x27;&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordType&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.syllables.Syllable&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.phonemes.PhonemeClass&#x27;&gt;, &#x27;Phoneme&#x27;: None, &#x27;WordFormList&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;ParseList&#x27;: &lt;class &#x27;prosodic.parsing.parses.Parse&#x27;&gt;, &#x27;Parse&#x27;: &lt;class &#x27;prosodic.parsing.positions.ParsePosition&#x27;&gt;, &#x27;ParsePosition&#x27;: &lt;class &#x27;prosodic.parsing.slots.ParseSlot&#x27;&gt;}, &#x27;CHILDCLASSLISTS&#x27;: {&#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.stanzas.StanzaList&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.lines.LineList&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.words.words.WordTokenList&#x27;&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordTypeList&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordFormList&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.syllables.SyllableList&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.phonemes.PhonemeList&#x27;&gt;, &#x27;Phoneme&#x27;: None}}"}, "prosodic.imports.INITCLASSES": {"fullname": "prosodic.imports.INITCLASSES", "modulename": "prosodic.imports", "qualname": "INITCLASSES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.texts.Text&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.stanzas.Stanza&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.texts.lines.Line&#x27;&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordToken&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordType&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.syllables.Syllable&#x27;&gt;, &#x27;Phoneme&#x27;: &lt;function Phoneme&gt;, &#x27;WordFormList&#x27;: &lt;class &#x27;prosodic.words.words.WordFormList&#x27;&gt;, &#x27;Parse&#x27;: &lt;class &#x27;prosodic.parsing.parses.Parse&#x27;&gt;, &#x27;ParsePosition&#x27;: &lt;class &#x27;prosodic.parsing.positions.ParsePosition&#x27;&gt;, &#x27;ParseSlot&#x27;: &lt;class &#x27;prosodic.parsing.slots.ParseSlot&#x27;&gt;, &#x27;ParseList&#x27;: &lt;class &#x27;prosodic.parsing.parselists.ParseList&#x27;&gt;}"}, "prosodic.imports.CHILDCLASSES": {"fullname": "prosodic.imports.CHILDCLASSES", "modulename": "prosodic.imports", "qualname": "CHILDCLASSES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.stanzas.Stanza&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.lines.Line&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.words.words.WordToken&#x27;&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordType&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.syllables.Syllable&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.phonemes.PhonemeClass&#x27;&gt;, &#x27;Phoneme&#x27;: None, &#x27;WordFormList&#x27;: &lt;class &#x27;prosodic.words.words.WordForm&#x27;&gt;, &#x27;ParseList&#x27;: &lt;class &#x27;prosodic.parsing.parses.Parse&#x27;&gt;, &#x27;Parse&#x27;: &lt;class &#x27;prosodic.parsing.positions.ParsePosition&#x27;&gt;, &#x27;ParsePosition&#x27;: &lt;class &#x27;prosodic.parsing.slots.ParseSlot&#x27;&gt;}"}, "prosodic.imports.CHILDCLASSLISTS": {"fullname": "prosodic.imports.CHILDCLASSLISTS", "modulename": "prosodic.imports", "qualname": "CHILDCLASSLISTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Text&#x27;: &lt;class &#x27;prosodic.texts.stanzas.StanzaList&#x27;&gt;, &#x27;Stanza&#x27;: &lt;class &#x27;prosodic.texts.lines.LineList&#x27;&gt;, &#x27;Line&#x27;: &lt;class &#x27;prosodic.words.words.WordTokenList&#x27;&gt;, &#x27;WordToken&#x27;: &lt;class &#x27;prosodic.words.words.WordTypeList&#x27;&gt;, &#x27;WordType&#x27;: &lt;class &#x27;prosodic.words.words.WordFormList&#x27;&gt;, &#x27;WordForm&#x27;: &lt;class &#x27;prosodic.words.syllables.SyllableList&#x27;&gt;, &#x27;Syllable&#x27;: &lt;class &#x27;prosodic.words.phonemes.PhonemeList&#x27;&gt;, &#x27;Phoneme&#x27;: None}"}, "prosodic.imports.profile": {"fullname": "prosodic.imports.profile", "modulename": "prosodic.imports", "qualname": "profile", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs": {"fullname": "prosodic.langs", "modulename": "prosodic.langs", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.english": {"fullname": "prosodic.langs.english", "modulename": "prosodic.langs.english", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.english.english": {"fullname": "prosodic.langs.english.english", "modulename": "prosodic.langs.english.english", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.english.english.EnglishLanguage": {"fullname": "prosodic.langs.english.english.EnglishLanguage", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage", "kind": "class", "doc": "<p></p>\n", "bases": "prosodic.langs.langs.Language"}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"fullname": "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.pronunciation_dictionary_filename", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/english/english.tsv&#x27;"}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"fullname": "prosodic.langs.english.english.EnglishLanguage.lang_espeak", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.lang_espeak", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;en-us&#x27;"}, "prosodic.langs.english.english.EnglishLanguage.lang": {"fullname": "prosodic.langs.english.english.EnglishLanguage.lang", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.lang", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;en&#x27;"}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"fullname": "prosodic.langs.english.english.EnglishLanguage.cache_fn", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.cache_fn", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;english_wordtypes&#x27;"}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"fullname": "prosodic.langs.english.english.EnglishLanguage.path_maybestressed", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.path_maybestressed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/english/maybestressed.txt&#x27;"}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"fullname": "prosodic.langs.english.english.EnglishLanguage.path_unstressed", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.path_unstressed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/english/unstressed.txt&#x27;"}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"fullname": "prosodic.langs.english.english.EnglishLanguage.token2ipa", "modulename": "prosodic.langs.english.english", "qualname": "EnglishLanguage.token2ipa", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.english.english.English": {"fullname": "prosodic.langs.english.english.English", "modulename": "prosodic.langs.english.english", "qualname": "English", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish": {"fullname": "prosodic.langs.finnish", "modulename": "prosodic.langs.finnish", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish": {"fullname": "prosodic.langs.finnish.finnish", "modulename": "prosodic.langs.finnish.finnish", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish.dirself": {"fullname": "prosodic.langs.finnish.finnish.dirself", "modulename": "prosodic.langs.finnish.finnish", "qualname": "dirself", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish&#x27;"}, "prosodic.langs.finnish.finnish.stress2stroke": {"fullname": "prosodic.langs.finnish.finnish.stress2stroke", "modulename": "prosodic.langs.finnish.finnish", "qualname": "stress2stroke", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;&#x27;, 1: &quot;&#x27;&quot;, 2: &#x27;`&#x27;}"}, "prosodic.langs.finnish.finnish.orth2phon": {"fullname": "prosodic.langs.finnish.finnish.orth2phon", "modulename": "prosodic.langs.finnish.finnish", "qualname": "orth2phon", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;a&#x27;: [&#x27;\u0251&#x27;], &#x27;aa&#x27;: [&#x27;\u0251\u02d0&#x27;], &#x27;e&#x27;: [&#x27;e&#x27;], &#x27;ee&#x27;: [&#x27;e\u02d0&#x27;], &#x27;i&#x27;: [&#x27;i&#x27;], &#x27;ii&#x27;: [&#x27;i\u02d0&#x27;], &#x27;o&#x27;: [&#x27;o&#x27;], &#x27;oo&#x27;: [&#x27;o\u02d0&#x27;], &#x27;u&#x27;: [&#x27;\u028a&#x27;], &#x27;uu&#x27;: [&#x27;u\u02d0&#x27;], &#x27;y&#x27;: [&#x27;y&#x27;], &#x27;yy&#x27;: [&#x27;y\u02d0&#x27;], &#x27;\u00e4&#x27;: [&#x27;\u00e6&#x27;], &#x27;\u00e4\u00e4&#x27;: [&#x27;\u00e6\u02d0&#x27;], &#x27;\u00f6&#x27;: [&#x27;\u00f8&#x27;], &#x27;\u00f6\u00f6&#x27;: [&#x27;\u00f8\u02d0&#x27;], &#x27;\u00e5&#x27;: [&#x27;o&#x27;], &#x27;ai&#x27;: [&#x27;\u0251&#x27;, &#x27;i&#x27;], &#x27;ei&#x27;: [&#x27;e&#x27;, &#x27;i&#x27;], &#x27;oi&#x27;: [&#x27;o&#x27;, &#x27;i&#x27;], &#x27;\u00e4i&#x27;: [&#x27;\u00e6&#x27;, &#x27;i&#x27;], &#x27;\u00f6i&#x27;: [&#x27;\u00f8&#x27;, &#x27;i&#x27;], &#x27;au&#x27;: [&#x27;\u0251&#x27;, &#x27;\u028a&#x27;], &#x27;eu&#x27;: [&#x27;e&#x27;, &#x27;\u028a&#x27;], &#x27;ou&#x27;: [&#x27;o&#x27;, &#x27;\u028a&#x27;], &#x27;ey&#x27;: [&#x27;e&#x27;, &#x27;y&#x27;], &#x27;\u00e4y&#x27;: [&#x27;\u00e6&#x27;, &#x27;y&#x27;], &#x27;\u00f6y&#x27;: [&#x27;\u00f8&#x27;, &#x27;y&#x27;], &#x27;ui&#x27;: [&#x27;\u028a&#x27;, &#x27;i&#x27;], &#x27;yi&#x27;: [&#x27;y&#x27;, &#x27;i&#x27;], &#x27;iu&#x27;: [&#x27;i&#x27;, &#x27;\u028a&#x27;], &#x27;iy&#x27;: [&#x27;i&#x27;, &#x27;y&#x27;], &#x27;ie&#x27;: [&#x27;i&#x27;, &#x27;e&#x27;], &#x27;uo&#x27;: [&#x27;\u028a&#x27;, &#x27;o&#x27;], &#x27;y\u00f6&#x27;: [&#x27;y&#x27;, &#x27;\u00f8&#x27;], &#x27;b&#x27;: [&#x27;b&#x27;], &#x27;c&#x27;: [&#x27;k&#x27;], &#x27;d&#x27;: [&#x27;d&#x27;], &#x27;f&#x27;: [&#x27;f&#x27;], &#x27;g&#x27;: [&#x27;g&#x27;], &#x27;h&#x27;: [&#x27;h&#x27;], &#x27;j&#x27;: [&#x27;j&#x27;], &#x27;k&#x27;: [&#x27;k&#x27;], &#x27;l&#x27;: [&#x27;l&#x27;], &#x27;m&#x27;: [&#x27;m&#x27;], &#x27;n&#x27;: [&#x27;n&#x27;], &#x27;p&#x27;: [&#x27;p&#x27;], &#x27;r&#x27;: [&#x27;r&#x27;], &#x27;s&#x27;: [&#x27;s&#x27;], &#x27;t&#x27;: [&#x27;t&#x27;], &#x27;v&#x27;: [&#x27;v&#x27;], &#x27;z&#x27;: [&#x27;z&#x27;], &#x27;w&#x27;: [&#x27;v&#x27;], &#x27;x&#x27;: [&#x27;z&#x27;], &#x27;q&#x27;: [&#x27;k&#x27;]}"}, "prosodic.langs.finnish.finnish.ipa2x": {"fullname": "prosodic.langs.finnish.finnish.ipa2x", "modulename": "prosodic.langs.finnish.finnish", "qualname": "ipa2x", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;\u0251&#x27;: &#x27;a&#x27;, &#x27;\u0251\u02d0&#x27;: &#x27;aa&#x27;, &#x27;e&#x27;: &#x27;e&#x27;, &#x27;e\u02d0&#x27;: &#x27;ee&#x27;, &#x27;i&#x27;: &#x27;i&#x27;, &#x27;i\u02d0&#x27;: &#x27;ii&#x27;, &#x27;o&#x27;: &#x27;\u00e5&#x27;, &#x27;o\u02d0&#x27;: &#x27;oo&#x27;, &#x27;\u028a&#x27;: &#x27;u&#x27;, &#x27;u\u02d0&#x27;: &#x27;uu&#x27;, &#x27;y&#x27;: &#x27;y&#x27;, &#x27;y\u02d0&#x27;: &#x27;yy&#x27;, &#x27;\u00e6&#x27;: &#x27;\u00e4&#x27;, &#x27;\u00e6\u02d0&#x27;: &#x27;\u00e4\u00e4&#x27;, &#x27;\u00f8&#x27;: &#x27;\u00f6&#x27;, &#x27;\u00f8\u02d0&#x27;: &#x27;\u00f6\u00f6&#x27;, &#x27;\u0251i&#x27;: &#x27;ai&#x27;, &#x27;ei&#x27;: &#x27;ei&#x27;, &#x27;oi&#x27;: &#x27;oi&#x27;, &#x27;\u00e6i&#x27;: &#x27;\u00e4i&#x27;, &#x27;\u00f8i&#x27;: &#x27;\u00f6i&#x27;, &#x27;\u0251\u028a&#x27;: &#x27;au&#x27;, &#x27;e\u028a&#x27;: &#x27;eu&#x27;, &#x27;o\u028a&#x27;: &#x27;ou&#x27;, &#x27;ey&#x27;: &#x27;ey&#x27;, &#x27;\u00e6y&#x27;: &#x27;\u00e4y&#x27;, &#x27;\u00f8y&#x27;: &#x27;\u00f6y&#x27;, &#x27;\u028ai&#x27;: &#x27;ui&#x27;, &#x27;yi&#x27;: &#x27;yi&#x27;, &#x27;i\u028a&#x27;: &#x27;iu&#x27;, &#x27;iy&#x27;: &#x27;iy&#x27;, &#x27;ie&#x27;: &#x27;ie&#x27;, &#x27;\u028ao&#x27;: &#x27;uo&#x27;, &#x27;y\u00f8&#x27;: &#x27;y\u00f6&#x27;, &#x27;b&#x27;: &#x27;b&#x27;, &#x27;k&#x27;: &#x27;q&#x27;, &#x27;d&#x27;: &#x27;d&#x27;, &#x27;f&#x27;: &#x27;f&#x27;, &#x27;g&#x27;: &#x27;g&#x27;, &#x27;h&#x27;: &#x27;h&#x27;, &#x27;j&#x27;: &#x27;j&#x27;, &#x27;l&#x27;: &#x27;l&#x27;, &#x27;m&#x27;: &#x27;m&#x27;, &#x27;n&#x27;: &#x27;n&#x27;, &#x27;p&#x27;: &#x27;p&#x27;, &#x27;r&#x27;: &#x27;r&#x27;, &#x27;s&#x27;: &#x27;s&#x27;, &#x27;t&#x27;: &#x27;t&#x27;, &#x27;v&#x27;: &#x27;w&#x27;, &#x27;z&#x27;: &#x27;x&#x27;}"}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"fullname": "prosodic.langs.finnish.finnish.FinnishLanguage", "modulename": "prosodic.langs.finnish.finnish", "qualname": "FinnishLanguage", "kind": "class", "doc": "<p></p>\n", "bases": "prosodic.langs.langs.Language"}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"fullname": "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename", "modulename": "prosodic.langs.finnish.finnish", "qualname": "FinnishLanguage.pronunciation_dictionary_filename", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/data/dicts/en/english.tsv&#x27;"}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"fullname": "prosodic.langs.finnish.finnish.FinnishLanguage.lang", "modulename": "prosodic.langs.finnish.finnish", "qualname": "FinnishLanguage.lang", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;fi&#x27;"}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"fullname": "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn", "modulename": "prosodic.langs.finnish.finnish", "qualname": "FinnishLanguage.cache_fn", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;finnish_wordtypes&#x27;"}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"fullname": "prosodic.langs.finnish.finnish.FinnishLanguage.get", "modulename": "prosodic.langs.finnish.finnish", "qualname": "FinnishLanguage.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish.Finnish": {"fullname": "prosodic.langs.finnish.finnish.Finnish", "modulename": "prosodic.langs.finnish.finnish", "qualname": "Finnish", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator": {"fullname": "prosodic.langs.finnish.finnish_annotator", "modulename": "prosodic.langs.finnish.finnish_annotator", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"fullname": "prosodic.langs.finnish.finnish_annotator.PRESYLL", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "PRESYLL", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"fullname": "prosodic.langs.finnish.finnish_annotator.INITIAL", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "INITIAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"fullname": "prosodic.langs.finnish.finnish_annotator.SUFFIX", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "SUFFIX", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"fullname": "prosodic.langs.finnish.finnish_annotator.COMPOUND", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "COMPOUND", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, "prosodic.langs.finnish.finnish_annotator.dirself": {"fullname": "prosodic.langs.finnish.finnish_annotator.dirself", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "dirself", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish&#x27;"}, "prosodic.langs.finnish.finnish_annotator.user_files": {"fullname": "prosodic.langs.finnish.finnish_annotator.user_files", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "user_files", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish/presyllabified.txt&#x27;, &#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish/initial.txt&#x27;, &#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish/suffix.txt&#x27;, &#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish/compound.txt&#x27;]"}, "prosodic.langs.finnish.finnish_annotator.config_file": {"fullname": "prosodic.langs.finnish.finnish_annotator.config_file", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "config_file", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/ryan/github/prosodic/prosodic/langs/finnish/config.txt&#x27;"}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"fullname": "prosodic.langs.finnish.finnish_annotator.initial_compounds", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "initial_compounds", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;pienois&#x27;, &#x27;kokonais&#x27;, &#x27;tiedotus&#x27;, &#x27;onnettomuus&#x27;, &#x27;huono&#x27;, &#x27;alavieskalais&#x27;, &#x27;tilanne&#x27;, &#x27;ruumiin&#x27;, &#x27;erikois&#x27;]"}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"fullname": "prosodic.langs.finnish.finnish_annotator.suffixes", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "suffixes", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;logi&#x27;, &#x27;login&#x27;, &#x27;logia&#x27;, &#x27;logina&#x27;, &#x27;logiksi&#x27;, &#x27;logissa&#x27;, &#x27;logista&#x27;, &#x27;logiin&#x27;, &#x27;logilla&#x27;, &#x27;logilta&#x27;, &#x27;logille&#x27;, &#x27;logeitta&#x27;, &#x27;logein&#x27;, &#x27;logit&#x27;, &#x27;logien&#x27;, &#x27;logeja&#x27;, &#x27;logeina&#x27;, &#x27;logeiksi&#x27;, &#x27;logeissa&#x27;, &#x27;logeista&#x27;, &#x27;logeihin&#x27;, &#x27;logeilla&#x27;, &#x27;logeilta&#x27;, &#x27;logeille&#x27;]"}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"fullname": "prosodic.langs.finnish.finnish_annotator.compound_dict", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "compound_dict", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;kansanedustaja&#x27;: [&#x27;kansan&#x27;, &#x27;edustaja&#x27;]}"}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"fullname": "prosodic.langs.finnish.finnish_annotator.initialize_list", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "initialize_list", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"fullname": "prosodic.langs.finnish.finnish_annotator.initialize_dict", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "initialize_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">entries</span>, </span><span class=\"param\"><span class=\"n\">separator</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"fullname": "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "initialize_dict_from_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"fullname": "prosodic.langs.finnish.finnish_annotator.initialize_config", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "initialize_config", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation", "kind": "class", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.__init__", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span></span>)</span>"}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.word", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.word", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.syllables", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.syllables", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.split_sylls", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.weights", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.weights", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.sonorities", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.stresses", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.stresses", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"fullname": "prosodic.langs.finnish.finnish_annotator.Annotation.join", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "Annotation.join", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">annotation</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"fullname": "prosodic.langs.finnish.finnish_annotator.split_initial_compounds", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "split_initial_compounds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">words</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"fullname": "prosodic.langs.finnish.finnish_annotator.split_suffix", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "split_suffix", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">words</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"fullname": "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "split_preannotated_compounds", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">words</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"fullname": "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "ORTHOGRAPHIC_COMPOUND_MARKER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;-&#x27;"}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"fullname": "prosodic.langs.finnish.finnish_annotator.make_annotation", "modulename": "prosodic.langs.finnish.finnish_annotator", "qualname": "make_annotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions": {"fullname": "prosodic.langs.finnish.finnish_functions", "modulename": "prosodic.langs.finnish.finnish_functions", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"fullname": "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "SYLLABLE_SEPARATOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;.&#x27;"}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"fullname": "prosodic.langs.finnish.finnish_functions.CLUSTERS", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "CLUSTERS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;pr&#x27;, &#x27;cl&#x27;, &#x27;br&#x27;, &#x27;dr&#x27;, &#x27;bl&#x27;, &#x27;fr&#x27;, &#x27;fl&#x27;, &#x27;kv&#x27;, &#x27;kr&#x27;, &#x27;qv&#x27;, &#x27;schm&#x27;, &#x27;kl&#x27;, &#x27;pl&#x27;, &#x27;gl&#x27;, &#x27;gr&#x27;}"}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"fullname": "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "CLUSTER_LENGTHS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{2, 4}"}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"fullname": "prosodic.langs.finnish.finnish_functions.VOWELS", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "VOWELS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;\u00f6&#x27;, &#x27;i&#x27;, &#x27;a&#x27;, &#x27;o&#x27;, &#x27;\u00e4&#x27;, &#x27;e&#x27;, &#x27;y&#x27;, &#x27;u&#x27;}"}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"fullname": "prosodic.langs.finnish.finnish_functions.DIPHTHONGS", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "DIPHTHONGS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ai&#x27;, &#x27;y\u00f6&#x27;, &#x27;oi&#x27;, &#x27;ei&#x27;, &#x27;eu&#x27;, &#x27;ie&#x27;, &#x27;uo&#x27;, &#x27;ou&#x27;, &#x27;\u00e4i&#x27;, &#x27;\u00f6i&#x27;, &#x27;\u00f6y&#x27;, &#x27;\u00e4y&#x27;, &#x27;iu&#x27;, &#x27;au&#x27;, &#x27;yi&#x27;, &#x27;iy&#x27;, &#x27;ui&#x27;, &#x27;ey&#x27;}"}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"fullname": "prosodic.langs.finnish.finnish_functions.CONSONANTS", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "CONSONANTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;k&#x27;, &#x27;l&#x27;, &#x27;m&#x27;, &#x27;s&#x27;, &#x27;n&#x27;, &#x27;d&#x27;, &#x27;q&#x27;, &quot;&#x27;&quot;, &#x27;f&#x27;, &#x27;v&#x27;, &#x27;g&#x27;, &#x27;p&#x27;, &#x27;c&#x27;, &#x27;x&#x27;, &#x27;h&#x27;, &#x27;t&#x27;, &#x27;z&#x27;, &#x27;b&#x27;, &#x27;r&#x27;, &#x27;j&#x27;}"}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"fullname": "prosodic.langs.finnish.finnish_functions.SON_HIGH", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "SON_HIGH", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;e&#x27;, &#x27;y&#x27;, &#x27;u&#x27;, &#x27;i&#x27;}"}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"fullname": "prosodic.langs.finnish.finnish_functions.SON_LOW", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "SON_LOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;a&#x27;, &#x27;o&#x27;, &#x27;\u00e4&#x27;, &#x27;\u00f6&#x27;}"}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"fullname": "prosodic.langs.finnish.finnish_functions.is_vowel", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_vowel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"fullname": "prosodic.langs.finnish.finnish_functions.is_consonant", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_consonant", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"fullname": "prosodic.langs.finnish.finnish_functions.is_cluster", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_cluster", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"fullname": "prosodic.langs.finnish.finnish_functions.is_diphthong", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_diphthong", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.is_long": {"fullname": "prosodic.langs.finnish.finnish_functions.is_long", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_long", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.Syllable": {"fullname": "prosodic.langs.finnish.finnish_functions.Syllable", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Syllable", "kind": "class", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"fullname": "prosodic.langs.finnish.finnish_functions.Syllable.onset", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Syllable.onset", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"fullname": "prosodic.langs.finnish.finnish_functions.Syllable.nucleus", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Syllable.nucleus", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"fullname": "prosodic.langs.finnish.finnish_functions.Syllable.coda", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Syllable.coda", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.langs.finnish.finnish_functions.Weight": {"fullname": "prosodic.langs.finnish.finnish_functions.Weight", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Weight", "kind": "class", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"fullname": "prosodic.langs.finnish.finnish_functions.Weight.CV", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Weight.CV", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"fullname": "prosodic.langs.finnish.finnish_functions.Weight.CVC", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Weight.CVC", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"fullname": "prosodic.langs.finnish.finnish_functions.Weight.CVV", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Weight.CVV", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"fullname": "prosodic.langs.finnish.finnish_functions.Weight.dict", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Weight.dict", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;L&#x27;, 1: &#x27;H&#x27;, 2: &#x27;H&#x27;}"}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"fullname": "prosodic.langs.finnish.finnish_functions.is_heavy", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_heavy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">weight</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"fullname": "prosodic.langs.finnish.finnish_functions.is_heavier", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "is_heavier", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">weight1</span>, </span><span class=\"param\"><span class=\"n\">weight2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_functions.Stress": {"fullname": "prosodic.langs.finnish.finnish_functions.Stress", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Stress", "kind": "class", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"fullname": "prosodic.langs.finnish.finnish_functions.Stress.none", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Stress.none", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"fullname": "prosodic.langs.finnish.finnish_functions.Stress.primary", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Stress.primary", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"fullname": "prosodic.langs.finnish.finnish_functions.Stress.secondary", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Stress.secondary", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"fullname": "prosodic.langs.finnish.finnish_functions.Stress.dict", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "Stress.dict", "kind": "variable", "doc": "<p></p>\n", "default_value": "{0: &#x27;U&#x27;, 1: &#x27;P&#x27;, 2: &#x27;S&#x27;}"}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"fullname": "prosodic.langs.finnish.finnish_functions.split_syllable", "modulename": "prosodic.langs.finnish.finnish_functions", "qualname": "split_syllable", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">syllable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_sonority": {"fullname": "prosodic.langs.finnish.finnish_sonority", "modulename": "prosodic.langs.finnish.finnish_sonority", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"fullname": "prosodic.langs.finnish.finnish_sonority.get_sonority", "modulename": "prosodic.langs.finnish.finnish_sonority", "qualname": "get_sonority", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vowel</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"fullname": "prosodic.langs.finnish.finnish_sonority.make_sonorities", "modulename": "prosodic.langs.finnish.finnish_sonority", "qualname": "make_sonorities", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">split_sylls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_stress": {"fullname": "prosodic.langs.finnish.finnish_stress", "modulename": "prosodic.langs.finnish.finnish_stress", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"fullname": "prosodic.langs.finnish.finnish_stress.stress_dict", "modulename": "prosodic.langs.finnish.finnish_stress", "qualname": "stress_dict", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"fullname": "prosodic.langs.finnish.finnish_stress.make_stresses", "modulename": "prosodic.langs.finnish.finnish_stress", "qualname": "make_stresses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">weights</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables": {"fullname": "prosodic.langs.finnish.finnish_syllables", "modulename": "prosodic.langs.finnish.finnish_syllables", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"fullname": "prosodic.langs.finnish.finnish_syllables.initialize_dict", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "initialize_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">entries</span>, </span><span class=\"param\"><span class=\"n\">separator</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"fullname": "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "initialize_dict_from_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"fullname": "prosodic.langs.finnish.finnish_syllables.pre_sep_dict", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "pre_sep_dict", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"fullname": "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "initialize_presyllabified", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"fullname": "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "vowel_seq_dict", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;aioi&#x27;: [1, 0, 1, 0, 1], &#x27;aiui&#x27;: [1, 0, 1, 0, 1], &#x27;auoi&#x27;: [1, 0, 1, 0, 1], &#x27;euoi&#x27;: [1, 0, 1, 0, 1], &#x27;ieoi&#x27;: [1, 0, 1, 0, 1], &#x27;ieui&#x27;: [1, 0, 1, 0, 1], &#x27;oioi&#x27;: [1, 0, 1, 0, 1], &#x27;oiui&#x27;: [1, 0, 1, 0, 1], &#x27;uoui&#x27;: [1, 0, 1, 0, 1], &#x27;y\u00f6yi&#x27;: [1, 0, 1, 0, 1], &#x27;aei&#x27;: [1, 1, 0, 1], &#x27;aoi&#x27;: [1, 1, 0, 1], &#x27;eai&#x27;: [1, 1, 0, 1], &#x27;eoi&#x27;: [1, 1, 0, 1], &#x27;e\u00e4i&#x27;: [1, 1, 0, 1], &#x27;e\u00f6i&#x27;: [1, 1, 0, 1], &#x27;iai&#x27;: [1, 1, 0, 1], &#x27;iau&#x27;: [1, 1, 0, 1], &#x27;ioi&#x27;: [1, 1, 0, 1], &#x27;i\u00e4i&#x27;: [1, 1, 0, 1], &#x27;i\u00f6i&#x27;: [1, 1, 0, 1], &#x27;oai&#x27;: [1, 1, 0, 1], &#x27;uai&#x27;: [1, 1, 0, 1], &#x27;uei&#x27;: [1, 1, 0, 1], &#x27;uoi&#x27;: [1, 1, 0, 1], &#x27;yei&#x27;: [1, 1, 0, 1], &#x27;y\u00e4i&#x27;: [1, 1, 0, 1], &#x27;\u00e4yi&#x27;: [1, 1, 0, 1], &#x27;\u00e4\u00f6i&#x27;: [1, 1, 0, 1], &#x27;aia&#x27;: [1, 0, 1, 1], &#x27;aie&#x27;: [1, 0, 1, 1], &#x27;aio&#x27;: [1, 0, 1, 1], &#x27;aiu&#x27;: [1, 0, 1, 1], &#x27;aua&#x27;: [1, 0, 1, 1], &#x27;aue&#x27;: [1, 0, 1, 1], &#x27;eua&#x27;: [1, 0, 1, 1], &#x27;iea&#x27;: [1, 0, 1, 1], &#x27;ieo&#x27;: [1, 0, 1, 1], &#x27;ieu&#x27;: [1, 0, 1, 1], &#x27;iey&#x27;: [1, 0, 1, 1], &#x27;ioa&#x27;: [1, 1, 1, 1], &#x27;ioe&#x27;: [1, 1, 1, 1], &#x27;i\u00f6e&#x27;: [1, 1, 1, 1], &#x27;i\u00f6\u00e4&#x27;: [1, 1, 1, 1], &#x27;iua&#x27;: [1, 0, 1, 1], &#x27;iue&#x27;: [1, 0, 1, 1], &#x27;iuo&#x27;: [1, 0, 1, 1], &#x27;oia&#x27;: [1, 0, 1, 1], &#x27;oie&#x27;: [1, 0, 1, 1], &#x27;oio&#x27;: [1, 0, 1, 1], &#x27;oiu&#x27;: [1, 0, 1, 1], &#x27;oue&#x27;: [1, 0, 1, 1], &#x27;ouo&#x27;: [1, 0, 1, 1], &#x27;uea&#x27;: [1, 1, 1, 1], &#x27;uie&#x27;: [1, 0, 1, 1], &#x27;uoa&#x27;: [1, 0, 1, 1], &#x27;uou&#x27;: [1, 0, 1, 1], &#x27;ye\u00e4&#x27;: [1, 1, 1, 1], &#x27;y\u00f6e&#x27;: [1, 0, 1, 1], &#x27;\u00e4ie&#x27;: [1, 0, 1, 1]}"}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"fullname": "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "VOWEL_SEQUENCES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;ai-oi&#x27;, &#x27;ai-ui&#x27;, &#x27;au-oi&#x27;, &#x27;eu-oi&#x27;, &#x27;ie-oi&#x27;, &#x27;ie-ui&#x27;, &#x27;oi-oi&#x27;, &#x27;oi-ui&#x27;, &#x27;uo-ui&#x27;, &#x27;y\u00f6-yi&#x27;, &#x27;a-ei&#x27;, &#x27;a-oi&#x27;, &#x27;e-ai&#x27;, &#x27;e-oi&#x27;, &#x27;e-\u00e4i&#x27;, &#x27;e-\u00f6i&#x27;, &#x27;i-ai&#x27;, &#x27;i-au&#x27;, &#x27;i-oi&#x27;, &#x27;i-\u00e4i&#x27;, &#x27;i-\u00f6i&#x27;, &#x27;o-ai&#x27;, &#x27;u-ai&#x27;, &#x27;u-ei&#x27;, &#x27;u-oi&#x27;, &#x27;y-ei&#x27;, &#x27;y-\u00e4i&#x27;, &#x27;\u00e4-yi&#x27;, &#x27;\u00e4-\u00f6i&#x27;, &#x27;ai-a&#x27;, &#x27;ai-e&#x27;, &#x27;ai-o&#x27;, &#x27;ai-u&#x27;, &#x27;au-a&#x27;, &#x27;au-e&#x27;, &#x27;eu-a&#x27;, &#x27;ie-a&#x27;, &#x27;ie-o&#x27;, &#x27;ie-u&#x27;, &#x27;ie-y&#x27;, &#x27;i-o-a&#x27;, &#x27;i-o-e&#x27;, &#x27;i-\u00f6-e&#x27;, &#x27;i-\u00f6-\u00e4&#x27;, &#x27;iu-a&#x27;, &#x27;iu-e&#x27;, &#x27;iu-o&#x27;, &#x27;oi-a&#x27;, &#x27;oi-e&#x27;, &#x27;oi-o&#x27;, &#x27;oi-u&#x27;, &#x27;ou-e&#x27;, &#x27;ou-o&#x27;, &#x27;u-e-a&#x27;, &#x27;ui-e&#x27;, &#x27;uo-a&#x27;, &#x27;uo-u&#x27;, &#x27;y-e-\u00e4&#x27;, &#x27;y\u00f6-e&#x27;, &#x27;\u00e4i-e&#x27;]"}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"fullname": "prosodic.langs.finnish.finnish_syllables.locate_long", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "locate_long", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"fullname": "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "is_inseparable_vowels", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"fullname": "prosodic.langs.finnish.finnish_syllables.consonantal_onset", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "consonantal_onset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">chars</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"fullname": "prosodic.langs.finnish.finnish_syllables.apply_3c", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "apply_3c", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span>, </span><span class=\"param\"><span class=\"n\">boundary_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"fullname": "prosodic.langs.finnish.finnish_syllables.t4_final_v", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "t4_final_v", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;u&#x27;, &#x27;y&#x27;]"}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"fullname": "prosodic.langs.finnish.finnish_syllables.t4_diphthongs", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "t4_diphthongs", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;eu&#x27;, &#x27;ou&#x27;, &#x27;\u00f6y&#x27;, &#x27;iu&#x27;, &#x27;\u00e4y&#x27;, &#x27;au&#x27;, &#x27;iy&#x27;, &#x27;ey&#x27;}"}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"fullname": "prosodic.langs.finnish.finnish_syllables.apply_t4", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "apply_t4", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span>, </span><span class=\"param\"><span class=\"n\">boundary_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"fullname": "prosodic.langs.finnish.finnish_syllables.separate_vowels", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "separate_vowels", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vowels</span>, </span><span class=\"param\"><span class=\"n\">boundary_list</span>, </span><span class=\"param\"><span class=\"n\">start</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"fullname": "prosodic.langs.finnish.finnish_syllables.make_syllables", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "make_syllables", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"fullname": "prosodic.langs.finnish.finnish_syllables.introduce_splits", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "introduce_splits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span>, </span><span class=\"param\"><span class=\"n\">boundary_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"fullname": "prosodic.langs.finnish.finnish_syllables.onset_lengths", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "onset_lengths", "kind": "variable", "doc": "<p></p>\n", "default_value": "[2, 4, 1]"}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"fullname": "prosodic.langs.finnish.finnish_syllables.make_splits", "modulename": "prosodic.langs.finnish.finnish_syllables", "qualname": "make_splits", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span>, </span><span class=\"param\"><span class=\"n\">boundary_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_text": {"fullname": "prosodic.langs.finnish.finnish_text", "modulename": "prosodic.langs.finnish.finnish_text", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_weight": {"fullname": "prosodic.langs.finnish.finnish_weight", "modulename": "prosodic.langs.finnish.finnish_weight", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"fullname": "prosodic.langs.finnish.finnish_weight.syll_weight", "modulename": "prosodic.langs.finnish.finnish_weight", "qualname": "syll_weight", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">syll_split</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.finnish.finnish_weight.make_weights": {"fullname": "prosodic.langs.finnish.finnish_weight.make_weights", "modulename": "prosodic.langs.finnish.finnish_weight", "qualname": "make_weights", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">syllables</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs": {"fullname": "prosodic.langs.langs", "modulename": "prosodic.langs.langs", "kind": "module", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language": {"fullname": "prosodic.langs.langs.Language", "modulename": "prosodic.langs.langs", "qualname": "Language", "kind": "class", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"fullname": "prosodic.langs.langs.Language.pronunciation_dictionary_filename", "modulename": "prosodic.langs.langs", "qualname": "Language.pronunciation_dictionary_filename", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;&#x27;"}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"fullname": "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep", "modulename": "prosodic.langs.langs", "qualname": "Language.pronunciation_dictionary_filename_sep", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\t&#x27;"}, "prosodic.langs.langs.Language.cache_fn": {"fullname": "prosodic.langs.langs.Language.cache_fn", "modulename": "prosodic.langs.langs", "qualname": "Language.cache_fn", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;lang_wordtypes&#x27;"}, "prosodic.langs.langs.Language.lang_espeak": {"fullname": "prosodic.langs.langs.Language.lang_espeak", "modulename": "prosodic.langs.langs", "qualname": "Language.lang_espeak", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.langs.langs.Language.lang": {"fullname": "prosodic.langs.langs.Language.lang", "modulename": "prosodic.langs.langs", "qualname": "Language.lang", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.langs.langs.Language.use_cache": {"fullname": "prosodic.langs.langs.Language.use_cache", "modulename": "prosodic.langs.langs", "qualname": "Language.use_cache", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "prosodic.langs.langs.Language.get": {"fullname": "prosodic.langs.langs.Language.get", "modulename": "prosodic.langs.langs", "qualname": "Language.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.Language.token2ipa": {"fullname": "prosodic.langs.langs.Language.token2ipa", "modulename": "prosodic.langs.langs", "qualname": "Language.token2ipa", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language.cached": {"fullname": "prosodic.langs.langs.Language.cached", "modulename": "prosodic.langs.langs", "qualname": "Language.cached", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language.phoneticize": {"fullname": "prosodic.langs.langs.Language.phoneticize", "modulename": "prosodic.langs.langs", "qualname": "Language.phoneticize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.Language.phonemizer": {"fullname": "prosodic.langs.langs.Language.phonemizer", "modulename": "prosodic.langs.langs", "qualname": "Language.phonemizer", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language.phonemize": {"fullname": "prosodic.langs.langs.Language.phonemize", "modulename": "prosodic.langs.langs", "qualname": "Language.phonemize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.Language.syllabify_ipa": {"fullname": "prosodic.langs.langs.Language.syllabify_ipa", "modulename": "prosodic.langs.langs", "qualname": "Language.syllabify_ipa", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ipa_str_with_spaces_between_phonemes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.Language.syllabifier": {"fullname": "prosodic.langs.langs.Language.syllabifier", "modulename": "prosodic.langs.langs", "qualname": "Language.syllabifier", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language.syllabiphon": {"fullname": "prosodic.langs.langs.Language.syllabiphon", "modulename": "prosodic.langs.langs", "qualname": "Language.syllabiphon", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.langs.langs.Language.syllabify": {"fullname": "prosodic.langs.langs.Language.syllabify", "modulename": "prosodic.langs.langs", "qualname": "Language.syllabify", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span>, </span><span class=\"param\"><span class=\"n\">num_sylls</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.fix_recasing": {"fullname": "prosodic.langs.langs.fix_recasing", "modulename": "prosodic.langs.langs", "qualname": "fix_recasing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span>, </span><span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.fix_num_sylls": {"fullname": "prosodic.langs.langs.fix_num_sylls", "modulename": "prosodic.langs.langs", "qualname": "fix_num_sylls", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sylls</span>, </span><span class=\"param\"><span class=\"n\">num</span>, </span><span class=\"param\"><span class=\"n\">unknown</span><span class=\"o\">=</span><span class=\"s1\">&#39;?&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.unstress": {"fullname": "prosodic.langs.langs.unstress", "modulename": "prosodic.langs.langs", "qualname": "unstress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ipa</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.stress": {"fullname": "prosodic.langs.langs.stress", "modulename": "prosodic.langs.langs", "qualname": "stress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ipa</span>, </span><span class=\"param\"><span class=\"n\">primary</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.ensure_maybe_stressed": {"fullname": "prosodic.langs.langs.ensure_maybe_stressed", "modulename": "prosodic.langs.langs", "qualname": "ensure_maybe_stressed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ipa_l</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.ensure_unstressed": {"fullname": "prosodic.langs.langs.ensure_unstressed", "modulename": "prosodic.langs.langs", "qualname": "ensure_unstressed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ipa_l</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.get_espeak_error_msg": {"fullname": "prosodic.langs.langs.get_espeak_error_msg", "modulename": "prosodic.langs.langs", "qualname": "get_espeak_error_msg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">paths</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.get_espeak_env": {"fullname": "prosodic.langs.langs.get_espeak_env", "modulename": "prosodic.langs.langs", "qualname": "get_espeak_env", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path_or_paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;/opt/homebrew/Cellar/espeak/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/lib/espeak/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/lib/x86_64-linux-gnu/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/lib/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/local/lib/&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">lib_fns</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;libespeak.so&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;libespeak.dylib&#39;</span><span class=\"p\">}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.langs.langs.set_espeak_env": {"fullname": "prosodic.langs.langs.set_espeak_env", "modulename": "prosodic.langs.langs", "qualname": "set_espeak_env", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path_or_paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;/opt/homebrew/Cellar/espeak/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/lib/espeak/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/lib/x86_64-linux-gnu/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/lib/&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/usr/local/lib/&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib": {"fullname": "prosodic.lib", "modulename": "prosodic.lib", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt": {"fullname": "prosodic.lib.MaxEnt", "modulename": "prosodic.lib.MaxEnt", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataPoint": {"fullname": "prosodic.lib.MaxEnt.DataPoint", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint", "kind": "class", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"fullname": "prosodic.lib.MaxEnt.DataPoint.__init__", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">line</span>, </span><span class=\"param\"><span class=\"n\">scansion</span>, </span><span class=\"param\"><span class=\"n\">scansion_str</span>, </span><span class=\"param\"><span class=\"n\">frequency</span></span>)</span>"}, "prosodic.lib.MaxEnt.DataPoint.line": {"fullname": "prosodic.lib.MaxEnt.DataPoint.line", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint.line", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"fullname": "prosodic.lib.MaxEnt.DataPoint.scansion", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint.scansion", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"fullname": "prosodic.lib.MaxEnt.DataPoint.scansion_str", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint.scansion_str", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"fullname": "prosodic.lib.MaxEnt.DataPoint.frequency", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint.frequency", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataPoint.violations": {"fullname": "prosodic.lib.MaxEnt.DataPoint.violations", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataPoint.violations", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator": {"fullname": "prosodic.lib.MaxEnt.DataAggregator", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator", "kind": "class", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.__init__", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meter</span>, </span><span class=\"param\"><span class=\"n\">data_path</span>, </span><span class=\"param\"><span class=\"n\">lang</span>, </span><span class=\"param\"><span class=\"n\">is_tab_formatted</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">delimeter</span><span class=\"o\">=</span><span class=\"s1\">&#39;|&#39;</span></span>)</span>"}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.meter", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.meter", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.lang", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.lang", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.has_selected", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.has_selected", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.is_tab_formatted", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.constraints", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.constraints", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.lines", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.lines", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.data": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.data", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.data", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"fullname": "prosodic.lib.MaxEnt.DataAggregator.convert_to_table", "modulename": "prosodic.lib.MaxEnt", "qualname": "DataAggregator.convert_to_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer", "kind": "class", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_aggregator</span></span>)</span>"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.constraints", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.lines", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.mu", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.sigma", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.weights", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.train", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.train", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"o\">=</span><span class=\"mi\">10000</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">only_positive_weights</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.report", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.report", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.generate_save_string", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.calculate_gradient", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.calculate_gradient_quotient_term", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">outs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.calculate_overfit_penalty_gradient", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.calculate_objective", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.calculate_probabilities", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">out</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"fullname": "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty", "modulename": "prosodic.lib.MaxEnt", "qualname": "MaxEntAnalyzer.calculate_overfit_penalty", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert": {"fullname": "prosodic.lib.lexconvert", "modulename": "prosodic.lib.lexconvert", "kind": "module", "doc": "<p>lexconvert v0.301 - convert phonemes between different speech synthesizers etc\n(c) 2007-19 Silas S. Brown.  License: GPL</p>\n"}, "prosodic.lib.lexconvert.Phonemes": {"fullname": "prosodic.lib.lexconvert.Phonemes", "modulename": "prosodic.lib.lexconvert", "qualname": "Phonemes", "kind": "function", "doc": "<p>Create phonemes by calling vowel(), consonant(),\nvariant() and other().</p>\n\n<p>For the variants, if a particular variant does not\nexist in the destination format then we will treat it\nas equivalent to the last non-variant we created.</p>\n\n<p>For anything else that does not exist in the\ndestination format, we will first try to break the\nsource's phoneme into parts (e.g. see the treatment\nof opt_ol_as_in_gold by eSpeak and bbcmicro), and if\nthat still doesn't work then we drop a character\n(warning depending on the source format's setting of\nsafe_to_drop_characters).  makeDic does however warn\nabout any non-variant consonants, or non-variant\nvowels that weren't marked optional, missing from a\nformat.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.LexFormats": {"fullname": "prosodic.lib.lexconvert.LexFormats", "modulename": "prosodic.lib.lexconvert", "qualname": "LexFormats", "kind": "function", "doc": "<p>Makes the phoneme conversion tables of each format.\nEach table has string to phoneme entries and phoneme\nto string entries.  The string to phoneme entries are\nused when converting OUT of that format, and the\nphoneme to string entries are used when converting IN\n(so you can recognise phonemes you don't support and\nconvert them to something else).  By default, a tuple\nof the form (string,phoneme) will create entries in\nBOTH directions; one-directional entries are created\nvia (string,phoneme,False) or (phoneme,string,False).\nThe makeDic function checks the keys are unique.</p>\n\n<p>First parameter is always a description of the\nformat, then come the phoneme entries as described\nabove, then any additional settings:</p>\n\n<p>stress_comes_before_vowel (default False means any\n  stress mark goes AFTER the affected vowel; set to\n  True if the format requires stress placed before)</p>\n\n<p>word_separator (default same as phoneme_separator)\n  phoneme_separator (default \" \")\n  clause_separator (default newline)</p>\n\n<p>(For a special case, clause_separator can also be\n   set to a function.  If that happens, the function\n   will be called whenever lexconvert needs to output\n   a list of (lists of words) in this format.  See\n   bbcmicro for an example function clause_separator)</p>\n\n<p>safe_to_drop_characters (default False, can be a\n  string of safe characters or True = all; controls\n  warnings when unrecognised characters are found)</p>\n\n<p>approximate_missing (default False) - if True,\n  makeDic will attempt to compensate for missing\n  phonemes by approximating them to others, instead of\n  warning about them.  This is useful for American codes\n  that can't cope with all the British English phonemes.\n  (Approximation is done automatically anyway in the\n  case of variant phonemes; approximate_missing adds in\n  some additional approximations - see comments in code)</p>\n\n<p>cleanup_regexps (default none) - optional list of\n  (search,replace) regular expressions to \"clean up\"\n  after converting each word INTO this format\n  cleanup_func (default none) - optional special-case\n  function to pass result through after cleanup_regexps</p>\n\n<p>cvtOut_regexps (default none) - optional list of\n  (search,replace) regular expressions to \"clean up\"\n  before starting to convert OUT of this format\n  cvtOut_func (default none) - optional special-case\n  function to pass through before any cvtOut_regexps</p>\n\n<p>inline_format (default \"%s\") the format string for\n  printing a word with --phones or --phones2phones\n  (can be used to put markup around each word)\n  (can also be a function taking the phonetic word\n   and returning the resulting string, e.g. bbcmicro)</p>\n\n<p>output_is_binary (default False) - True if the output\n  is almost certainly unsuitable for a terminal; will\n  cause lexconvert to refuse to print phonemes unless\n  its standard output is redirected to a file or pipe\n  (affects the --phones and --phones2phones options)</p>\n\n<p>inline_header (default none) text to print first\n    when outputting from --phones or --phones2phones\n  inline_footer (default none) text to print last\n  inline_oneoff_header (default none) text to print\n    before inline_header on the first time only</p>\n\n<p>lex_filename - filename of a lexicon file.  If this\n  is not specified, there is no support for writing a\n  lexicon in this format: there can still be READ\n  support if you define lex_read_function to open the\n  lexicon by itself, but otherwise the format can be\n  used only with --phones and --phones2phones.</p>\n\n<p>lex_entry_format - format string for writing each\n  (word, pronunciation) entry to the lexicon file.\n  This is also needed for lexicon-write support.</p>\n\n<p>lex_header, lex_footer - optional strings to write\n  at the beginning and at the end of the lexicon file\n  (can also be functions that take the open file as a\n   parameter, e.g. for bbcmicro; lex_footer is\n   allowed to close the file if it needs to do\n   something with it afterwards)</p>\n\n<p>lex_word_case - optional \"upper\" or \"lower\" to\n  force a particular case for lexicon words (not\n  pronunciations - they're determined by the table).\n  The default is to allow words to be in either case.</p>\n\n<p>lex_type (default \"\") - used by the --formats\n  option when summarising the support for each format</p>\n\n<p>lex_read_function - Python function to READ the\n  lexicon file and return a (word,phonemes) list.\n  If this is not specified, there's no read support\n  for lexicons in this format (but there can still be\n  write support - see above - and you can still use\n  --phones and --phones2phones).  If lex_filename is\n  specified then this function will be given the open\n  file as a parameter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_try": {"fullname": "prosodic.lib.lexconvert.mainopt_try", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_try", "kind": "function", "doc": "<p>*<format> [<pronunciation>]\nConvert input from <format> into eSpeak and try it out.\n(Requires the 'espeak' command.)\nE.g.: python lexconvert.py --try festival h @0 l ou1\n or: python lexconvert.py --try unicode-ipa '\\u02c8\\u0279\\u026adn\\u0329' (for Unicode put '\\uNNNN' or UTF-8)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_trymac": {"fullname": "prosodic.lib.lexconvert.mainopt_trymac", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_trymac", "kind": "function", "doc": "<p>*<format> [<pronunciation>]\nConvert phonemes from <format> into Mac and try it using the Mac OS 'say' command</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"fullname": "prosodic.lib.lexconvert.mainopt_trymac_uk", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_trymac_uk", "kind": "function", "doc": "<p>*<format> [<pronunciation>]\nConvert phonemes from <format> and try it with Mac OS British voices (see --mac-uk for details)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_phones": {"fullname": "prosodic.lib.lexconvert.mainopt_phones", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_phones", "kind": "function", "doc": "<p>*<format> [<words>]\nUse eSpeak to convert text to phonemes, and then convert the phonemes to format 'format'.\nE.g.: python lexconvert.py --phones unicode-ipa This is a test sentence.\nSet environment variable PHONES_PIPE_COMMAND to an additional command to which to write the phones as well as standard output.  (If standard input is a terminal then this will be done separately after each line.)\n(Some commercial speech synthesizers do not work well when driven entirely from phonemes, because their internal format is different and is optimised for normal text.)\nSet format to 'all' if you want to see the phonemes in ALL supported formats.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_ruby": {"fullname": "prosodic.lib.lexconvert.mainopt_ruby", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_ruby", "kind": "function", "doc": "<p>*<format> [<words>]\nLike --phones but outputs the result as HTML RUBY markup, with each word's pronunciation symbols placed above the corresponding English word.\nE.g.: python lexconvert.py --ruby unicode-ipa This is a test sentence.\nThis option is made more complicated by the fact that different versions of eSpeak may space the phoneme output differently, for example when handling numbers; if your eSpeak version is not recognised then all numbers are unannotated. Anyway you are advised not to rely on this option working with the new development NG versions of eSpeak. If the version you have behaves unexpectedly, words and phonemes output might lose synchronisation. However this option is believed to be stable when used with simple text and the original eSpeak.\nYou can optionally set the RUBY_GRADINT_CGI environment variable to the URL of an instance of Gradint Web Edition to generate audio links for each word.  If doing this in a Web Adjuster filter, see comments in the lexconvert source for setup details.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"fullname": "prosodic.lib.lexconvert.pipeThroughEspeak", "modulename": "prosodic.lib.lexconvert", "qualname": "pipeThroughEspeak", "kind": "function", "doc": "<p>Writes inpt to espeak -q -x (in chunks if necessary) and returns the result</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inpt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.espeak_version_line": {"fullname": "prosodic.lib.lexconvert.espeak_version_line", "modulename": "prosodic.lib.lexconvert", "qualname": "espeak_version_line", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.writeFormatHeader": {"fullname": "prosodic.lib.lexconvert.writeFormatHeader", "modulename": "prosodic.lib.lexconvert", "qualname": "writeFormatHeader", "kind": "function", "doc": "<p>Writes a header for 'format' when outputting in all formats.  Assumes the output MIGHT end up being more than one line.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">format</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"fullname": "prosodic.lib.lexconvert.writeFormatHeader_called", "modulename": "prosodic.lib.lexconvert", "qualname": "writeFormatHeader_called", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "prosodic.lib.lexconvert.mainopt_check_variants": {"fullname": "prosodic.lib.lexconvert.mainopt_check_variants", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_check_variants", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"fullname": "prosodic.lib.lexconvert.mainopt_check_for_similar_formats", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_check_for_similar_formats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.festival_group_stress": {"fullname": "prosodic.lib.lexconvert.festival_group_stress", "modulename": "prosodic.lib.lexconvert", "qualname": "festival_group_stress", "kind": "function", "doc": "<p>Special-case cleanup_func for the Festival format</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_convert": {"fullname": "prosodic.lib.lexconvert.mainopt_convert", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_convert", "kind": "function", "doc": "<p>*<from-format> <to-format>\nConvert a user lexicon (generally from its default filename; if this cannot be found then lexconvert will tell you what it should be).\nE.g.: python lexconvert.py --convert festival cepstral</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"fullname": "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_festival_dictionary_to_espeak", "kind": "function", "doc": "<p><location>\nConvert the Festival Oxford Advanced Learners Dictionary (OALD) pronunciation lexicon to eSpeak.\nYou need to specify the location of the OALD file in <location>,\ne.g. for Debian festlex-oald package: python lexconvert.py --festival-dictionary-to-espeak /usr/share/festival/dicts/oald/all.scm\nor if you can't install the Debian package, try downloading <a href=\"http://ftp.debian.org/debian/pool/non-free/f/festlex-oald/festlex-oald_1.4.0.orig.tar.gz\">http://ftp.debian.org/debian/pool/non-free/f/festlex-oald/festlex-oald_1.4.0.orig.tar.gz</a>, unpack it into /tmp, and do: python lexconvert.py --festival-dictionary-to-espeak /tmp/festival/lib/dicts/oald/oald-0.4.out\nIn all cases you need to cd to the eSpeak source directory before running this.  en_extra will be overwritten.  Converter will also read your ~/.festivalrc if it exists.  (You can later incrementally update from ~/.festivalrc using the --convert option; the entries from the system dictionary will not be overwritten in this case.)  Specify --without-check to bypass checking the existing eSpeak pronunciation for OALD entries (much faster, but makes a larger file and in some cases compromises the pronunciation quality).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_syllables": {"fullname": "prosodic.lib.lexconvert.mainopt_syllables", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_syllables", "kind": "function", "doc": "<p>[<words>]\nAttempt to break 'words' into syllables for music lyrics (uses espeak to determine how many syllables are needed)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.wordSeparator": {"fullname": "prosodic.lib.lexconvert.wordSeparator", "modulename": "prosodic.lib.lexconvert", "qualname": "wordSeparator", "kind": "function", "doc": "<p>Returns the effective word separator of format (remembering that it defaults to same as phoneme_separator</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">format</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"fullname": "prosodic.lib.lexconvert.mainopt_phones2phones", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_phones2phones", "kind": "function", "doc": "<p>*<format1> <format2> [<phonemes in format1>]\nPerform a one-off conversion of phonemes from format1 to format2 (format2 can be 'all' if you want)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"fullname": "prosodic.lib.lexconvert.parseIntoWordsAndClauses", "modulename": "prosodic.lib.lexconvert", "qualname": "parseIntoWordsAndClauses", "kind": "function", "doc": "<p>Returns list of clauses, each of which is a list of words, assuming 'phones' are in format 'format'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">format</span>, </span><span class=\"param\"><span class=\"n\">phones</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"fullname": "prosodic.lib.lexconvert.mainopt_mac_uk", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_mac_uk", "kind": "function", "doc": "<p><from-format> [<text>]\nSpeak text in Mac OS 10.7+ British voices while using a lexicon converted in from <from-format>. As these voices do not have user-modifiable lexicons, lexconvert must binary-patch your system's master lexicon; this is at your own risk! (Superuser privileges are needed the first time. A backup of the system file is made, and all changes are restored on normal exit but if you force-quit then you might need to restore the backup manually. Text speaking needs to be under lexconvert's control because it usually has to change the input words to make them fit the available space in the binary lexicon.) By default the Daniel voice is used; Emily or Serena can be selected by setting the MACUK_VOICE environment variable.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.Counter": {"fullname": "prosodic.lib.lexconvert.Counter", "modulename": "prosodic.lib.lexconvert", "qualname": "Counter", "kind": "class", "doc": "<p>A simple class with two static members, count and subcount, for use by the consonant(), vowel() and other() functions</p>\n"}, "prosodic.lib.lexconvert.Counter.c": {"fullname": "prosodic.lib.lexconvert.Counter.c", "modulename": "prosodic.lib.lexconvert", "qualname": "Counter.c", "kind": "variable", "doc": "<p></p>\n", "default_value": "53"}, "prosodic.lib.lexconvert.Counter.sc": {"fullname": "prosodic.lib.lexconvert.Counter.sc", "modulename": "prosodic.lib.lexconvert", "qualname": "Counter.sc", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.lib.lexconvert.other": {"fullname": "prosodic.lib.lexconvert.other", "modulename": "prosodic.lib.lexconvert", "qualname": "other", "kind": "function", "doc": "<p>Used by Phonemes() when creating something that is neither a vowel nor a consonant, e.g. a stress mark</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.consonants": {"fullname": "prosodic.lib.lexconvert.consonants", "modulename": "prosodic.lib.lexconvert", "qualname": "consonants", "kind": "variable", "doc": "<p></p>\n", "default_value": "{9, 10, 11, 12, 16, 17, 18, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45}"}, "prosodic.lib.lexconvert.mainVowels": {"fullname": "prosodic.lib.lexconvert.mainVowels", "modulename": "prosodic.lib.lexconvert", "qualname": "mainVowels", "kind": "variable", "doc": "<p></p>\n", "default_value": "{1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 21, 28, 30, 37, 39, 40}"}, "prosodic.lib.lexconvert.consonant": {"fullname": "prosodic.lib.lexconvert.consonant", "modulename": "prosodic.lib.lexconvert", "qualname": "consonant", "kind": "function", "doc": "<p>Used by Phonemes() when creating a consonant</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.vowel": {"fullname": "prosodic.lib.lexconvert.vowel", "modulename": "prosodic.lib.lexconvert", "qualname": "vowel", "kind": "function", "doc": "<p>Used by Phonemes() when creating a vowel</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.opt_vowel": {"fullname": "prosodic.lib.lexconvert.opt_vowel", "modulename": "prosodic.lib.lexconvert", "qualname": "opt_vowel", "kind": "function", "doc": "<p>Used by Phonemes() when creating an optional vowel (one that has no warning issued if some format doesn't support it)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.variant": {"fullname": "prosodic.lib.lexconvert.variant", "modulename": "prosodic.lib.lexconvert", "qualname": "variant", "kind": "function", "doc": "<p>Used by Phonemes() when creating a variant of the just-defined vowel/consonant/etc</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.ifset": {"fullname": "prosodic.lib.lexconvert.ifset", "modulename": "prosodic.lib.lexconvert", "qualname": "ifset", "kind": "function", "doc": "<p>Checks the environment variable var; if it is set (non-empty), return a, otherwise return b.  Used in LexFormats to create tables with variations set by the environment.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">var</span>, </span><span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.speakjet": {"fullname": "prosodic.lib.lexconvert.speakjet", "modulename": "prosodic.lib.lexconvert", "qualname": "speakjet", "kind": "function", "doc": "<p>Special-case function for the Speakjet table</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">symbol</span>, </span><span class=\"param\"><span class=\"n\">opcode</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.makeDic": {"fullname": "prosodic.lib.lexconvert.makeDic", "modulename": "prosodic.lib.lexconvert", "qualname": "makeDic", "kind": "function", "doc": "<p>Make a dictionary with a doc string, default-bidirectional mappings and extra settings; see LexFormats for how this is used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">doc</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.makeVariantDic": {"fullname": "prosodic.lib.lexconvert.makeVariantDic", "modulename": "prosodic.lib.lexconvert", "qualname": "makeVariantDic", "kind": "function", "doc": "<p>Like makeDic but create a new 'variant' version of the last-made dictionary, modifying some phonemes and settings (and giving it a new doc string) but keeping everything else the same.  Any list settings (e.g. cleanup_regexps) are ADDED to by the variant; other settings and phonemes are REPLACED if they are specified in the variant.  If you don't want subsequent variants to inherit the changes made by this variant, add noInherit=True to the keyword args.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">doc</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.getSetting": {"fullname": "prosodic.lib.lexconvert.getSetting", "modulename": "prosodic.lib.lexconvert", "qualname": "getSetting", "kind": "function", "doc": "<p>Gets a setting from lexFormats, exception if not there</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">formatName</span>, </span><span class=\"param\"><span class=\"n\">settingName</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.checkSetting": {"fullname": "prosodic.lib.lexconvert.checkSetting", "modulename": "prosodic.lib.lexconvert", "qualname": "checkSetting", "kind": "function", "doc": "<p>Gets a setting from lexFormats, default if not there</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">formatName</span>, </span><span class=\"param\"><span class=\"n\">settingName</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.getBuf": {"fullname": "prosodic.lib.lexconvert.getBuf", "modulename": "prosodic.lib.lexconvert", "qualname": "getBuf", "kind": "function", "doc": "<p>Return a buffer to which bytes may be written, for Python 2 and 3 compatibility</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.make_dictionary": {"fullname": "prosodic.lib.lexconvert.make_dictionary", "modulename": "prosodic.lib.lexconvert", "qualname": "make_dictionary", "kind": "function", "doc": "<p>Uses lexFormats to make a mapping dictionary from a particular source format to a particular dest format, and also sets module variables for that particular conversion (TODO: put those module vars into an object in case someone wants to use this code in a multithreaded server)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sourceName</span>, </span><span class=\"param\"><span class=\"n\">destName</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.warnedAlready": {"fullname": "prosodic.lib.lexconvert.warnedAlready", "modulename": "prosodic.lib.lexconvert", "qualname": "warnedAlready", "kind": "variable", "doc": "<p></p>\n", "default_value": "set()"}, "prosodic.lib.lexconvert.convert": {"fullname": "prosodic.lib.lexconvert.convert", "modulename": "prosodic.lib.lexconvert", "qualname": "convert", "kind": "function", "doc": "<p>Convert pronunc from source to dest.  pronunc can be a string or a list; if a list then we'll recurse on each of the list elements and return a new list (this is meant for batch-converting clauses etc)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pronunc</span>, </span><span class=\"param\"><span class=\"n\">source</span>, </span><span class=\"param\"><span class=\"n\">dest</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.unicode_preprocess": {"fullname": "prosodic.lib.lexconvert.unicode_preprocess", "modulename": "prosodic.lib.lexconvert", "qualname": "unicode_preprocess", "kind": "function", "doc": "<p>Special-case cvtOut_func for unicode-ipa: tries to catch \\uNNNN etc</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"fullname": "prosodic.lib.lexconvert.ascii_braille_to_unicode", "modulename": "prosodic.lib.lexconvert", "qualname": "ascii_braille_to_unicode", "kind": "function", "doc": "<p>Special-case cleanup_func for braille-ipa (set by braille-ipa if BRAILLE_UNICODE is set).  Converts Braille ASCII to Unicode dot patterns.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"fullname": "prosodic.lib.lexconvert.unicode_to_ascii_braille", "modulename": "prosodic.lib.lexconvert", "qualname": "unicode_to_ascii_braille", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">u</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"fullname": "prosodic.lib.lexconvert.hiragana_to_katakana", "modulename": "prosodic.lib.lexconvert", "qualname": "hiragana_to_katakana", "kind": "function", "doc": "<p>Special-case cleanup_func for kana-approx; converts all hiragana characters in unicode string 'u' into katakana if KANA_TYPE is set to anything beginning with a 'k'</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">u</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"fullname": "prosodic.lib.lexconvert.espeak_probably_right_already", "modulename": "prosodic.lib.lexconvert", "qualname": "espeak_probably_right_already", "kind": "function", "doc": "<p>Used by convert_system_festival_dictionary_to_espeak to compare a \"new\" pronunciation with eSpeak's existing pronunciation.  As the transcription from OALD to eSpeak is only approximate, it could be that our new pronunciation is not identical to the existing one but the existing one is actually correct; try to detect when this happens by checking if the pronunciations are the same after some simplifications.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">existing_pronunc</span>, </span><span class=\"param\"><span class=\"n\">new_pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.parse_festival_dict": {"fullname": "prosodic.lib.lexconvert.parse_festival_dict", "modulename": "prosodic.lib.lexconvert", "qualname": "parse_festival_dict", "kind": "function", "doc": "<p>For OALD; yields word,part-of-speech,pronunciation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">festival_location</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.Message": {"fullname": "prosodic.lib.lexconvert.Message", "modulename": "prosodic.lib.lexconvert", "qualname": "Message", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"fullname": "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak", "modulename": "prosodic.lib.lexconvert", "qualname": "convert_system_festival_dictionary_to_espeak", "kind": "function", "doc": "<p>See mainopt_festival_dictionary_to_espeak</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">festival_location</span>,</span><span class=\"param\">\t<span class=\"n\">check_existing_pronunciation</span>,</span><span class=\"param\">\t<span class=\"n\">add_user_dictionary_also</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.read_user_lexicon": {"fullname": "prosodic.lib.lexconvert.read_user_lexicon", "modulename": "prosodic.lib.lexconvert", "qualname": "read_user_lexicon", "kind": "function", "doc": "<p>Calls the appropriate lex_read_function, opening lex_filename first if supplied</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fromFormat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.replHome": {"fullname": "prosodic.lib.lexconvert.replHome", "modulename": "prosodic.lib.lexconvert", "qualname": "replHome", "kind": "function", "doc": "<p>Format fname for printing, substituting ~ for HOME if appropriate</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fname</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"fullname": "prosodic.lib.lexconvert.get_macuk_lexicon", "modulename": "prosodic.lib.lexconvert", "qualname": "get_macuk_lexicon", "kind": "function", "doc": "<p>Converts lexicon from fromFormat and returns a list suitable for MacBritish_System_Lexicon's readWithLex</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fromFormat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.as_utf8": {"fullname": "prosodic.lib.lexconvert.as_utf8", "modulename": "prosodic.lib.lexconvert", "qualname": "as_utf8", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.as_unicode": {"fullname": "prosodic.lib.lexconvert.as_unicode", "modulename": "prosodic.lib.lexconvert", "qualname": "as_unicode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.maybe_bytes": {"fullname": "prosodic.lib.lexconvert.maybe_bytes", "modulename": "prosodic.lib.lexconvert", "qualname": "maybe_bytes", "kind": "function", "doc": "<p>Python 2/3 compatibility: convert s to bytes if i is bytes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.as_printable": {"fullname": "prosodic.lib.lexconvert.as_printable", "modulename": "prosodic.lib.lexconvert", "qualname": "as_printable", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.convert_user_lexicon": {"fullname": "prosodic.lib.lexconvert.convert_user_lexicon", "modulename": "prosodic.lib.lexconvert", "qualname": "convert_user_lexicon", "kind": "function", "doc": "<p>See mainopt_convert</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fromFormat</span>, </span><span class=\"param\"><span class=\"n\">toFormat</span>, </span><span class=\"param\"><span class=\"n\">outFile</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"fullname": "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount", "modulename": "prosodic.lib.lexconvert", "qualname": "bbcMicro_partPhonemeCount", "kind": "function", "doc": "<p>Returns the number of 'part phonemes' (at least that's what I'm calling them) for the BBC Micro phonemes in pronunc.  The *SPEAK command cannot take more than 117 part-phonemes at a time before saying \"Line too long\", and in some cases it takes less than that (I'm not sure why); 115 is a safer limit.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.markup_inline_word": {"fullname": "prosodic.lib.lexconvert.markup_inline_word", "modulename": "prosodic.lib.lexconvert", "qualname": "markup_inline_word", "kind": "function", "doc": "<p>Returns pronunc with any necessary markup for putting it in a text (using the inline_format setting)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">format</span>, </span><span class=\"param\"><span class=\"n\">pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"fullname": "prosodic.lib.lexconvert.markup_doubleTalk_word", "modulename": "prosodic.lib.lexconvert", "qualname": "markup_doubleTalk_word", "kind": "function", "doc": "<p>Special-case function set as inline_format in doubletalk (checks environment variables for command code)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"fullname": "prosodic.lib.lexconvert.markup_bbcMicro_word", "modulename": "prosodic.lib.lexconvert", "qualname": "markup_bbcMicro_word", "kind": "function", "doc": "<p>Special-case function set as inline_format in bbcmicro.  Begins a new *SPEAK command when necessary.  See also write_bbcmicro_phones.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pronunc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.sylcount": {"fullname": "prosodic.lib.lexconvert.sylcount", "modulename": "prosodic.lib.lexconvert", "qualname": "sylcount", "kind": "function", "doc": "<p>Tries to count the number of syllables in a Festival string (see mainopt_syllables).  We treat @ as counting the same as the previous syllable (e.g. \"fire\", \"power\"), but this can vary in different songs, so the result will likely need a bit of proofreading.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">example_format_festival</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.hyphenate": {"fullname": "prosodic.lib.lexconvert.hyphenate", "modulename": "prosodic.lib.lexconvert", "qualname": "hyphenate", "kind": "function", "doc": "<p>See mainopt_syllables</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span>, </span><span class=\"param\"><span class=\"n\">numSyls</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.macSayCommand": {"fullname": "prosodic.lib.lexconvert.macSayCommand", "modulename": "prosodic.lib.lexconvert", "qualname": "macSayCommand", "kind": "function", "doc": "<p>Return the environment variable SAY_COMMAND if it is set and if it is non-empty, otherwise return \"say\".\nE.g. SAY_COMMAND=\"say -o file.aiff\" (TODO: document this in the help text?)\nIn Gradint you can set (e.g. if you have a ~/.festivalrc) extra_speech=[(\"en\",\"python lexconvert.py --mac-uk festival\")] ; extra_speech_tofile=[(\"en\",'echo %s | SAY_COMMAND=\"say -o /tmp/said.aiff\" python lexconvert.py --mac-uk festival &amp;&amp; sox /tmp/said.aiff /tmp/said.wav',\"/tmp/said.wav\")]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.stdin_is_terminal": {"fullname": "prosodic.lib.lexconvert.stdin_is_terminal", "modulename": "prosodic.lib.lexconvert", "qualname": "stdin_is_terminal", "kind": "function", "doc": "<p>Returns True if it seems the standard input is connected to a terminal (rather than piped from a file etc)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.getInputText": {"fullname": "prosodic.lib.lexconvert.getInputText", "modulename": "prosodic.lib.lexconvert", "qualname": "getInputText", "kind": "function", "doc": "<p>Gets text either from the command line or from standard input.  Issue prompt if there's nothing on the command line and standard input is connected to a tty instead of a pipe or file.  If as_iterable, return an iterable object over the lines instead of reading and returning all text at once.  If as_iterable=='maybe', return the iterable but if not reading from a tty then read everything into one item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">prompt</span>, </span><span class=\"param\"><span class=\"n\">as_iterable</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.my_xreadlines": {"fullname": "prosodic.lib.lexconvert.my_xreadlines", "modulename": "prosodic.lib.lexconvert", "qualname": "my_xreadlines", "kind": "function", "doc": "<p>On some platforms this might be a bit more responsive than sys.stdin.xreadlines</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.output_clauses": {"fullname": "prosodic.lib.lexconvert.output_clauses", "modulename": "prosodic.lib.lexconvert", "qualname": "output_clauses", "kind": "function", "doc": "<p>Writes out clauses and words in format 'format' (clauses is a list of lists of words in the phones of 'format').  By default, calls markup_inline_word and join as appropriate.  If however the format's 'clause_separator' has been set to a special case, calls that.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">format</span>, </span><span class=\"param\"><span class=\"n\">clauses</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"fullname": "prosodic.lib.lexconvert.write_bbcmicro_phones", "modulename": "prosodic.lib.lexconvert", "qualname": "write_bbcmicro_phones", "kind": "function", "doc": "<p>Special-case function set as clause_separator in bbcmicro format.  Must be a special case because it needs to track any extra keystrokes to avoid \"Line too long\".  And while we're at it, we might as well start a new *SPEAK command with each clause, using the natural brief delay between commands; this should minimise the occurrence of additional delays in arbitrary places.  Also calls print_bbc_warnings</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">clauses</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.print_bbc_warnings": {"fullname": "prosodic.lib.lexconvert.print_bbc_warnings", "modulename": "prosodic.lib.lexconvert", "qualname": "print_bbc_warnings", "kind": "function", "doc": "<p>Print any relevant size warnings regarding sending 'keyCount' keys in 'lineCount' lines to the BBC Micro</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">keyCount</span>, </span><span class=\"param\"><span class=\"n\">lineCount</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"fullname": "prosodic.lib.lexconvert.bbc_prepDefaultLex", "modulename": "prosodic.lib.lexconvert", "qualname": "bbc_prepDefaultLex", "kind": "function", "doc": "<p>Special-case function set as lex_header in bbcmicro format.  If SPEECH_DISK and MAKE_SPEECH_ROM is set, then read the ROM code from SPEECH_DISK and write to outFile (meant to go before the lexicon, to make a modified BBC Micro Speech ROM with custom lexicon)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outFile</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"fullname": "prosodic.lib.lexconvert.bbc_appendDefaultLex", "modulename": "prosodic.lib.lexconvert", "qualname": "bbc_appendDefaultLex", "kind": "function", "doc": "<p>Special-case function set as lex_footer in bbcmicro format.  If SPEECH_DISK is set, read Speech's default lexicon from it and append this to outFile.  Otherwise just write a terminating &gt;** to outFile.  In either case, check for exceeding 16k if we're MAKE_SPEECH_ROM, close the file and call print_bbclex_instructions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">outFile</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.bbcshortest": {"fullname": "prosodic.lib.lexconvert.bbcshortest", "modulename": "prosodic.lib.lexconvert", "qualname": "bbcshortest", "kind": "function", "doc": "<p>Convert integer n into the shortest possible number of BBC Micro keystrokes; prefer hex if and only if the extra '&amp;' keystroke won't make it any longer than its decimal equivalent</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.bbcKeystrokes": {"fullname": "prosodic.lib.lexconvert.bbcKeystrokes", "modulename": "prosodic.lib.lexconvert", "qualname": "bbcKeystrokes", "kind": "function", "doc": "<p>Return BBC BASIC keystrokes to put data into RAM starting at address start, without using the BASIC heap in the process (although we do use one of the page-4 integer variables to save some keystrokes).  Assumes the data is mostly ASCII so the $ operator is the least-keystrokes method of getting it in (rather than ? and ! operators, assembler EQUB/EQUW/EQUS, 6502 mnemonics, etc); we don't mind about overwriting the byte after with a CHR$(13).  Keystrokes are limited to ASCII for easier copy/paste.  See comments for more details.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">start</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"fullname": "prosodic.lib.lexconvert.print_bbclex_instructions", "modulename": "prosodic.lib.lexconvert", "qualname": "print_bbclex_instructions", "kind": "function", "doc": "<p>Print suitable instructions for a BBC Micro lexicon of the given filename and size (the exact nature of the instructions depends on the size).  If appropriate, create a .key file containing keystrokes for transferring to an emulator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fname</span>, </span><span class=\"param\"><span class=\"n\">size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.mainopt_version": {"fullname": "prosodic.lib.lexconvert.mainopt_version", "modulename": "prosodic.lib.lexconvert", "qualname": "mainopt_version", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.main": {"fullname": "prosodic.lib.lexconvert.main", "modulename": "prosodic.lib.lexconvert", "qualname": "main", "kind": "function", "doc": "<p>Introspect the module to find the mainopt_ functions, and either call one of them or print the help.  Returns the error code to send back to the OS.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.catchSignals": {"fullname": "prosodic.lib.lexconvert.catchSignals", "modulename": "prosodic.lib.lexconvert", "qualname": "catchSignals", "kind": "function", "doc": "<p>We had better try to catch all signals if using MacBritish_System_Lexicon so we can safely clean it up. We raise KeyboardInterrupt instead (need to catch this). Might not work with multithreaded code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon", "kind": "class", "doc": "<p>Overwrites some of the pronunciations in the system\nlexicon (after backing up the original).  Cannot\nchange the actual words in the system lexicon, so just\nalters pronunciations of words you don't intend to use\nso you can substitute these into your texts.\nRestores the lexicon on close().</p>\n"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.__init__", "kind": "function", "doc": "<p>text is the text you want to speak (so that any\nwords used in it that are not mentioned in your\nlexicon are unchanged in the system lexicon);\ntext=\"\" means you just want to speak phonemes.\nSpecial value of text=False means lexicon read only.\nvoice can be Daniel, Emily or Serena.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">voice</span><span class=\"o\">=</span><span class=\"s1\">&#39;Daniel&#39;</span></span>)</span>"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.instances", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.voice", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.filename", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.textToAvoid", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.restoreDic", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.allWords", "kind": "function", "doc": "<p>Returns a list of words that are defined in the system lexicon (which won't be changed, but see allPh)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.allPh", "kind": "function", "doc": "<p>Returns a list of (file position, phoneme string) for each of the primary phoneme entries from the system lexicon.  These entries can be changed in-place by writing to the said file position, and then spoken by giving the voice the corresponding word from allWords (but see also usable_words).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.usable_words", "kind": "function", "doc": "<p>Returns a list of (word,phoneme_file_position,original_phonemes) by combining allWords with allPh, but omitting any words that don't seem 'usable' (for example words that contain spaces, since these lexicon entries don't seem to be actually used by the voice).  Words that occur in self.textToAvoid are also considered non-usable, unless they also occur in words_ok_to_redefine (user lexicon).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">words_ok_to_redefine</span><span class=\"o\">=</span><span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.check_redef", "kind": "function", "doc": "<p>Diagnostic function to list on standard error the 'redefinitions' we want to make.  wordsAndPhonemes is a list of (original system-lexicon word, proposed new phonemes).  The old phonemes are also listed, fetched from allPh.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">wordsAndPhonemes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.speakPhones", "kind": "function", "doc": "<p>Speaks every phonetic word in phonesList</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">phonesList</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.readWithLex", "kind": "function", "doc": "<p>Reads the text given in the constructor after setting up the lexicon with the given (word,phoneme) list</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">lex</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.setMultiple", "kind": "function", "doc": "<p>Sets phonemes for words, returning dict of word to substitute word.  Flushes file buffer before return.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">words</span>, </span><span class=\"param\"><span class=\"n\">phonemes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.set", "kind": "function", "doc": "<p>Sets phonemes at position phPos to new value.\nCaller should flush the file buffer when done.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">phPos</span>, </span><span class=\"param\"><span class=\"n\">val</span>, </span><span class=\"param\"><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"fullname": "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close", "modulename": "prosodic.lib.lexconvert", "qualname": "MacBritish_System_Lexicon.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.stdout_width_unix": {"fullname": "prosodic.lib.lexconvert.stdout_width_unix", "modulename": "prosodic.lib.lexconvert", "qualname": "stdout_width_unix", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.lexFormats": {"fullname": "prosodic.lib.lexconvert.lexFormats", "modulename": "prosodic.lib.lexconvert", "qualname": "lexFormats", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;festival&#x27;: {&#x27;0&#x27;: 47, b&#x27;0&#x27;: 47, 47: &#x27;0&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;aa&#x27;: 1, b&#x27;aa&#x27;: 1, 1: &#x27;aa&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, 2: &#x27;a&#x27;, &#x27;uh&#x27;: 3, b&#x27;uh&#x27;: 3, 3: &#x27;uh&#x27;, &#x27;o&#x27;: 4, b&#x27;o&#x27;: 4, 4: &#x27;o&#x27;, &#x27;au&#x27;: 5, b&#x27;au&#x27;: 5, 5: &#x27;au&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;@@&#x27;: 7, b&#x27;@@&#x27;: 7, 7: &#x27;@@&#x27;, &#x27;ai&#x27;: 8, b&#x27;ai&#x27;: 8, 8: &#x27;ai&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13: &#x27;e&#x27;, 7.1: &#x27;@@&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14: &#x27;e@&#x27;, &#x27;ei&#x27;: 15, b&#x27;ei&#x27;: 15, 15: &#x27;ei&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;i&#x27;: 19, b&#x27;i&#x27;: 19, 19: &#x27;i&#x27;, &#x27;i@&#x27;: 20, b&#x27;i@&#x27;: 20, 20: &#x27;i@&#x27;, &#x27;ii&#x27;: 21, b&#x27;ii&#x27;: 21, 21: &#x27;ii&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;ou&#x27;: 28, b&#x27;ou&#x27;: 28, 28: &#x27;ou&#x27;, &#x27;oi&#x27;: 30, b&#x27;oi&#x27;: 30, 30: &#x27;oi&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;u@&#x27;: 37, b&#x27;u@&#x27;: 37, 37: &#x27;u@&#x27;, &#x27;u&#x27;: 37.2, b&#x27;u&#x27;: 37.2, 37.2: &#x27;u&#x27;, &#x27;uu&#x27;: 39, b&#x27;uu&#x27;: 39, 39: &#x27;uu&#x27;, &#x27;oo&#x27;: 40, b&#x27;oo&#x27;: 40, 40: &#x27;oo&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;Festival&#x27;s British voice&quot;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;/Users/ryan/.festivalrc&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;(lex.add.entry \\&#x27;( &quot;%s&quot; n %s))\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;;; -*- mode: lisp -*-\\n(eval (list voice_default))\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_func&#x27;): &lt;function festival_group_stress&gt;}, &#x27;example&#x27;: {&#x27;0&#x27;: 47, b&#x27;0&#x27;: 47, 47: &#x27;0&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;aa&#x27;: 1, b&#x27;aa&#x27;: 1, 1: &#x27;aa&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, 2: &#x27;a&#x27;, &#x27;uh&#x27;: 3, b&#x27;uh&#x27;: 3, 3: &#x27;uh&#x27;, &#x27;o&#x27;: 4, b&#x27;o&#x27;: 4, 4: &#x27;o&#x27;, &#x27;au&#x27;: 5, b&#x27;au&#x27;: 5, 5: &#x27;au&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;@@&#x27;: 7, b&#x27;@@&#x27;: 7, 7: &#x27;@@&#x27;, &#x27;ai&#x27;: 8, b&#x27;ai&#x27;: 8, 8: &#x27;ai&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13: &#x27;e&#x27;, 7.1: &#x27;@@&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14: &#x27;e@&#x27;, &#x27;ei&#x27;: 15, b&#x27;ei&#x27;: 15, 15: &#x27;ei&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;i&#x27;: 19, b&#x27;i&#x27;: 19, 19: &#x27;i&#x27;, &#x27;i@&#x27;: 20, b&#x27;i@&#x27;: 20, 20: &#x27;i@&#x27;, &#x27;ii&#x27;: 21, b&#x27;ii&#x27;: 21, 21: &#x27;ii&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;ou&#x27;: 28, b&#x27;ou&#x27;: 28, 28: &#x27;ou&#x27;, &#x27;oi&#x27;: 30, b&#x27;oi&#x27;: 30, 30: &#x27;oi&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;u@&#x27;: 37, b&#x27;u@&#x27;: 37, 37: &#x27;u@&#x27;, &#x27;u&#x27;: 37.2, b&#x27;u&#x27;: 37.2, 37.2: &#x27;u&#x27;, &#x27;uu&#x27;: 39, b&#x27;uu&#x27;: 39, 39: &#x27;uu&#x27;, &#x27;oo&#x27;: 40, b&#x27;oo&#x27;: 40, 40: &#x27;oo&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;A small built-in example lexicon for testing when you don&#x27;t have your full custom lexicon to hand.  Use --convert to write it in one of the other formats and see if a synth can import it.&quot;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): None, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): None, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;;; -*- mode: lisp -*-\\n(eval (list voice_default))\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_func&#x27;): None}, &#x27;festival-cmu&#x27;: {&#x27;0&#x27;: 47, b&#x27;0&#x27;: 47, 47: &#x27;0&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;aa&#x27;: 1, b&#x27;aa&#x27;: 1, 1: &#x27;aa&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, 2: &#x27;ae&#x27;, &#x27;uh&#x27;: 37, b&#x27;uh&#x27;: 37, 3: &#x27;ah&#x27;, &#x27;o&#x27;: 4, b&#x27;o&#x27;: 4, 4: &#x27;aa&#x27;, &#x27;au&#x27;: 5, b&#x27;au&#x27;: 5, 5: &#x27;aw&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;ax&#x27;, &#x27;@@&#x27;: 7, b&#x27;@@&#x27;: 7, 7: &#x27;er&#x27;, &#x27;ai&#x27;: 8, b&#x27;ai&#x27;: 8, 8: &#x27;ay&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13: &#x27;eh&#x27;, 7.1: &#x27;er&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14: &#x27;er&#x27;, &#x27;ei&#x27;: 15, b&#x27;ei&#x27;: 15, 15: &#x27;ey&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;hh&#x27;, &#x27;i&#x27;: 19, b&#x27;i&#x27;: 19, 19: &#x27;ih&#x27;, &#x27;i@&#x27;: 20, b&#x27;i@&#x27;: 20, 20: &#x27;ey ah&#x27;, &#x27;ii&#x27;: 21, b&#x27;ii&#x27;: 21, 21: &#x27;iy&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;ou&#x27;: 28, b&#x27;ou&#x27;: 28, 28: &#x27;ow&#x27;, &#x27;oi&#x27;: 30, b&#x27;oi&#x27;: 30, 30: &#x27;oy&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;u@&#x27;: 37, b&#x27;u@&#x27;: 37, 37: &#x27;uh&#x27;, &#x27;u&#x27;: 37.2, b&#x27;u&#x27;: 37.2, 37.2: &#x27;u&#x27;, &#x27;uu&#x27;: 39, b&#x27;uu&#x27;: 39, 39: &#x27;uw&#x27;, &#x27;oo&#x27;: 40, b&#x27;oo&#x27;: 40, 40: &#x27;ao&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;American CMU version of Festival&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;/Users/ryan/.festivalrc&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;(lex.add.entry \\&#x27;( &quot;%s&quot; n %s))\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;;; -*- mode: lisp -*-\\n(eval (list voice_default))\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_func&#x27;): &lt;function festival_group_stress&gt;, &#x27;ae&#x27;: 2, b&#x27;ae&#x27;: 2, &#x27;ah&#x27;: 3, b&#x27;ah&#x27;: 3, &#x27;ax&#x27;: 6, b&#x27;ax&#x27;: 6, &#x27;aw&#x27;: 5, b&#x27;aw&#x27;: 5, &#x27;er&#x27;: 7, b&#x27;er&#x27;: 7, &#x27;ay&#x27;: 8, b&#x27;ay&#x27;: 8, &#x27;eh&#x27;: 13, b&#x27;eh&#x27;: 13, &#x27;ey&#x27;: 15, b&#x27;ey&#x27;: 15, &#x27;hh&#x27;: 18, b&#x27;hh&#x27;: 18, &#x27;ih&#x27;: 19, b&#x27;ih&#x27;: 19, &#x27;ey ah&#x27;: 20, b&#x27;ey ah&#x27;: 20, &#x27;iy&#x27;: 21, b&#x27;iy&#x27;: 21, &#x27;ow&#x27;: 28, b&#x27;ow&#x27;: 28, &#x27;oy&#x27;: 30, b&#x27;oy&#x27;: 30, &#x27;uw&#x27;: 39, b&#x27;uw&#x27;: 39, &#x27;ao&#x27;: 40, b&#x27;ao&#x27;: 40}, &#x27;espeak&#x27;: {&#x27;%&#x27;: 47, b&#x27;%&#x27;: 47, 47: &#x27;%&#x27;, &quot;&#x27;&quot;: 47.1, b&quot;&#x27;&quot;: 47.1, 47.1: &quot;&#x27;&quot;, &#x27;,&#x27;: 47.2, b&#x27;,&#x27;: 47.2, 47.2: &#x27;,&#x27;, &#x27;A:&#x27;: 1, b&#x27;A:&#x27;: 1, 1: &#x27;A:&#x27;, &#x27;A@&#x27;: 1, b&#x27;A@&#x27;: 1, &#x27;A&#x27;: 1.1, b&#x27;A&#x27;: 1.1, 1.1: &#x27;A&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, 2: &#x27;a&#x27;, &#x27;aa&#x27;: 2, b&#x27;aa&#x27;: 2, &#x27;a2&#x27;: 2, b&#x27;a2&#x27;: 2, &#x27;&amp;&#x27;: 2, b&#x27;&amp;&#x27;: 2, &#x27;V&#x27;: 3, b&#x27;V&#x27;: 3, 3: &#x27;V&#x27;, &#x27;0&#x27;: 4, b&#x27;0&#x27;: 4, 4: &#x27;0&#x27;, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;aU&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;a#&#x27;: 6, b&#x27;a#&#x27;: 6, &#x27;3:&#x27;: 7, b&#x27;3:&#x27;: 7, 7: &#x27;3:&#x27;, &#x27;3&#x27;: 6.1, b&#x27;3&#x27;: 6.1, 6.1: &#x27;3&#x27;, &#x27;@2&#x27;: 6, b&#x27;@2&#x27;: 6, &#x27;@-&#x27;: 6, b&#x27;@-&#x27;: 6, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;aI&#x27;, &#x27;aI2&#x27;: 8, b&#x27;aI2&#x27;: 8, &#x27;aI;&#x27;: 8, b&#x27;aI;&#x27;: 8, &#x27;aI2;&#x27;: 8, b&#x27;aI2;&#x27;: 8, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;tS&#x27;: 10, b&#x27;tS&#x27;: 10, 10: &#x27;tS&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, 7.1: &#x27;3:&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14: &#x27;e@&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;eI&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;I;&#x27;: 19, b&#x27;I;&#x27;: 19, &#x27;i&#x27;: 19, b&#x27;i&#x27;: 19, &#x27;I2&#x27;: 19.2, b&#x27;I2&#x27;: 19.2, &#x27;I2;&#x27;: 19.2, b&#x27;I2;&#x27;: 19.2, &#x27;i@&#x27;: 20, b&#x27;i@&#x27;: 20, 20: &#x27;i@&#x27;, &#x27;i@3&#x27;: 20.2, b&#x27;i@3&#x27;: 20.2, 20.2: &#x27;i@3&#x27;, &#x27;i:&#x27;: 21, b&#x27;i:&#x27;: 21, 21: &#x27;i:&#x27;, &#x27;i:;&#x27;: 21, b&#x27;i:;&#x27;: 21, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;oU&#x27;: 28, b&#x27;oU&#x27;: 28, 28: &#x27;oU&#x27;, &#x27;oUl&#x27;: 29, b&#x27;oUl&#x27;: 29, 29: &#x27;oUl&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;OI&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;r-&#x27;: 32, b&#x27;r-&#x27;: 32, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;U@&#x27;: 37, b&#x27;U@&#x27;: 37, 37: &#x27;U@&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;@5&#x27;: 37.2, b&#x27;@5&#x27;: 37.2, &#x27;Ul&#x27;: 38, b&#x27;Ul&#x27;: 38, 38: &#x27;Ul&#x27;, &#x27;u:&#x27;: 39, b&#x27;u:&#x27;: 39, 39: &#x27;u:&#x27;, &#x27;O:&#x27;: 40, b&#x27;O:&#x27;: 40, 40: &#x27;O:&#x27;, &#x27;O@&#x27;: 40.3, b&#x27;O@&#x27;: 40.3, 40.3: &#x27;O@&#x27;, &#x27;o@&#x27;: 40.3, b&#x27;o@&#x27;: 40.3, &#x27;O&#x27;: 40.3, b&#x27;O&#x27;: 40.3, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;eSpeak&#x27;s default British voice&quot;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;en_extra&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s %s\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;[[%s]]&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): &#x27;_: !&#x27;, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&quot;k&#x27;a2n&quot;, &quot;k&#x27;@n&quot;), (&#x27;ka2n&#x27;, &#x27;k@n&#x27;), (&#x27;gg&#x27;, &#x27;g&#x27;), (&#x27;@U&#x27;, &#x27;oU&#x27;), (&#x27;([iU]|([AO]:))@r$&#x27;, &#x27;\\x01@&#x27;), (&#x27;([^e])@r&#x27;, &#x27;\\\\1_remove_3&#x27;), (&#x27;_remove_&#x27;, &#x27;&#x27;), (&#x27;rr$&#x27;, &#x27;r&#x27;), (&#x27;3:r$&#x27;, &#x27;3:&#x27;), (&#x27;%%+&#x27;, &#x27;%&#x27;), (&#x27;^%&#x27;, &#x27;&#x27;), (&#x27;%$&#x27;, &#x27;&#x27;)], (&#x27;settings&#x27;, &#x27;cvtOut_regexps&#x27;): [(&#x27;e@r$&#x27;, &#x27;e@&#x27;), (&#x27;e@r([bdDfghklmnNprsStTvwjzZ])&#x27;, &#x27;e@\\\\1&#x27;)]}, &#x27;sapi&#x27;: {&#x27;-&#x27;: 47, b&#x27;-&#x27;: 47, 47: &#x27;-&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;aa&#x27;: 1, b&#x27;aa&#x27;: 1, 1: &#x27;aa&#x27;, &#x27;ae&#x27;: 2, b&#x27;ae&#x27;: 2, 2: &#x27;ae&#x27;, &#x27;ah&#x27;: 3, b&#x27;ah&#x27;: 3, 3: &#x27;ah&#x27;, &#x27;ao&#x27;: 4, b&#x27;ao&#x27;: 4, 4: &#x27;ao&#x27;, &#x27;aw&#x27;: 5, b&#x27;aw&#x27;: 5, 5: &#x27;aw&#x27;, &#x27;ax&#x27;: 6, b&#x27;ax&#x27;: 6, 6: &#x27;ax&#x27;, &#x27;er&#x27;: 7, b&#x27;er&#x27;: 7, 7: &#x27;er&#x27;, &#x27;ay&#x27;: 8, b&#x27;ay&#x27;: 8, 8: &#x27;ay&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;eh&#x27;: 13, b&#x27;eh&#x27;: 13, 13: &#x27;eh&#x27;, &#x27;ey&#x27;: 13.1, b&#x27;ey&#x27;: 13.1, 13.1: &#x27;ey&#x27;, 15: &#x27;ey&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;ih&#x27;: 19, b&#x27;ih&#x27;: 19, 19: &#x27;ih&#x27;, &#x27;iy&#x27;: 21, b&#x27;iy&#x27;: 21, 21: &#x27;iy&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;ow&#x27;: 28, b&#x27;ow&#x27;: 28, 28: &#x27;ow&#x27;, &#x27;oy&#x27;: 30, b&#x27;oy&#x27;: 30, 30: &#x27;oy&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;uh&#x27;: 37, b&#x27;uh&#x27;: 37, 37: &#x27;uh&#x27;, &#x27;uw&#x27;: 39, b&#x27;uw&#x27;: 39, 39: &#x27;uw&#x27;, &#x27;AO&#x27;: 40, b&#x27;AO&#x27;: 40, 40: &#x27;AO&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, 14: &#x27;eh r&#x27;, 20: &#x27;iy ah&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Microsoft Speech API (American English)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;run-ptts.bat&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;rem  You have to run this file\\nrem  with ptts.exe in the same directory\\nrem  to add these words to the SAPI lexicon\\n\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;ptts -la %s &quot;%s&quot;\\n&#x27;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;&lt;pron sym=&quot;%s&quot;/&gt;&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;cepstral&#x27;: {&#x27;0&#x27;: 47, b&#x27;0&#x27;: 47, 47: &#x27;0&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;a&#x27;: 1, b&#x27;a&#x27;: 1, 1: &#x27;a&#x27;, &#x27;ae&#x27;: 2, b&#x27;ae&#x27;: 2, 2: &#x27;ae&#x27;, &#x27;ah&#x27;: 3, b&#x27;ah&#x27;: 3, 3: &#x27;ah&#x27;, &#x27;oa&#x27;: 4, b&#x27;oa&#x27;: 4, 4: &#x27;oa&#x27;, &#x27;aw&#x27;: 5, b&#x27;aw&#x27;: 5, 5: &#x27;aw&#x27;, &#x27;er&#x27;: 7, b&#x27;er&#x27;: 7, 7: &#x27;er&#x27;, &#x27;ay&#x27;: 8, b&#x27;ay&#x27;: 8, 8: &#x27;ay&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;eh&#x27;: 13, b&#x27;eh&#x27;: 13, 13: &#x27;eh&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14: &#x27;e@&#x27;, &#x27;ey&#x27;: 15, b&#x27;ey&#x27;: 15, 15: &#x27;ey&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;ih&#x27;: 19, b&#x27;ih&#x27;: 19, 19: &#x27;ih&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;ow&#x27;: 28, b&#x27;ow&#x27;: 28, 28: &#x27;ow&#x27;, &#x27;oy&#x27;: 30, b&#x27;oy&#x27;: 30, 30: &#x27;oy&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;uh&#x27;: 37, b&#x27;uh&#x27;: 37, 37: &#x27;uh&#x27;, &#x27;uw&#x27;: 39, b&#x27;uw&#x27;: 39, 39: &#x27;uw&#x27;, &#x27;ao&#x27;: 40, b&#x27;ao&#x27;: 40, 40: &#x27;ao&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, 6: &#x27;ah&#x27;, 20: &#x27;i ah&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;Cepstral&#x27;s British English SSML phoneset&quot;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;lexicon.txt&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s 0 %s\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;lex_word_case&#x27;): &#x27;lower&#x27;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &quot;&lt;phoneme ph=&#x27;%s&#x27;&gt;p&lt;/phoneme&gt;&quot;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27; 1&#x27;, &#x27;1&#x27;), (&#x27; 0&#x27;, &#x27;0&#x27;)]}, &#x27;mac&#x27;: {&#x27;=&#x27;: 47, b&#x27;=&#x27;: 47, 47: &#x27;=&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;AA&#x27;: 1, b&#x27;AA&#x27;: 1, 1: &#x27;AA&#x27;, &#x27;aa&#x27;: 1.4, b&#x27;aa&#x27;: 1.4, 1.4: &#x27;aa&#x27;, &#x27;AE&#x27;: 2, b&#x27;AE&#x27;: 2, 2: &#x27;AE&#x27;, &#x27;UX&#x27;: 3, b&#x27;UX&#x27;: 3, 3: &#x27;UX&#x27;, 4: &#x27;AA&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, &#x27;AX&#x27;: 6, b&#x27;AX&#x27;: 6, 6: &#x27;AX&#x27;, 7: &#x27;AX&#x27;, &#x27;AY&#x27;: 8, b&#x27;AY&#x27;: 8, 8: &#x27;AY&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;C&#x27;: 10, b&#x27;C&#x27;: 10, 10: &#x27;C&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;EH&#x27;: 13, b&#x27;EH&#x27;: 13, 13: &#x27;EH&#x27;, &#x27;EY&#x27;: 15, b&#x27;EY&#x27;: 15, 15: &#x27;EY&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;IH&#x27;: 19, b&#x27;IH&#x27;: 19, 19: &#x27;IH&#x27;, &#x27;IX&#x27;: 19.2, b&#x27;IX&#x27;: 19.2, 19.2: &#x27;IX&#x27;, &#x27;IY&#x27;: 21, b&#x27;IY&#x27;: 21, 21: &#x27;IY&#x27;, &#x27;J&#x27;: 22, b&#x27;J&#x27;: 22, 22: &#x27;J&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;OW&#x27;: 28, b&#x27;OW&#x27;: 28, 28: &#x27;OW&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;UH&#x27;: 37, b&#x27;UH&#x27;: 37, 37: &#x27;UH&#x27;, &#x27;UW&#x27;: 39, b&#x27;UW&#x27;: 39, 39: &#x27;UW&#x27;, &#x27;AO&#x27;: 40, b&#x27;AO&#x27;: 40, 40: &#x27;AO&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, 14: &#x27;EHr&#x27;, 20: &#x27;IYUX&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;approximation in American English using the [[inpt PHON]] notation of Apple&#x27;s US voices&quot;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;substitute.sh&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;substitution script&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &quot;#!/bin/bash\\n\\n# I don&#x27;t yet know how to add to the Apple US lexicon,\\n# so here is a &#x27;sed&#x27; command you can run on your text\\n# to put the pronunciation inline:\\n\\nsed -E -e :S \\\\\\n&quot;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &quot; -e &#x27;s/(^|[^A-Za-z])%s($|[^A-Za-z[12=])/\\\\1[[inpt PHON]]%s[[inpt TEXT]]\\\\2/g&#x27; \\\\\\n&quot;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;[[inpt PHON]]%s[[inpt TEXT]]&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;mac-uk&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;.&#x27;, &quot;&#x27;&quot;: 47.1, b&quot;&#x27;&quot;: 47.1, 47.1: &quot;&#x27;&quot;, 47.2: &#x27;&#x27;, &#x27;A&#x27;: 1, b&#x27;A&#x27;: 1, 1: &#x27;A&#x27;, &#x27;@&#x27;: 2, b&#x27;@&#x27;: 2, 2: &#x27;@&#x27;, &#x27;$&#x27;: 3, b&#x27;$&#x27;: 3, 3: &#x27;$&#x27;, 6: &#x27;$&#x27;, &#x27;A+&#x27;: 4, b&#x27;A+&#x27;: 4, 4: &#x27;A+&#x27;, &#x27;a&amp;U&#x27;: 5, b&#x27;a&amp;U&#x27;: 5, 5: &#x27;a&amp;U&#x27;, &#x27;E0&#x27;: 7, b&#x27;E0&#x27;: 7, 7: &#x27;E0&#x27;, &#x27;a&amp;I&#x27;: 8, b&#x27;a&amp;I&#x27;: 8, 8: &#x27;a&amp;I&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;t&amp;S&#x27;: 10, b&#x27;t&amp;S&#x27;: 10, 10: &#x27;t&amp;S&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;0&#x27;: 7.1, b&#x27;0&#x27;: 7.1, 7.1: &#x27;0&#x27;, &#x27;E&amp;$&#x27;: 14, b&#x27;E&amp;$&#x27;: 14, 14: &#x27;E&amp;$&#x27;, &#x27;e&amp;I&#x27;: 15, b&#x27;e&amp;I&#x27;: 15, 15: &#x27;e&amp;I&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;I&amp;$&#x27;: 20, b&#x27;I&amp;$&#x27;: 20, 20: &#x27;I&amp;$&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;d&amp;Z&#x27;: 22, b&#x27;d&amp;Z&#x27;: 22, 22: &#x27;d&amp;Z&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;nK&#x27;: 27, b&#x27;nK&#x27;: 27, 27: &#x27;nK&#x27;, &#x27;o&amp;U&#x27;: 28, b&#x27;o&amp;U&#x27;: 28, 28: &#x27;o&amp;U&#x27;, &#x27;O&amp;I&#x27;: 30, b&#x27;O&amp;I&#x27;: 30, 30: &#x27;O&amp;I&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;R+&#x27;: 32, b&#x27;R+&#x27;: 32, 32: &#x27;R+&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;O&#x27;: 37, b&#x27;O&#x27;: 37, 37: &#x27;O&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;u&#x27;: 39, b&#x27;u&#x27;: 39, 39: &#x27;u&#x27;, 40: &#x27;O&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Scansoft/Nuance British voices in Mac OS 10.7+ (system lexicon editing required, see --mac-uk option)&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;inline_oneoff_header&#x27;): &quot;(mac-uk phonemes output is for information only; you&#x27;ll need the --mac-uk or --trymac-uk options to use it)\\n&quot;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;o\\\\&amp;U\\\\.Ol&#x27;, &#x27;o\\\\&amp;Ul&#x27;)]}, &#x27;x-sampa&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;.&#x27;, &#x27;&quot;&#x27;: 47.1, b&#x27;&quot;&#x27;: 47.1, 47.1: &#x27;&quot;&#x27;, &#x27;%&#x27;: 47.2, b&#x27;%&#x27;: 47.2, 47.2: &#x27;%&#x27;, &#x27;A&#x27;: 1, b&#x27;A&#x27;: 1, 1: &#x27;A&#x27;, &#x27;:&#x27;: 53, b&#x27;:&#x27;: 53, 53: &#x27;:&#x27;, &#x27;A:&#x27;: 1.2, b&#x27;A:&#x27;: 1.2, 1.2: &#x27;A:&#x27;, &#x27;Ar\\\\&#x27;: 1.3, b&#x27;Ar\\\\&#x27;: 1.3, 1.3: &#x27;Ar\\\\&#x27;, &#x27;a:&#x27;: 1.4, b&#x27;a:&#x27;: 1.4, 1.4: &#x27;a:&#x27;, &#x27;{&#x27;: 2, b&#x27;{&#x27;: 2, 2: &#x27;{&#x27;, &#x27;V&#x27;: 3, b&#x27;V&#x27;: 3, 3: &#x27;V&#x27;, &#x27;Q&#x27;: 4, b&#x27;Q&#x27;: 4, 4: &#x27;Q&#x27;, 4.1: &#x27;A&#x27;, &#x27;O&#x27;: 4.2, b&#x27;O&#x27;: 4.2, 4.2: &#x27;O&#x27;, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;aU&#x27;, &#x27;{O&#x27;: 5.1, b&#x27;{O&#x27;: 5.1, 5.1: &#x27;{O&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;3:&#x27;: 7, b&#x27;3:&#x27;: 7, 7: &#x27;3:&#x27;, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;aI&#x27;, &#x27;Ae&#x27;: 8.1, b&#x27;Ae&#x27;: 8.1, 8.1: &#x27;Ae&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;tS&#x27;: 10, b&#x27;tS&#x27;: 10, 10: &#x27;tS&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;e&#x27;: 13.1, b&#x27;e&#x27;: 13.1, 13.1: &#x27;e&#x27;, 7.1: &#x27;3:&#x27;, &#x27;E@&#x27;: 14, b&#x27;E@&#x27;: 14, 14: &#x27;E@&#x27;, &#x27;Er\\\\&#x27;: 14.1, b&#x27;Er\\\\&#x27;: 14.1, 14.1: &#x27;Er\\\\&#x27;, &#x27;e:&#x27;: 14.2, b&#x27;e:&#x27;: 14.2, 14.2: &#x27;e:&#x27;, &#x27;E:&#x27;: 14.3, b&#x27;E:&#x27;: 14.3, 14.3: &#x27;E:&#x27;, &#x27;e@&#x27;: 14.4, b&#x27;e@&#x27;: 14.4, 14.4: &#x27;e@&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;eI&#x27;, &#x27;{I&#x27;: 15.1, b&#x27;{I&#x27;: 15.1, 15.1: &#x27;{I&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;1&#x27;: 19.1, b&#x27;1&#x27;: 19.1, 19.1: &#x27;1&#x27;, &#x27;I@&#x27;: 20, b&#x27;I@&#x27;: 20, 20: &#x27;I@&#x27;, &#x27;Ir\\\\&#x27;: 20.1, b&#x27;Ir\\\\&#x27;: 20.1, 20.1: &#x27;Ir\\\\&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;i:&#x27;: 21.1, b&#x27;i:&#x27;: 21.1, 21.1: &#x27;i:&#x27;, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;@U&#x27;: 28, b&#x27;@U&#x27;: 28, 28: &#x27;@U&#x27;, &#x27;oU&#x27;: 28.2, b&#x27;oU&#x27;: 28.2, 28.2: &#x27;oU&#x27;, &#x27;@}&#x27;: 3.1, b&#x27;@}&#x27;: 3.1, 3.1: &#x27;@}&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;OI&#x27;, &#x27;oI&#x27;: 30.1, b&#x27;oI&#x27;: 30.1, 30.1: &#x27;oI&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r\\\\&#x27;: 32, b&#x27;r\\\\&#x27;: 32, 32: &#x27;r\\\\&#x27;, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;U@&#x27;: 37, b&#x27;U@&#x27;: 37, 37: &#x27;U@&#x27;, &#x27;Ur\\\\&#x27;: 37.1, b&#x27;Ur\\\\&#x27;: 37.1, 37.1: &#x27;Ur\\\\&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;}:&#x27;: 39, b&#x27;}:&#x27;: 39, 39: &#x27;}:&#x27;, &#x27;u:&#x27;: 39.1, b&#x27;u:&#x27;: 39.1, 39.1: &#x27;u:&#x27;, 39.2: &#x27;u:&#x27;, &#x27;O:&#x27;: 40, b&#x27;O:&#x27;: 40, 40: &#x27;O:&#x27;, 40.1: &#x27;O&#x27;, &#x27;o:&#x27;: 40.2, b&#x27;o:&#x27;: 40.2, 40.2: &#x27;o:&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;W&#x27;: 42.1, b&#x27;W&#x27;: 42.1, 42.1: &#x27;W&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;General X-SAMPA notation, contributed by Jan Weiss&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;acapela.txt&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s\\t#%s\\tUNKNOWN\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;vocaloid&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;-&#x27;, &#x27;&quot;&#x27;: 47.1, b&#x27;&quot;&#x27;: 47.1, 47.1: &#x27;&#x27;, &#x27;%&#x27;: 47.2, b&#x27;%&#x27;: 47.2, 47.2: &#x27;&#x27;, &#x27;A&#x27;: 1, b&#x27;A&#x27;: 1, 1: &#x27;Q&#x27;, &#x27;:&#x27;: 53, b&#x27;:&#x27;: 53, 53: &#x27;:&#x27;, &#x27;A:&#x27;: 1.2, b&#x27;A:&#x27;: 1.2, 1.2: &#x27;Q&#x27;, &#x27;Ar\\\\&#x27;: 1.3, b&#x27;Ar\\\\&#x27;: 1.3, 1.3: &#x27;Q&#x27;, &#x27;a:&#x27;: 1.4, b&#x27;a:&#x27;: 1.4, 1.4: &#x27;Q&#x27;, &#x27;{&#x27;: 2, b&#x27;{&#x27;: 2, 2: &#x27;{&#x27;, &#x27;V&#x27;: 3.1, b&#x27;V&#x27;: 3.1, 3: &#x27;V&#x27;, &#x27;Q&#x27;: 1, b&#x27;Q&#x27;: 1, 4: &#x27;O@&#x27;, 4.1: &#x27;O@&#x27;, &#x27;O&#x27;: 4.2, b&#x27;O&#x27;: 4.2, 4.2: &#x27;O@&#x27;, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;@U&#x27;, &#x27;{O&#x27;: 5.1, b&#x27;{O&#x27;: 5.1, 5.1: &#x27;{O&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;3:&#x27;: 7, b&#x27;3:&#x27;: 7, 7: &#x27;@r&#x27;, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;aI&#x27;, &#x27;Ae&#x27;: 8.1, b&#x27;Ae&#x27;: 8.1, 8.1: &#x27;aI&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;tS&#x27;: 10, b&#x27;tS&#x27;: 10, 10: &#x27;tS&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;e&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13.1: &#x27;e&#x27;, 7.1: &#x27;I@&#x27;, &#x27;E@&#x27;: 14, b&#x27;E@&#x27;: 14, 14: &#x27;e@&#x27;, &#x27;Er\\\\&#x27;: 14.1, b&#x27;Er\\\\&#x27;: 14.1, 14.1: &#x27;e@&#x27;, &#x27;e:&#x27;: 14.2, b&#x27;e:&#x27;: 14.2, 14.2: &#x27;e@&#x27;, &#x27;E:&#x27;: 14.3, b&#x27;E:&#x27;: 14.3, 14.3: &#x27;e@&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14.4: &#x27;e@&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;eI&#x27;, &#x27;{I&#x27;: 15.1, b&#x27;{I&#x27;: 15.1, 15.1: &#x27;eI&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;1&#x27;: 19.1, b&#x27;1&#x27;: 19.1, 19.1: &#x27;I&#x27;, &#x27;I@&#x27;: 7.1, b&#x27;I@&#x27;: 7.1, 20: &#x27;I@&#x27;, &#x27;Ir\\\\&#x27;: 20.1, b&#x27;Ir\\\\&#x27;: 20.1, 20.1: &#x27;I@&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i:&#x27;, &#x27;i:&#x27;: 21, b&#x27;i:&#x27;: 21, 21.1: &#x27;i:&#x27;, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;@U&#x27;: 5, b&#x27;@U&#x27;: 5, 28: &#x27;@U&#x27;, &#x27;oU&#x27;: 28.2, b&#x27;oU&#x27;: 28.2, 28.2: &#x27;@U&#x27;, &#x27;@}&#x27;: 3.1, b&#x27;@}&#x27;: 3.1, 3.1: &#x27;V&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;OI&#x27;, &#x27;oI&#x27;: 30.1, b&#x27;oI&#x27;: 30.1, 30.1: &#x27;OI&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r\\\\&#x27;: 32, b&#x27;r\\\\&#x27;: 32, 32: &#x27;r&#x27;, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;th&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;U@&#x27;: 37, b&#x27;U@&#x27;: 37, 37: &#x27;U@&#x27;, &#x27;Ur\\\\&#x27;: 37.1, b&#x27;Ur\\\\&#x27;: 37.1, 37.1: &#x27;@U&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;}:&#x27;: 39, b&#x27;}:&#x27;: 39, 39: &#x27;u:&#x27;, &#x27;u:&#x27;: 39, b&#x27;u:&#x27;: 39, 39.1: &#x27;u:&#x27;, 39.2: &#x27;u:&#x27;, &#x27;O:&#x27;: 40, b&#x27;O:&#x27;: 40, 40: &#x27;O:&#x27;, 40.1: &#x27;O:&#x27;, &#x27;o:&#x27;: 40.2, b&#x27;o:&#x27;: 40.2, 40.2: &#x27;O:&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;W&#x27;: 42.1, b&#x27;W&#x27;: 42.1, 42.1: &#x27;w&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;X-SAMPA phonemes for Yamaha&#x27;s Vocaloid singing synthesizer.  Contributed by Lorenzo Gatti, who tested in Vocaloid 4 using two American English voices.&quot;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;vocaloid.txt&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s\\t#%s\\tUNKNOWN\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, &#x27;-&#x27;: 47, b&#x27;-&#x27;: 47, &#x27;O@&#x27;: 4, b&#x27;O@&#x27;: 4, &#x27;@r&#x27;: 7, b&#x27;@r&#x27;: 7, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, &#x27;th&#x27;: 35, b&#x27;th&#x27;: 35}, &#x27;android-pico&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;.&#x27;, &#x27;&quot;&#x27;: 47.1, b&#x27;&quot;&#x27;: 47.1, 47.1: &#x27;&quot;&#x27;, &#x27;%&#x27;: 47.2, b&#x27;%&#x27;: 47.2, 47.2: &#x27;%&#x27;, &#x27;A&#x27;: 1, b&#x27;A&#x27;: 1, 1: &#x27;A:&#x27;, &#x27;:&#x27;: 53, b&#x27;:&#x27;: 53, 53: &#x27;:&#x27;, &#x27;A:&#x27;: 1, b&#x27;A:&#x27;: 1, 1.2: &#x27;A:&#x27;, &#x27;Ar\\\\&#x27;: 1.3, b&#x27;Ar\\\\&#x27;: 1.3, 1.3: &#x27;Ar\\\\&#x27;, &#x27;a:&#x27;: 1.4, b&#x27;a:&#x27;: 1.4, 1.4: &#x27;A:&#x27;, &#x27;{&#x27;: 2, b&#x27;{&#x27;: 2, 2: &#x27;{&#x27;, &#x27;V&#x27;: 3, b&#x27;V&#x27;: 3, 3: &#x27;V&#x27;, &#x27;Q&#x27;: 4, b&#x27;Q&#x27;: 4, 4: &#x27;Q&#x27;, 4.1: &#x27;A&#x27;, &#x27;O&#x27;: 4.2, b&#x27;O&#x27;: 4.2, 4.2: &#x27;O&#x27;, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;a_U&#x27;, &#x27;{O&#x27;: 5.1, b&#x27;{O&#x27;: 5.1, 5.1: &#x27;{O&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;3:&#x27;: 7, b&#x27;3:&#x27;: 7, 7: &#x27;3:&#x27;, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;a_I&#x27;, &#x27;Ae&#x27;: 8.1, b&#x27;Ae&#x27;: 8.1, 8.1: &#x27;Ae&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;tS&#x27;: 10, b&#x27;tS&#x27;: 10, 10: &#x27;tS&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;e&#x27;: 13.1, b&#x27;e&#x27;: 13.1, 13.1: &#x27;e&#x27;, 7.1: &#x27;3:&#x27;, &#x27;E@&#x27;: 14, b&#x27;E@&#x27;: 14, 14: &#x27;E@&#x27;, &#x27;Er\\\\&#x27;: 14.1, b&#x27;Er\\\\&#x27;: 14.1, 14.1: &#x27;Er\\\\&#x27;, &#x27;e:&#x27;: 14.2, b&#x27;e:&#x27;: 14.2, 14.2: &#x27;e:&#x27;, &#x27;E:&#x27;: 14.3, b&#x27;E:&#x27;: 14.3, 14.3: &#x27;E:&#x27;, &#x27;e@&#x27;: 14.4, b&#x27;e@&#x27;: 14.4, 14.4: &#x27;e@&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;e_I&#x27;, &#x27;{I&#x27;: 15.1, b&#x27;{I&#x27;: 15.1, 15.1: &#x27;{I&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19.1, b&#x27;I&#x27;: 19.1, 19: &#x27;I&#x27;, &#x27;1&#x27;: 19.1, b&#x27;1&#x27;: 19.1, 19.1: &#x27;I&#x27;, &#x27;I@&#x27;: 20, b&#x27;I@&#x27;: 20, 20: &#x27;I@&#x27;, &#x27;Ir\\\\&#x27;: 20.1, b&#x27;Ir\\\\&#x27;: 20.1, 20.1: &#x27;Ir\\\\&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i:&#x27;, &#x27;i:&#x27;: 21, b&#x27;i:&#x27;: 21, 21.1: &#x27;i:&#x27;, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;@U&#x27;: 28, b&#x27;@U&#x27;: 28, 28: &#x27;@U:&#x27;, &#x27;oU&#x27;: 28.2, b&#x27;oU&#x27;: 28.2, 28.2: &#x27;o_U&#x27;, &#x27;@}&#x27;: 3.1, b&#x27;@}&#x27;: 3.1, 3.1: &#x27;@}&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;O_I&#x27;, &#x27;oI&#x27;: 30.1, b&#x27;oI&#x27;: 30.1, 30.1: &#x27;O_I&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r\\\\&#x27;: 32, b&#x27;r\\\\&#x27;: 32, 32: &#x27;r\\\\&#x27;, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;U@&#x27;: 37, b&#x27;U@&#x27;: 37, 37: &#x27;U@&#x27;, &#x27;Ur\\\\&#x27;: 37.1, b&#x27;Ur\\\\&#x27;: 37.1, 37.1: &#x27;Ur\\\\&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;}:&#x27;: 39, b&#x27;}:&#x27;: 39, 39: &#x27;u:&#x27;, &#x27;u:&#x27;: 39, b&#x27;u:&#x27;: 39, 39.1: &#x27;u:&#x27;, 39.2: &#x27;u:&#x27;, &#x27;O:&#x27;: 40, b&#x27;O:&#x27;: 40, 40: &#x27;O:&#x27;, 40.1: &#x27;O&#x27;, &#x27;o:&#x27;: 40.2, b&#x27;o:&#x27;: 40.2, 40.2: &#x27;o:&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;W&#x27;: 42.1, b&#x27;W&#x27;: 42.1, 42.1: &#x27;W&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;X-SAMPA phonemes for the default &quot;Pico&quot; voice in Android (1.6+, American), wrapped in Java code&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): None, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, &#x27;@U:&#x27;: 28, b&#x27;@U:&#x27;: 28, &#x27;a_I&#x27;: 8, b&#x27;a_I&#x27;: 8, &#x27;a_U&#x27;: 5, b&#x27;a_U&#x27;: 5, &#x27;e_I&#x27;: 15, b&#x27;e_I&#x27;: 15, &#x27;O_I&#x27;: 30, b&#x27;O_I&#x27;: 30, &#x27;o_U&#x27;: 28.2, b&#x27;o_U&#x27;: 28.2, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;\\\\\\\\&#x27;, &#x27;\\\\\\\\\\\\\\\\&#x27;), (&#x27;&quot;&#x27;, &#x27;&amp;quot;&#x27;), (&#x27;::&#x27;, &#x27;:&#x27;)], (&#x27;settings&#x27;, &#x27;inline_oneoff_header&#x27;): &#x27;class Speak { public static void speak(android.app.Activity a,String s) { class OnInit implements android.speech.tts.TextToSpeech.OnInitListener { public OnInit(String s) { this.s = s; } public void onInit(int i) { mTts.speak(this.s, android.speech.tts.TextToSpeech.QUEUE_ADD, null); } private String s; }; if(mTts==null) mTts=new android.speech.tts.TextToSpeech(a,new OnInit(s),&quot;com.svox.pico&quot;); else mTts.speak(s, android.speech.tts.TextToSpeech.QUEUE_ADD, null); } private static android.speech.tts.TextToSpeech mTts = null; };\\n&#x27;, (&#x27;settings&#x27;, &#x27;inline_header&#x27;): &#x27;Speak.speak(this,&quot;&lt;speak xml:lang=\\\\&quot;en-US\\\\&quot;&gt;&#x27;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;&lt;phoneme alphabet=\\\\&quot;xsampa\\\\&quot; ph=\\\\&quot;%s\\\\&quot;/&gt;&#x27;, (&#x27;settings&#x27;, &#x27;clause_separator&#x27;): &#x27;.\\\\n&#x27;, (&#x27;settings&#x27;, &#x27;inline_footer&#x27;): &#x27;&lt;/speak&gt;&quot;);&#x27;}, &#x27;acapela-uk&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;.&#x27;, &#x27;&quot;&#x27;: 47.1, b&#x27;&quot;&#x27;: 47.1, 47.1: &#x27;&quot;&#x27;, &#x27;%&#x27;: 47.2, b&#x27;%&#x27;: 47.2, 47.2: &#x27;%&#x27;, &#x27;A:&#x27;: 1, b&#x27;A:&#x27;: 1, 1: &#x27;A:&#x27;, &#x27;{&#x27;: 2, b&#x27;{&#x27;: 2, 2: &#x27;{&#x27;, &#x27;V&#x27;: 3, b&#x27;V&#x27;: 3, 3: &#x27;V&#x27;, &#x27;Q&#x27;: 4, b&#x27;Q&#x27;: 4, 4: &#x27;Q&#x27;, &#x27;A&#x27;: 4.1, b&#x27;A&#x27;: 4.1, 4.1: &#x27;A&#x27;, &#x27;O&#x27;: 4.2, b&#x27;O&#x27;: 4.2, 4.2: &#x27;O&#x27;, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;aU&#x27;, &#x27;{O&#x27;: 5.1, b&#x27;{O&#x27;: 5.1, 5.1: &#x27;{O&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;3:&#x27;: 7, b&#x27;3:&#x27;: 7, 7: &#x27;3:&#x27;, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;aI&#x27;, &#x27;A e&#x27;: 8.1, b&#x27;A e&#x27;: 8.1, 8.1: &#x27;A e&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;t S&#x27;: 10, b&#x27;t S&#x27;: 10, 10: &#x27;t S&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13: &#x27;e&#x27;, 7.1: &#x27;3:&#x27;, &#x27;e @&#x27;: 14, b&#x27;e @&#x27;: 14, 14: &#x27;e @&#x27;, &#x27;e r&#x27;: 14.1, b&#x27;e r&#x27;: 14.1, 14.1: &#x27;e r&#x27;, &#x27;e :&#x27;: 14.2, b&#x27;e :&#x27;: 14.2, 14.2: &#x27;e :&#x27;, 14.3: &#x27;e :&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;eI&#x27;, &#x27;{I&#x27;: 15.1, b&#x27;{I&#x27;: 15.1, 15.1: &#x27;{I&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;1&#x27;: 19.1, b&#x27;1&#x27;: 19.1, 19.1: &#x27;1&#x27;, &#x27;I@&#x27;: 20, b&#x27;I@&#x27;: 20, 20: &#x27;I@&#x27;, &#x27;I r&#x27;: 20.1, b&#x27;I r&#x27;: 20.1, 20.1: &#x27;I r&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;i:&#x27;: 21.1, b&#x27;i:&#x27;: 21.1, 21.1: &#x27;i:&#x27;, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;@U&#x27;: 28, b&#x27;@U&#x27;: 28, 28: &#x27;@U&#x27;, &#x27;o U&#x27;: 28.2, b&#x27;o U&#x27;: 28.2, 28.2: &#x27;o U&#x27;, &#x27;@ }&#x27;: 3.1, b&#x27;@ }&#x27;: 3.1, 3.1: &#x27;@ }&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;OI&#x27;, &#x27;o I&#x27;: 30.1, b&#x27;o I&#x27;: 30.1, 30.1: &#x27;o I&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;U@&#x27;: 37, b&#x27;U@&#x27;: 37, 37: &#x27;U@&#x27;, &#x27;U r&#x27;: 37.1, b&#x27;U r&#x27;: 37.1, 37.1: &#x27;U r&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;u:&#x27;: 39, b&#x27;u:&#x27;: 39, 39: &#x27;u:&#x27;, &#x27;O:&#x27;: 40, b&#x27;O:&#x27;: 40, 40: &#x27;O:&#x27;, 40.1: &#x27;O&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Acapela-optimised X-SAMPA for UK English voices (e.g. &quot;Peter&quot;), contributed by Jan Weiss&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;acapela.txt&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s\\t#%s\\tUNKNOWN\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;\\\\Prn=%s\\\\&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;cmu&#x27;: {&#x27;0&#x27;: 47, b&#x27;0&#x27;: 47, 47: &#x27;0&#x27;, &#x27;1&#x27;: 47.1, b&#x27;1&#x27;: 47.1, 47.1: &#x27;1&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;AA&#x27;: 1, b&#x27;AA&#x27;: 1, 1: &#x27;AA&#x27;, 1.1: &#x27;2&#x27;, 53: &#x27;1&#x27;, &#x27;AE&#x27;: 2, b&#x27;AE&#x27;: 2, 2: &#x27;AE&#x27;, &#x27;AH&#x27;: 3, b&#x27;AH&#x27;: 3, 3: &#x27;AH&#x27;, 4: &#x27;AA&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, 6: &#x27;AH&#x27;, &#x27;ER&#x27;: 7, b&#x27;ER&#x27;: 7, 7: &#x27;ER&#x27;, &#x27;AY&#x27;: 8, b&#x27;AY&#x27;: 8, 8: &#x27;AY&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;CH&#x27;: 10, b&#x27;CH&#x27;: 10, 10: &#x27;CH&#x27;, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;DH&#x27;: 12, b&#x27;DH&#x27;: 12, 12: &#x27;DH&#x27;, &#x27;EH&#x27;: 13, b&#x27;EH&#x27;: 13, 13: &#x27;EH&#x27;, 7.1: &#x27;ER&#x27;, 14: &#x27;ER&#x27;, &#x27;EY&#x27;: 15, b&#x27;EY&#x27;: 15, 15: &#x27;EY&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;HH&#x27;: 18, b&#x27;HH&#x27;: 18, 18: &#x27;HH&#x27;, &#x27;IH&#x27;: 19, b&#x27;IH&#x27;: 19, 19: &#x27;IH&#x27;, &#x27;EY AH&#x27;: 20, b&#x27;EY AH&#x27;: 20, 20: &#x27;EY AH&#x27;, &#x27;IY&#x27;: 21, b&#x27;IY&#x27;: 21, 21: &#x27;IY&#x27;, &#x27;JH&#x27;: 22, b&#x27;JH&#x27;: 22, 22: &#x27;JH&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;NG&#x27;: 27, b&#x27;NG&#x27;: 27, 27: &#x27;NG&#x27;, &#x27;OW&#x27;: 28, b&#x27;OW&#x27;: 28, 28: &#x27;OW&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;R&#x27;: 32, b&#x27;R&#x27;: 32, 32: &#x27;R&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;SH&#x27;: 34, b&#x27;SH&#x27;: 34, 34: &#x27;SH&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;TH&#x27;: 36, b&#x27;TH&#x27;: 36, 36: &#x27;TH&#x27;, &#x27;UH&#x27;: 37, b&#x27;UH&#x27;: 37, 37: &#x27;UH&#x27;, &#x27;UW&#x27;: 39, b&#x27;UW&#x27;: 39, 39: &#x27;UW&#x27;, &#x27;AO&#x27;: 40, b&#x27;AO&#x27;: 40, 40: &#x27;AO&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, &#x27;Y&#x27;: 43, b&#x27;Y&#x27;: 43, 43: &#x27;Y&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;ZH&#x27;: 45, b&#x27;ZH&#x27;: 45, 45: &#x27;ZH&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;format of the US-English Carnegie Mellon University Pronouncing Dictionary, contributed by Jan Weiss&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;apollo&#x27;: {47: &#x27;&#x27;, &#x27;_QQ&#x27;: 47, b&#x27;_QQ&#x27;: 47, &#x27;_AA&#x27;: 2, b&#x27;_AA&#x27;: 2, 2: &#x27;_AA&#x27;, &#x27;_AI&#x27;: 15, b&#x27;_AI&#x27;: 15, 15: &#x27;_AI&#x27;, &#x27;_AR&#x27;: 1, b&#x27;_AR&#x27;: 1, 1: &#x27;_AR&#x27;, &#x27;_AW&#x27;: 40, b&#x27;_AW&#x27;: 40, 40: &#x27;_AW&#x27;, &#x27;_A&#x27;: 6, b&#x27;_A&#x27;: 6, 6: &#x27;_A&#x27;, &#x27;_B&#x27;: 9, b&#x27;_B&#x27;: 9, 9: &#x27;_B&#x27;, &#x27;_CH&#x27;: 10, b&#x27;_CH&#x27;: 10, 10: &#x27;_CH&#x27;, &#x27;_D&#x27;: 11, b&#x27;_D&#x27;: 11, 11: &#x27;_D&#x27;, &#x27;_DH&#x27;: 12, b&#x27;_DH&#x27;: 12, 12: &#x27;_DH&#x27;, &#x27;_EE&#x27;: 21, b&#x27;_EE&#x27;: 21, 21: &#x27;_EE&#x27;, &#x27;_EI&#x27;: 14, b&#x27;_EI&#x27;: 14, 14: &#x27;_EI&#x27;, &#x27;_ER&#x27;: 7, b&#x27;_ER&#x27;: 7, 7: &#x27;_ER&#x27;, &#x27;_E&#x27;: 13, b&#x27;_E&#x27;: 13, 13: &#x27;_E&#x27;, &#x27;_F&#x27;: 16, b&#x27;_F&#x27;: 16, 16: &#x27;_F&#x27;, &#x27;_G&#x27;: 17, b&#x27;_G&#x27;: 17, 17: &#x27;_G&#x27;, &#x27;_H&#x27;: 18, b&#x27;_H&#x27;: 18, 18: &#x27;_H&#x27;, &#x27;_IA&#x27;: 20, b&#x27;_IA&#x27;: 20, 20: &#x27;_IA&#x27;, &#x27;_IE&#x27;: 8, b&#x27;_IE&#x27;: 8, 8: &#x27;_IE&#x27;, &#x27;_I&#x27;: 19, b&#x27;_I&#x27;: 19, 19: &#x27;_I&#x27;, &#x27;_J&#x27;: 22, b&#x27;_J&#x27;: 22, 22: &#x27;_J&#x27;, &#x27;_K&#x27;: 23, b&#x27;_K&#x27;: 23, 23: &#x27;_K&#x27;, &#x27;_KK&#x27;: 23, b&#x27;_KK&#x27;: 23, &#x27;_L&#x27;: 24, b&#x27;_L&#x27;: 24, 24: &#x27;_L&#x27;, &#x27;_M&#x27;: 25, b&#x27;_M&#x27;: 25, 25: &#x27;_M&#x27;, &#x27;_NG&#x27;: 27, b&#x27;_NG&#x27;: 27, 27: &#x27;_NG&#x27;, &#x27;_N&#x27;: 26, b&#x27;_N&#x27;: 26, 26: &#x27;_N&#x27;, &#x27;_OA&#x27;: 28, b&#x27;_OA&#x27;: 28, 28: &#x27;_OA&#x27;, &#x27;_OO&#x27;: 37.2, b&#x27;_OO&#x27;: 37.2, 37.2: &#x27;_OO&#x27;, &#x27;_OR&#x27;: 40.3, b&#x27;_OR&#x27;: 40.3, 40.3: &#x27;_OR&#x27;, &#x27;_OW&#x27;: 5, b&#x27;_OW&#x27;: 5, 5: &#x27;_OW&#x27;, &#x27;_OY&#x27;: 30, b&#x27;_OY&#x27;: 30, 30: &#x27;_OY&#x27;, &#x27;_O&#x27;: 4, b&#x27;_O&#x27;: 4, 4: &#x27;_O&#x27;, &#x27;_P&#x27;: 31, b&#x27;_P&#x27;: 31, 31: &#x27;_P&#x27;, &#x27;_PP&#x27;: 31, b&#x27;_PP&#x27;: 31, &#x27;_R&#x27;: 32, b&#x27;_R&#x27;: 32, 32: &#x27;_R&#x27;, &#x27;_SH&#x27;: 34, b&#x27;_SH&#x27;: 34, 34: &#x27;_SH&#x27;, &#x27;_S&#x27;: 33, b&#x27;_S&#x27;: 33, 33: &#x27;_S&#x27;, &#x27;_TH&#x27;: 36, b&#x27;_TH&#x27;: 36, 36: &#x27;_TH&#x27;, &#x27;_T&#x27;: 35, b&#x27;_T&#x27;: 35, 35: &#x27;_T&#x27;, &#x27;_TT&#x27;: 35, b&#x27;_TT&#x27;: 35, &#x27;_UU&#x27;: 39, b&#x27;_UU&#x27;: 39, 39: &#x27;_UU&#x27;, &#x27;_U&#x27;: 3, b&#x27;_U&#x27;: 3, 3: &#x27;_U&#x27;, &#x27;_V&#x27;: 41, b&#x27;_V&#x27;: 41, 41: &#x27;_V&#x27;, &#x27;_W&#x27;: 42, b&#x27;_W&#x27;: 42, 42: &#x27;_W&#x27;, &#x27;_Y&#x27;: 43, b&#x27;_Y&#x27;: 43, 43: &#x27;_Y&#x27;, &#x27;_ZH&#x27;: 45, b&#x27;_ZH&#x27;: 45, 45: &#x27;_ZH&#x27;, &#x27;_Z&#x27;: 44, b&#x27;_Z&#x27;: 44, 44: &#x27;_Z&#x27;, 37: &#x27;_AW&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Dolphin Apollo 2 serial-port and parallel-port hardware synthesizers (in case anybody still uses those)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;_K_W&#x27;, &#x27;_Q&#x27;), (&#x27;_K_S&#x27;, &#x27;_X&#x27;)], (&#x27;settings&#x27;, &#x27;cvtOut_regexps&#x27;): [(&#x27;_Q&#x27;, &#x27;_K_W&#x27;), (&#x27;_X&#x27;, &#x27;_K_S&#x27;)]}, &#x27;dectalk&#x27;: {47: &#x27;&#x27;, &quot;&#x27;&quot;: 47.1, b&quot;&#x27;&quot;: 47.1, 47.1: &quot;&#x27;&quot;, &#x27;aa&#x27;: 4, b&#x27;aa&#x27;: 4, 4: &#x27;aa&#x27;, &#x27;ae&#x27;: 2, b&#x27;ae&#x27;: 2, 2: &#x27;ae&#x27;, &#x27;ah&#x27;: 3, b&#x27;ah&#x27;: 3, 3: &#x27;ah&#x27;, &#x27;ao&#x27;: 40, b&#x27;ao&#x27;: 40, 40: &#x27;ao&#x27;, &#x27;aw&#x27;: 5, b&#x27;aw&#x27;: 5, 5: &#x27;aw&#x27;, &#x27;ax&#x27;: 6, b&#x27;ax&#x27;: 6, 6: &#x27;ax&#x27;, &#x27;ay&#x27;: 8, b&#x27;ay&#x27;: 8, 8: &#x27;ay&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;dx&#x27;: 11, b&#x27;dx&#x27;: 11, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;eh&#x27;: 13, b&#x27;eh&#x27;: 13, 13: &#x27;eh&#x27;, &#x27;el&#x27;: 24, b&#x27;el&#x27;: 24, &#x27;ey&#x27;: 15, b&#x27;ey&#x27;: 15, 15: &#x27;ey&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;hx&#x27;: 18, b&#x27;hx&#x27;: 18, 18: &#x27;hx&#x27;, &#x27;ih&#x27;: 19, b&#x27;ih&#x27;: 19, 19: &#x27;ih&#x27;, &#x27;ix&#x27;: 19, b&#x27;ix&#x27;: 19, &#x27;iy&#x27;: 21, b&#x27;iy&#x27;: 21, 21: &#x27;iy&#x27;, &#x27;q&#x27;: 21, b&#x27;q&#x27;: 21, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;lx&#x27;: 24, b&#x27;lx&#x27;: 24, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;nx&#x27;: 27, b&#x27;nx&#x27;: 27, 27: &#x27;nx&#x27;, &#x27;ow&#x27;: 28, b&#x27;ow&#x27;: 28, 28: &#x27;ow&#x27;, &#x27;oy&#x27;: 30, b&#x27;oy&#x27;: 30, 30: &#x27;oy&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;rx&#x27;: 32, b&#x27;rx&#x27;: 32, &#x27;rr&#x27;: 7, b&#x27;rr&#x27;: 7, 7: &#x27;rr&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;tx&#x27;: 35, b&#x27;tx&#x27;: 35, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;uh&#x27;: 37.2, b&#x27;uh&#x27;: 37.2, 37.2: &#x27;uh&#x27;, &#x27;uw&#x27;: 39, b&#x27;uw&#x27;: 39, 39: &#x27;uw&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;yx&#x27;: 43, b&#x27;yx&#x27;: 43, 43: &#x27;yx&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, &#x27;ihr&#x27;: 20, b&#x27;ihr&#x27;: 20, 20: &#x27;ihr&#x27;, 14: &#x27;ehr&#x27;, 37: &#x27;ao&#x27;, 1: &#x27;ae&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;DECtalk hardware synthesizers (American English)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;yxuw&#x27;, &#x27;yu&#x27;)], (&#x27;settings&#x27;, &#x27;cvtOut_regexps&#x27;): [(&#x27;yu&#x27;, &#x27;yxuw&#x27;)], (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;inline_header&#x27;): &#x27;[:phoneme on]\\n&#x27;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;[%s]&#x27;}, &#x27;doubletalk&#x27;: {47: &#x27;&#x27;, &#x27;/&#x27;: 47.1, b&#x27;/&#x27;: 47.1, 47.1: &#x27;/&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;NX&#x27;: 27, b&#x27;NX&#x27;: 27, 27: &#x27;NX&#x27;, &#x27;O&#x27;: 28, b&#x27;O&#x27;: 28, 28: &#x27;O&#x27;, &#x27;OW&#x27;: 28, b&#x27;OW&#x27;: 28, 4: &#x27;O&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;R&#x27;: 32, b&#x27;R&#x27;: 32, 32: &#x27;R&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;SH&#x27;: 34, b&#x27;SH&#x27;: 34, 34: &#x27;SH&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;TH&#x27;: 36, b&#x27;TH&#x27;: 36, 36: &#x27;TH&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;ZH&#x27;: 45, b&#x27;ZH&#x27;: 45, 45: &#x27;ZH&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;PX&#x27;: 31, b&#x27;PX&#x27;: 31, &#x27;TX&#x27;: 35, b&#x27;TX&#x27;: 35, &#x27;WH&#x27;: 42, b&#x27;WH&#x27;: 42, &#x27;KX&#x27;: 23, b&#x27;KX&#x27;: 23, &#x27;YY&#x27;: 43, b&#x27;YY&#x27;: 43, 43: &#x27;YY&#x27;, &#x27;Y&#x27;: 43, b&#x27;Y&#x27;: 43, &#x27;UH&#x27;: 37.2, b&#x27;UH&#x27;: 37.2, 37.2: &#x27;UH&#x27;, &#x27;UW&#x27;: 39, b&#x27;UW&#x27;: 39, 39: &#x27;UW&#x27;, &#x27;AA&#x27;: 1, b&#x27;AA&#x27;: 1, 1: &#x27;AA&#x27;, &#x27;AE&#x27;: 2, b&#x27;AE&#x27;: 2, 2: &#x27;AE&#x27;, &#x27;AH&#x27;: 3, b&#x27;AH&#x27;: 3, 3: &#x27;AH&#x27;, &#x27;AO&#x27;: 40, b&#x27;AO&#x27;: 40, 40: &#x27;AO&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, &#x27;AX&#x27;: 6, b&#x27;AX&#x27;: 6, 6: &#x27;AX&#x27;, &#x27;AY&#x27;: 8, b&#x27;AY&#x27;: 8, 8: &#x27;AY&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;CH&#x27;: 10, b&#x27;CH&#x27;: 10, 10: &#x27;CH&#x27;, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;DH&#x27;: 12, b&#x27;DH&#x27;: 12, 12: &#x27;DH&#x27;, &#x27;DX&#x27;: 35, b&#x27;DX&#x27;: 35, &#x27;EH&#x27;: 13, b&#x27;EH&#x27;: 13, 13: &#x27;EH&#x27;, &#x27;ER&#x27;: 7, b&#x27;ER&#x27;: 7, 7: &#x27;ER&#x27;, &#x27;EY&#x27;: 15, b&#x27;EY&#x27;: 15, 15: &#x27;EY&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;H&#x27;: 18, b&#x27;H&#x27;: 18, 18: &#x27;H&#x27;, &#x27;IH&#x27;: 19, b&#x27;IH&#x27;: 19, 19: &#x27;IH&#x27;, &#x27;IX&#x27;: 19, b&#x27;IX&#x27;: 19, &#x27;IY&#x27;: 21, b&#x27;IY&#x27;: 21, 21: &#x27;IY&#x27;, &#x27;JH&#x27;: 22, b&#x27;JH&#x27;: 22, 22: &#x27;JH&#x27;, 14: &#x27;EH R&#x27;, 20: &#x27;IY AH&#x27;, 37: &#x27;AO&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;DoubleTalk PC/LT serial-port hardware synthesizers (American English; assumes DOS driver by default, otherwise set DTALK_COMMAND_CODE to your current command-code binary value, e.g. export DTALK_COMMAND_CODE=1)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &lt;function markup_doubleTalk_word&gt;, (&#x27;settings&#x27;, &#x27;format_is_binary&#x27;): &#x27;&#x27;}, &#x27;keynote&#x27;: {47: &#x27;&#x27;, 47.1: &quot;&#x27;&quot;, &quot;&#x27;&quot;: 47.1, 47.2: &#x27;&quot;&#x27;, &#x27;&quot;&#x27;: 47.2, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;e&#x27;: 15, b&#x27;e&#x27;: 15, 15: &#x27;e&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;ae&#x27;: 2, b&#x27;ae&#x27;: 2, 2: &#x27;ae&#x27;, &#x27;u&#x27;: 39, b&#x27;u&#x27;: 39, 39: &#x27;u&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;o&#x27;: 28, b&#x27;o&#x27;: 28, 28: &#x27;o&#x27;, &#x27;O&#x27;: 40, b&#x27;O&#x27;: 40, 40: &#x27;O&#x27;, &#x27;a&#x27;: 4, b&#x27;a&#x27;: 4, 4: &#x27;a&#x27;, &#x27;^&#x27;: 3, b&#x27;^&#x27;: 3, 3: &#x27;^&#x27;, &#x27;R&#x27;: 7, b&#x27;R&#x27;: 7, 7: &#x27;R&#x27;, &#x27;ay&#x27;: 8, b&#x27;ay&#x27;: 8, 8: &#x27;ay&#x27;, &#x27;Oy&#x27;: 30, b&#x27;Oy&#x27;: 30, 30: &#x27;Oy&#x27;, &#x27;aw&#x27;: 5, b&#x27;aw&#x27;: 5, 5: &#x27;aw&#x27;, &#x27;=&#x27;: 6, b&#x27;=&#x27;: 6, 6: &#x27;=&#x27;, 14: &#x27;E r&#x27;, 20: &#x27;i ^&#x27;, 37: &#x27;O&#x27;, 1: &#x27;ae&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Phoneme-read and lexicon-add codes for Keynote Gold hardware synthesizers (American English)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;[p]%s[t]&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;keynote.dat&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;[x]%s %s&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &#x27;[t]\\n&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): False}, &#x27;audapter&#x27;: {47: &#x27;&#x27;, 47.1: &quot;&#x27;&quot;, &quot;&#x27;&quot;: 47.1, 47.2: &#x27;&quot;&#x27;, &#x27;&quot;&#x27;: 47.2, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, 36: &#x27;th&#x27;, &#x27;dh&#x27;: 12, b&#x27;dh&#x27;: 12, 12: &#x27;dh&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;zh&#x27;: 45, b&#x27;zh&#x27;: 45, 45: &#x27;zh&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;jh&#x27;: 22, b&#x27;jh&#x27;: 22, 22: &#x27;jh&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;e&#x27;: 15, b&#x27;e&#x27;: 15, 15: &#x27;e&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;ae&#x27;: 2, b&#x27;ae&#x27;: 2, 2: &#x27;ae&#x27;, &#x27;u&#x27;: 39, b&#x27;u&#x27;: 39, 39: &#x27;u&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;o&#x27;: 28, b&#x27;o&#x27;: 28, 28: &#x27;o&#x27;, &#x27;O&#x27;: 40, b&#x27;O&#x27;: 40, 40: &#x27;O&#x27;, &#x27;a&#x27;: 4, b&#x27;a&#x27;: 4, 4: &#x27;a&#x27;, &#x27;^&#x27;: 3, b&#x27;^&#x27;: 3, 3: &#x27;^&#x27;, &#x27;R&#x27;: 7, b&#x27;R&#x27;: 7, 7: &#x27;R&#x27;, &#x27;ay&#x27;: 8, b&#x27;ay&#x27;: 8, 8: &#x27;ay&#x27;, &#x27;Oy&#x27;: 30, b&#x27;Oy&#x27;: 30, 30: &#x27;Oy&#x27;, &#x27;aw&#x27;: 5, b&#x27;aw&#x27;: 5, 5: &#x27;aw&#x27;, &#x27;=&#x27;: 6, b&#x27;=&#x27;: 6, 6: &#x27;=&#x27;, 14: &#x27;E r&#x27;, 20: &#x27;i ^&#x27;, 37: &#x27;O&#x27;, 1: &#x27;ae&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Audapter Speech System, an old hardware serial/parallel-port synthesizer (American English)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;\\x05[p] %s\\x05[t]&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;audapter.dat&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;\\x05[x]%s %s\\x05[t]\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): False, (&#x27;settings&#x27;, &#x27;format_is_binary&#x27;): True}, &#x27;bbcmicro&#x27;: {47: &#x27;&#x27;, &#x27;4&#x27;: 47.1, b&#x27;4&#x27;: 47.1, 47.1: &#x27;4&#x27;, &#x27;5&#x27;: 47.2, b&#x27;5&#x27;: 47.2, 47.2: &#x27;5&#x27;, &#x27;AA&#x27;: 1, b&#x27;AA&#x27;: 1, 1: &#x27;AA&#x27;, &#x27;AE&#x27;: 2, b&#x27;AE&#x27;: 2, 2: &#x27;AE&#x27;, &#x27;AH&#x27;: 3, b&#x27;AH&#x27;: 3, 3: &#x27;AH&#x27;, &#x27;O&#x27;: 4, b&#x27;O&#x27;: 4, 4: &#x27;O&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, 6: &#x27;AH&#x27;, &#x27;ER&#x27;: 7, b&#x27;ER&#x27;: 7, 7: &#x27;ER&#x27;, &#x27;IY&#x27;: 8, b&#x27;IY&#x27;: 8, 8: &#x27;IY&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;CH&#x27;: 10, b&#x27;CH&#x27;: 10, 10: &#x27;CH&#x27;, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;DH&#x27;: 12, b&#x27;DH&#x27;: 12, 12: &#x27;DH&#x27;, &#x27;EH&#x27;: 13, b&#x27;EH&#x27;: 13, 13: &#x27;EH&#x27;, 7.1: &#x27;ER&#x27;, &#x27;AI&#x27;: 14, b&#x27;AI&#x27;: 14, 14: &#x27;AI&#x27;, &#x27;AY&#x27;: 15, b&#x27;AY&#x27;: 15, 15: &#x27;AY&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;/H&#x27;: 18, b&#x27;/H&#x27;: 18, 18: &#x27;/H&#x27;, &#x27;IH&#x27;: 19, b&#x27;IH&#x27;: 19, 19: &#x27;IH&#x27;, &#x27;IX&#x27;: 19.2, b&#x27;IX&#x27;: 19.2, 19.2: &#x27;IX&#x27;, &#x27;IXAH&#x27;: 20, b&#x27;IXAH&#x27;: 20, 20: &#x27;IXAH&#x27;, &#x27;EER&#x27;: 20.2, b&#x27;EER&#x27;: 20.2, 20.2: &#x27;EER&#x27;, &#x27;EE&#x27;: 21, b&#x27;EE&#x27;: 21, 21: &#x27;EE&#x27;, &#x27;J&#x27;: 22, b&#x27;J&#x27;: 22, 22: &#x27;J&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;C&#x27;: 23, b&#x27;C&#x27;: 23, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;NX&#x27;: 27, b&#x27;NX&#x27;: 27, 27: &#x27;NX&#x27;, &#x27;OW&#x27;: 28, b&#x27;OW&#x27;: 28, 28: &#x27;OW&#x27;, &#x27;OL&#x27;: 29, b&#x27;OL&#x27;: 29, 29: &#x27;OL&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;R&#x27;: 32, b&#x27;R&#x27;: 32, 32: &#x27;R&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;SH&#x27;: 34, b&#x27;SH&#x27;: 34, 34: &#x27;SH&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;TH&#x27;: 36, b&#x27;TH&#x27;: 36, 36: &#x27;TH&#x27;, &#x27;AOR&#x27;: 37, b&#x27;AOR&#x27;: 37, 37: &#x27;AOR&#x27;, &#x27;UH&#x27;: 37, b&#x27;UH&#x27;: 37, 37.2: &#x27;UH&#x27;, &#x27;/U&#x27;: 37.2, b&#x27;/U&#x27;: 37.2, &#x27;/UL&#x27;: 38, b&#x27;/UL&#x27;: 38, 38: &#x27;/UL&#x27;, &#x27;UW&#x27;: 39, b&#x27;UW&#x27;: 39, 39: &#x27;UW&#x27;, &#x27;UX&#x27;: 39, b&#x27;UX&#x27;: 39, &#x27;AO&#x27;: 40, b&#x27;AO&#x27;: 40, 40: &#x27;AO&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, &#x27;Y&#x27;: 43, b&#x27;Y&#x27;: 43, 43: &#x27;Y&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;ZH&#x27;: 45, b&#x27;ZH&#x27;: 45, 45: &#x27;ZH&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;BBC Micro Speech program from 1985 (see comments in lexconvert.py for more details)&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;BBCLEX&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): b&#x27;&gt; %s_\\x80%s&#x27;, (&#x27;settings&#x27;, &#x27;lex_read_function&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;lex_word_case&#x27;): &#x27;upper&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &lt;function bbc_prepDefaultLex&gt;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &lt;function bbc_appendDefaultLex&gt;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &lt;function markup_bbcMicro_word&gt;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;clause_separator&#x27;): &lt;function write_bbcmicro_phones&gt;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;KT&#x27;, &#x27;CT&#x27;), (&#x27;DYUW&#x27;, &#x27;DUX&#x27;), (&#x27;AHR$&#x27;, &#x27;AH&#x27;)], (&#x27;settings&#x27;, &#x27;cvtOut_regexps&#x27;): [(&#x27;DUX&#x27;, &#x27;DYUW&#x27;)]}, &#x27;bbcmicro-cc&#x27;: {47: &#x27;&#x27;, &#x27;*&#x27;: 47.1, b&#x27;*&#x27;: 47.1, 47.1: &#x27;*&#x27;, &#x27;+&#x27;: 47.2, b&#x27;+&#x27;: 47.2, 47.2: &#x27;+&#x27;, &#x27;E&#x27;: 21, b&#x27;E&#x27;: 21, 21: &#x27;E&#x27;, &#x27;i&#x27;: 19, b&#x27;i&#x27;: 19, 19: &#x27;i&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13: &#x27;e&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, 2: &#x27;a&#x27;, &#x27;u&#x27;: 3, b&#x27;u&#x27;: 3, 3: &#x27;u&#x27;, &#x27;AR&#x27;: 1, b&#x27;AR&#x27;: 1, 1: &#x27;AR&#x27;, &#x27;o&#x27;: 4, b&#x27;o&#x27;: 4, 4: &#x27;o&#x27;, &#x27;OR&#x27;: 40, b&#x27;OR&#x27;: 40, 40: &#x27;OR&#x27;, &#x27;oo&#x27;: 37.2, b&#x27;oo&#x27;: 37.2, 37.2: &#x27;oo&#x27;, &#x27;OO&#x27;: 39, b&#x27;OO&#x27;: 39, 39: &#x27;OO&#x27;, &#x27;ER&#x27;: 7, b&#x27;ER&#x27;: 7, 7: &#x27;ER&#x27;, &#x27;A&#x27;: 15, b&#x27;A&#x27;: 15, 15: &#x27;A&#x27;, &#x27;I&#x27;: 8, b&#x27;I&#x27;: 8, 8: &#x27;I&#x27;, &#x27;O&#x27;: 28, b&#x27;O&#x27;: 28, 28: &#x27;O&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, &#x27;EA&#x27;: 20, b&#x27;EA&#x27;: 20, 20: &#x27;EA&#x27;, &#x27;ea&#x27;: 14, b&#x27;ea&#x27;: 14, 14: &#x27;ea&#x27;, &#x27;UR&#x27;: 37, b&#x27;UR&#x27;: 37, 37: &#x27;UR&#x27;, &#x27;UH&#x27;: 6, b&#x27;UH&#x27;: 6, 6: &#x27;UH&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;CH&#x27;: 10, b&#x27;CH&#x27;: 10, 10: &#x27;CH&#x27;, &#x27;J&#x27;: 22, b&#x27;J&#x27;: 22, 22: &#x27;J&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;TH&#x27;: 36, b&#x27;TH&#x27;: 36, 36: &#x27;TH&#x27;, &#x27;DH&#x27;: 12, b&#x27;DH&#x27;: 12, 12: &#x27;DH&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;SH&#x27;: 34, b&#x27;SH&#x27;: 34, 34: &#x27;SH&#x27;, &#x27;ZH&#x27;: 45, b&#x27;ZH&#x27;: 45, 45: &#x27;ZH&#x27;, &#x27;H&#x27;: 18, b&#x27;H&#x27;: 18, 18: &#x27;H&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;NG&#x27;: 27, b&#x27;NG&#x27;: 27, 27: &#x27;NG&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;R&#x27;: 32, b&#x27;R&#x27;: 32, 32: &#x27;R&#x27;, &#x27;Y&#x27;: 43, b&#x27;Y&#x27;: 43, 43: &#x27;Y&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Computer Concepts Speech ROM which provided phonemes for the BBC Micro\\&#x27;s TMS5220 &quot;speech chip&quot; add-on (less widely sold than the software-only product)&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;inline_header&#x27;): &#x27;*UTTER &lt;1&gt; &#x27;, (&#x27;settings&#x27;, &#x27;clause_separator&#x27;): &#x27;\\n*UTTER &lt;1&gt; &#x27;, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;[*] &#x27;, &#x27;*&#x27;), (&#x27;[+] &#x27;, &#x27;+&#x27;)], (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): &#x27; &#x27;}, &#x27;amiga&#x27;: {47: &#x27;&#x27;, &#x27;4&#x27;: 47.1, b&#x27;4&#x27;: 47.1, 47.1: &#x27;4&#x27;, &#x27;3&#x27;: 47.2, b&#x27;3&#x27;: 47.2, 47.2: &#x27;3&#x27;, &#x27;/H&#x27;: 18, b&#x27;/H&#x27;: 18, 18: &#x27;/H&#x27;, &#x27;EH&#x27;: 13, b&#x27;EH&#x27;: 13, 13: &#x27;EH&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;OW&#x27;: 28, b&#x27;OW&#x27;: 28, 28: &#x27;OW&#x27;, &#x27;AY&#x27;: 8, b&#x27;AY&#x27;: 8, 8: &#x27;AY&#x27;, &#x27;AE&#x27;: 2, b&#x27;AE&#x27;: 2, 2: &#x27;AE&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;DH&#x27;: 12, b&#x27;DH&#x27;: 12, 12: &#x27;DH&#x27;, &#x27;IY&#x27;: 21, b&#x27;IY&#x27;: 21, 21: &#x27;IY&#x27;, &#x27;AH&#x27;: 6, b&#x27;AH&#x27;: 6, 6: &#x27;AH&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;U&#x27;: 3, b&#x27;U&#x27;: 3, 3: &#x27;U&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;Y&#x27;: 43, b&#x27;Y&#x27;: 43, 43: &#x27;Y&#x27;, &#x27;UW&#x27;: 39, b&#x27;UW&#x27;: 39, 39: &#x27;UW&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;ER&#x27;: 6.1, b&#x27;ER&#x27;: 6.1, 6.1: &#x27;ER&#x27;, &#x27;IH&#x27;: 19, b&#x27;IH&#x27;: 19, 19: &#x27;IH&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, &#x27;AA&#x27;: 1, b&#x27;AA&#x27;: 1, 1: &#x27;AA&#x27;, &#x27;R&#x27;: 32, b&#x27;R&#x27;: 32, 32: &#x27;R&#x27;, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;NX&#x27;: 27, b&#x27;NX&#x27;: 27, 27: &#x27;NX&#x27;, &#x27;J&#x27;: 22, b&#x27;J&#x27;: 22, 22: &#x27;J&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;TH&#x27;: 36, b&#x27;TH&#x27;: 36, 36: &#x27;TH&#x27;, &#x27;OH&#x27;: 40, b&#x27;OH&#x27;: 40, 40: &#x27;OH&#x27;, &#x27;EY&#x27;: 15, b&#x27;EY&#x27;: 15, 15: &#x27;EY&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, &#x27;CH&#x27;: 10, b&#x27;CH&#x27;: 10, 10: &#x27;CH&#x27;, &#x27;SH&#x27;: 34, b&#x27;SH&#x27;: 34, 34: &#x27;SH&#x27;, &#x27;O&#x27;: 4, b&#x27;O&#x27;: 4, 4: &#x27;O&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, 14: &#x27;EH&#x27;, 7: &#x27;ER&#x27;, 7.1: &#x27;ER&#x27;, 20: &#x27;IYAH&#x27;, 45: &#x27;J&#x27;, 37: &#x27;OH&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;AmigaOS speech synthesizer (American English)&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;}, &#x27;sam&#x27;: {47: &#x27;&#x27;, 47.1: &#x27;4&#x27;, &#x27;4&#x27;: 47.1, 47.2: &#x27;5&#x27;, &#x27;5&#x27;: 47.2, &#x27;IY&#x27;: 21, b&#x27;IY&#x27;: 21, 21: &#x27;IY&#x27;, &#x27;IH&#x27;: 19, b&#x27;IH&#x27;: 19, 19: &#x27;IH&#x27;, &#x27;EH&#x27;: 13, b&#x27;EH&#x27;: 13, 13: &#x27;EH&#x27;, &#x27;AE&#x27;: 2, b&#x27;AE&#x27;: 2, 2: &#x27;AE&#x27;, &#x27;AA&#x27;: 4, b&#x27;AA&#x27;: 4, 4: &#x27;AA&#x27;, &#x27;AH&#x27;: 3, b&#x27;AH&#x27;: 3, 3: &#x27;AH&#x27;, &#x27;AO&#x27;: 40, b&#x27;AO&#x27;: 40, 40: &#x27;AO&#x27;, &#x27;OH&#x27;: 28, b&#x27;OH&#x27;: 28, 28: &#x27;OH&#x27;, &#x27;UH&#x27;: 37.2, b&#x27;UH&#x27;: 37.2, 37.2: &#x27;UH&#x27;, &#x27;UX&#x27;: 39, b&#x27;UX&#x27;: 39, 39: &#x27;UX&#x27;, &#x27;ER&#x27;: 7, b&#x27;ER&#x27;: 7, 7: &#x27;ER&#x27;, &#x27;AX&#x27;: 2, b&#x27;AX&#x27;: 2, &#x27;IX&#x27;: 19, b&#x27;IX&#x27;: 19, &#x27;EY&#x27;: 15, b&#x27;EY&#x27;: 15, 15: &#x27;EY&#x27;, &#x27;AY&#x27;: 8, b&#x27;AY&#x27;: 8, 8: &#x27;AY&#x27;, &#x27;OY&#x27;: 30, b&#x27;OY&#x27;: 30, 30: &#x27;OY&#x27;, &#x27;AW&#x27;: 5, b&#x27;AW&#x27;: 5, 5: &#x27;AW&#x27;, &#x27;OW&#x27;: 28, b&#x27;OW&#x27;: 28, &#x27;UW&#x27;: 39, b&#x27;UW&#x27;: 39, &#x27;R&#x27;: 32, b&#x27;R&#x27;: 32, 32: &#x27;R&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, &#x27;WH&#x27;: 42, b&#x27;WH&#x27;: 42, &#x27;Y&#x27;: 43, b&#x27;Y&#x27;: 43, 43: &#x27;Y&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;NX&#x27;: 27, b&#x27;NX&#x27;: 27, 27: &#x27;NX&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;J&#x27;: 22, b&#x27;J&#x27;: 22, 22: &#x27;J&#x27;, &#x27;ZH&#x27;: 45, b&#x27;ZH&#x27;: 45, 45: &#x27;ZH&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;DH&#x27;: 12, b&#x27;DH&#x27;: 12, 12: &#x27;DH&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;SH&#x27;: 34, b&#x27;SH&#x27;: 34, 34: &#x27;SH&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;TH&#x27;: 36, b&#x27;TH&#x27;: 36, 36: &#x27;TH&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;CH&#x27;: 10, b&#x27;CH&#x27;: 10, 10: &#x27;CH&#x27;, &#x27;/H&#x27;: 18, b&#x27;/H&#x27;: 18, 18: &#x27;/H&#x27;, &#x27;Q&#x27;: 46, b&#x27;Q&#x27;: 46, 46: &#x27;Q&#x27;, 6: &#x27;AH&#x27;, 14: &#x27;EHR&#x27;, 20: &#x27;IYAH&#x27;, 37: &#x27;AO&#x27;, 1: &#x27;AE&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Software Automatic Mouth (1982 American English synth that ran on C64, Atari 400/800/etc and Apple II/etc)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;}, &#x27;speakjet&#x27;: {47: &#x27;&#x27;, &#x27;128&#x27;: 21, b&#x27;128&#x27;: 21, 21: &#x27;128&#x27;, &#x27;129&#x27;: 19, b&#x27;129&#x27;: 19, 19: &#x27;129&#x27;, &#x27;130&#x27;: 15, b&#x27;130&#x27;: 15, 15: &#x27;130&#x27;, &#x27;131&#x27;: 13, b&#x27;131&#x27;: 13, 13: &#x27;131&#x27;, &#x27;132&#x27;: 2, b&#x27;132&#x27;: 2, 2: &#x27;132&#x27;, &#x27;133&#x27;: 6, b&#x27;133&#x27;: 6, 6: &#x27;133&#x27;, &#x27;134&#x27;: 3, b&#x27;134&#x27;: 3, 3: &#x27;134&#x27;, &#x27;135&#x27;: 4, b&#x27;135&#x27;: 4, 4: &#x27;135&#x27;, &#x27;136&#x27;: 1, b&#x27;136&#x27;: 1, 1: &#x27;136&#x27;, &#x27;137&#x27;: 28, b&#x27;137&#x27;: 28, 28: &#x27;137&#x27;, &#x27;138&#x27;: 37.2, b&#x27;138&#x27;: 37.2, 37.2: &#x27;138&#x27;, &#x27;139&#x27;: 39, b&#x27;139&#x27;: 39, 39: &#x27;139&#x27;, &#x27;140&#x27;: 25, b&#x27;140&#x27;: 25, 25: &#x27;140&#x27;, &#x27;141&#x27;: 26, b&#x27;141&#x27;: 26, &#x27;142&#x27;: 26, b&#x27;142&#x27;: 26, 26: &#x27;142&#x27;, &#x27;143&#x27;: 27, b&#x27;143&#x27;: 27, &#x27;144&#x27;: 27, b&#x27;144&#x27;: 27, 27: &#x27;144&#x27;, &#x27;145&#x27;: 24, b&#x27;145&#x27;: 24, &#x27;146&#x27;: 24, b&#x27;146&#x27;: 24, 24: &#x27;146&#x27;, &#x27;147&#x27;: 42, b&#x27;147&#x27;: 42, 42: &#x27;147&#x27;, &#x27;148&#x27;: 32, b&#x27;148&#x27;: 32, 32: &#x27;148&#x27;, &#x27;149&#x27;: 20, b&#x27;149&#x27;: 20, 20: &#x27;149&#x27;, &#x27;150&#x27;: 14, b&#x27;150&#x27;: 14, 14: &#x27;150&#x27;, &#x27;151&#x27;: 7, b&#x27;151&#x27;: 7, 7: &#x27;151&#x27;, &#x27;152&#x27;: 1, b&#x27;152&#x27;: 1, &#x27;153&#x27;: 40, b&#x27;153&#x27;: 40, 40: &#x27;153&#x27;, &#x27;154&#x27;: 15, b&#x27;154&#x27;: 15, &#x27;155&#x27;: 8, b&#x27;155&#x27;: 8, 8: &#x27;155&#x27;, &#x27;156&#x27;: 30, b&#x27;156&#x27;: 30, 30: &#x27;156&#x27;, &#x27;157&#x27;: 8, b&#x27;157&#x27;: 8, &#x27;158&#x27;: 43, b&#x27;158&#x27;: 43, 43: &#x27;158&#x27;, &#x27;159&#x27;: 24, b&#x27;159&#x27;: 24, &#x27;160&#x27;: 39, b&#x27;160&#x27;: 39, &#x27;161&#x27;: 5, b&#x27;161&#x27;: 5, 5: &#x27;161&#x27;, &#x27;162&#x27;: 39, b&#x27;162&#x27;: 39, &#x27;164&#x27;: 28, b&#x27;164&#x27;: 28, &#x27;165&#x27;: 22, b&#x27;165&#x27;: 22, 22: &#x27;165&#x27;, &#x27;166&#x27;: 41, b&#x27;166&#x27;: 41, 41: &#x27;166&#x27;, &#x27;167&#x27;: 44, b&#x27;167&#x27;: 44, 44: &#x27;167&#x27;, &#x27;168&#x27;: 45, b&#x27;168&#x27;: 45, 45: &#x27;168&#x27;, &#x27;169&#x27;: 12, b&#x27;169&#x27;: 12, 12: &#x27;169&#x27;, &#x27;170&#x27;: 9, b&#x27;170&#x27;: 9, &#x27;171&#x27;: 9, b&#x27;171&#x27;: 9, 9: &#x27;171&#x27;, &#x27;172&#x27;: 9, b&#x27;172&#x27;: 9, &#x27;173&#x27;: 9, b&#x27;173&#x27;: 9, &#x27;174&#x27;: 11, b&#x27;174&#x27;: 11, &#x27;175&#x27;: 11, b&#x27;175&#x27;: 11, 11: &#x27;175&#x27;, &#x27;176&#x27;: 11, b&#x27;176&#x27;: 11, &#x27;177&#x27;: 11, b&#x27;177&#x27;: 11, &#x27;178&#x27;: 17, b&#x27;178&#x27;: 17, &#x27;179&#x27;: 17, b&#x27;179&#x27;: 17, 17: &#x27;179&#x27;, &#x27;180&#x27;: 17, b&#x27;180&#x27;: 17, &#x27;181&#x27;: 17, b&#x27;181&#x27;: 17, &#x27;182&#x27;: 10, b&#x27;182&#x27;: 10, 10: &#x27;182&#x27;, &#x27;183&#x27;: 18, b&#x27;183&#x27;: 18, &#x27;184&#x27;: 18, b&#x27;184&#x27;: 18, 18: &#x27;184&#x27;, &#x27;185&#x27;: 42, b&#x27;185&#x27;: 42, &#x27;186&#x27;: 16, b&#x27;186&#x27;: 16, 16: &#x27;186&#x27;, &#x27;187&#x27;: 33, b&#x27;187&#x27;: 33, &#x27;188&#x27;: 33, b&#x27;188&#x27;: 33, 33: &#x27;188&#x27;, &#x27;189&#x27;: 34, b&#x27;189&#x27;: 34, 34: &#x27;189&#x27;, &#x27;190&#x27;: 36, b&#x27;190&#x27;: 36, 36: &#x27;190&#x27;, &#x27;191&#x27;: 35, b&#x27;191&#x27;: 35, 35: &#x27;191&#x27;, &#x27;192&#x27;: 35, b&#x27;192&#x27;: 35, &#x27;194&#x27;: 23, b&#x27;194&#x27;: 23, &#x27;195&#x27;: 23, b&#x27;195&#x27;: 23, 23: &#x27;195&#x27;, &#x27;196&#x27;: 23, b&#x27;196&#x27;: 23, &#x27;197&#x27;: 23, b&#x27;197&#x27;: 23, &#x27;198&#x27;: 31, b&#x27;198&#x27;: 31, &#x27;199&#x27;: 31, b&#x27;199&#x27;: 31, 31: &#x27;199&#x27;, 37: &#x27;153&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Allophone codes for the American English &quot;SpeakJet&quot; speech synthesis chip (the conversion from phonemes to allophones might need tweaking).  Set the SPEAKJET_SYM environment variable to use mnemonics, otherwise numbers are used (set SPEAKJET_BINARY for binary output).&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;clause_separator&#x27;): &#x27;\\n&#x27;, (&#x27;settings&#x27;, &#x27;output_is_binary&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;rsynth&#x27;: {47: &#x27;&#x27;, &#x27;i:&#x27;: 21, b&#x27;i:&#x27;: 21, 21: &#x27;i:&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;eI&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;{&#x27;: 2, b&#x27;{&#x27;: 2, 2: &#x27;{&#x27;, &#x27;V&#x27;: 3, b&#x27;V&#x27;: 3, 3: &#x27;V&#x27;, &#x27;Q&#x27;: 4, b&#x27;Q&#x27;: 4, 4: &#x27;Q&#x27;, &#x27;A:&#x27;: 1, b&#x27;A:&#x27;: 1, 1: &#x27;A:&#x27;, &#x27;oU&#x27;: 28, b&#x27;oU&#x27;: 28, 28: &#x27;oU&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;u:&#x27;: 39, b&#x27;u:&#x27;: 39, 39: &#x27;u:&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;I@&#x27;: 20, b&#x27;I@&#x27;: 20, 20: &#x27;I@&#x27;, &#x27;e@&#x27;: 14, b&#x27;e@&#x27;: 14, 14: &#x27;e@&#x27;, &#x27;3:&#x27;: 7, b&#x27;3:&#x27;: 7, 7: &#x27;3:&#x27;, &#x27;Qr&#x27;: 40, b&#x27;Qr&#x27;: 40, 40: &#x27;Qr&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;OI&#x27;, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;aI&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;U@&#x27;: 39, b&#x27;U@&#x27;: 39, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;aU&#x27;, &#x27;@U&#x27;: 28, b&#x27;@U&#x27;: 28, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;tS&#x27;: 10, b&#x27;tS&#x27;: 10, 10: &#x27;tS&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, 6: &#x27;V&#x27;, 37: &#x27;Qr&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;rsynth text-to-speech C library (American English)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;}, &#x27;unicode-ipa&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;&#x27;, &#x27;\u02c8&#x27;: 47.1, b&#x27;\\xcb\\x88&#x27;: 47.1, 47.1: &#x27;\u02c8&#x27;, &#x27;\u02cc&#x27;: 47.2, b&#x27;\\xcb\\x8c&#x27;: 47.2, 47.2: &#x27;\u02cc&#x27;, &#x27;#&#x27;: 48, b&#x27;#&#x27;: 48, 48: &#x27;#&#x27;, &#x27;_&#x27;: 49, b&#x27;_&#x27;: 49, 49: &#x27;_&#x27;, &#x27;?&#x27;: 50, b&#x27;?&#x27;: 50, 50: &#x27;?&#x27;, &#x27;!&#x27;: 51, b&#x27;!&#x27;: 51, 51: &#x27;!&#x27;, &#x27;,&#x27;: 52, b&#x27;,&#x27;: 52, 52: &#x27;,&#x27;, &#x27;\u0251&#x27;: 1, b&#x27;\\xc9\\x91&#x27;: 1, 1: &#x27;\u0251&#x27;, &#x27;\u02d0&#x27;: 53, b&#x27;\\xcb\\x90&#x27;: 53, 53: &#x27;\u02d0&#x27;, &#x27;\u0251\u02d0&#x27;: 1.2, b&#x27;\\xc9\\x91\\xcb\\x90&#x27;: 1.2, 1.2: &#x27;\u0251\u02d0&#x27;, &#x27;\u0251\u0279&#x27;: 1.3, b&#x27;\\xc9\\x91\\xc9\\xb9&#x27;: 1.3, 1.3: &#x27;\u0251\u0279&#x27;, &#x27;a\u02d0&#x27;: 1.4, b&#x27;a\\xcb\\x90&#x27;: 1.4, 1.4: &#x27;a\u02d0&#x27;, &#x27;\u00e6&#x27;: 2, b&#x27;\\xc3\\xa6&#x27;: 2, 2: &#x27;\u00e6&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, &#x27;\u028c&#x27;: 3, b&#x27;\\xca\\x8c&#x27;: 3, 3: &#x27;\u028c&#x27;, &#x27;\u1d27&#x27;: 3, b&#x27;\\xe1\\xb4\\xa7&#x27;: 3, &#x27;\u0252&#x27;: 4, b&#x27;\\xc9\\x92&#x27;: 4, 4: &#x27;\u0252&#x27;, 4.1: &#x27;\u0251&#x27;, &#x27;\u0254&#x27;: 4.2, b&#x27;\\xc9\\x94&#x27;: 4.2, 4.2: &#x27;\u0254&#x27;, &#x27;a\u028a&#x27;: 5, b&#x27;a\\xca\\x8a&#x27;: 5, 5: &#x27;a\u028a&#x27;, &#x27;\u00e6\u0254&#x27;: 5.1, b&#x27;\\xc3\\xa6\\xc9\\x94&#x27;: 5.1, 5.1: &#x27;\u00e6\u0254&#x27;, &#x27;\u0259&#x27;: 6, b&#x27;\\xc9\\x99&#x27;: 6, 6: &#x27;\u0259&#x27;, &#x27;\u0259\u02d0&#x27;: 7, b&#x27;\\xc9\\x99\\xcb\\x90&#x27;: 7, 7: &#x27;\u0259\u02d0&#x27;, &#x27;\u025a&#x27;: 6.1, b&#x27;\\xc9\\x9a&#x27;: 6.1, 6.1: &#x27;\u025a&#x27;, &#x27;a\u026a&#x27;: 8, b&#x27;a\\xc9\\xaa&#x27;: 8, 8: &#x27;a\u026a&#x27;, &#x27;\u028c\u026a&#x27;: 8, b&#x27;\\xca\\x8c\\xc9\\xaa&#x27;: 8, &#x27;\u0251e&#x27;: 8.1, b&#x27;\\xc9\\x91e&#x27;: 8.1, 8.1: &#x27;\u0251e&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;t\u0283&#x27;: 10, b&#x27;t\\xca\\x83&#x27;: 10, 10: &#x27;t\u0283&#x27;, &#x27;\u02a7&#x27;: 10, b&#x27;\\xca\\xa7&#x27;: 10, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;\u00f0&#x27;: 12, b&#x27;\\xc3\\xb0&#x27;: 12, 12: &#x27;\u00f0&#x27;, &#x27;\u025b&#x27;: 13, b&#x27;\\xc9\\x9b&#x27;: 13, 13: &#x27;\u025b&#x27;, &#x27;e&#x27;: 13.1, b&#x27;e&#x27;: 13.1, 13.1: &#x27;e&#x27;, &#x27;\u025d&#x27;: 7.1, b&#x27;\\xc9\\x9d&#x27;: 7.1, 7.1: &#x27;\u025d&#x27;, &#x27;\u025c\u02d0&#x27;: 7.1, b&#x27;\\xc9\\x9c\\xcb\\x90&#x27;: 7.1, &#x27;\u025b\u0259&#x27;: 14, b&#x27;\\xc9\\x9b\\xc9\\x99&#x27;: 14, 14: &#x27;\u025b\u0259&#x27;, &#x27;\u025b\u0279&#x27;: 14.1, b&#x27;\\xc9\\x9b\\xc9\\xb9&#x27;: 14.1, 14.1: &#x27;\u025b\u0279&#x27;, &#x27;e\u02d0&#x27;: 14.2, b&#x27;e\\xcb\\x90&#x27;: 14.2, 14.2: &#x27;e\u02d0&#x27;, &#x27;\u025b\u02d0&#x27;: 14.3, b&#x27;\\xc9\\x9b\\xcb\\x90&#x27;: 14.3, 14.3: &#x27;\u025b\u02d0&#x27;, &#x27;e\u0259&#x27;: 14.4, b&#x27;e\\xc9\\x99&#x27;: 14.4, 14.4: &#x27;e\u0259&#x27;, &#x27;e\u026a&#x27;: 15, b&#x27;e\\xc9\\xaa&#x27;: 15, 15: &#x27;e\u026a&#x27;, &#x27;\u00e6\u026a&#x27;: 15.1, b&#x27;\\xc3\\xa6\\xc9\\xaa&#x27;: 15.1, 15.1: &#x27;\u00e6\u026a&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;\u0261&#x27;: 17, b&#x27;\\xc9\\xa1&#x27;: 17, 17: &#x27;\u0261&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;\u026a&#x27;: 19, b&#x27;\\xc9\\xaa&#x27;: 19, 19: &#x27;\u026a&#x27;, &#x27;\u0268&#x27;: 19.1, b&#x27;\\xc9\\xa8&#x27;: 19.1, 19.1: &#x27;\u0268&#x27;, &#x27;\u026a\u0259&#x27;: 20, b&#x27;\\xc9\\xaa\\xc9\\x99&#x27;: 20, 20: &#x27;\u026a\u0259&#x27;, &#x27;\u026a\u0279&#x27;: 20.1, b&#x27;\\xc9\\xaa\\xc9\\xb9&#x27;: 20.1, 20.1: &#x27;\u026a\u0279&#x27;, &#x27;\u026a\u0279\u0259&#x27;: 20.2, b&#x27;\\xc9\\xaa\\xc9\\xb9\\xc9\\x99&#x27;: 20.2, 20.2: &#x27;\u026a\u0279\u0259&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;i\u02d0&#x27;: 21.1, b&#x27;i\\xcb\\x90&#x27;: 21.1, 21.1: &#x27;i\u02d0&#x27;, &#x27;d\u0292&#x27;: 22, b&#x27;d\\xca\\x92&#x27;: 22, 22: &#x27;d\u0292&#x27;, &#x27;\u02a4&#x27;: 22, b&#x27;\\xca\\xa4&#x27;: 22, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;d\u026b&#x27;: 24.1, b&#x27;d\\xc9\\xab&#x27;: 24.1, 24.1: &#x27;d\u026b&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;\u014b&#x27;: 27, b&#x27;\\xc5\\x8b&#x27;: 27, 27: &#x27;\u014b&#x27;, &#x27;\u0259\u028a&#x27;: 28, b&#x27;\\xc9\\x99\\xca\\x8a&#x27;: 28, 28: &#x27;\u0259\u028a&#x27;, &#x27;o&#x27;: 28.1, b&#x27;o&#x27;: 28.1, 28.1: &#x27;o&#x27;, &#x27;o\u028a&#x27;: 28.2, b&#x27;o\\xca\\x8a&#x27;: 28.2, 28.2: &#x27;o\u028a&#x27;, &#x27;\u0259\u0289&#x27;: 3.1, b&#x27;\\xc9\\x99\\xca\\x89&#x27;: 3.1, 3.1: &#x27;\u0259\u0289&#x27;, &#x27;\u0254\u026a&#x27;: 30, b&#x27;\\xc9\\x94\\xc9\\xaa&#x27;: 30, 30: &#x27;\u0254\u026a&#x27;, &#x27;o\u026a&#x27;: 30.1, b&#x27;o\\xc9\\xaa&#x27;: 30.1, 30.1: &#x27;o\u026a&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;\u0279&#x27;: 32, b&#x27;\\xc9\\xb9&#x27;: 32, 32: &#x27;\u0279&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;\u0283&#x27;: 34, b&#x27;\\xca\\x83&#x27;: 34, 34: &#x27;\u0283&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;\u027e&#x27;: 35.1, b&#x27;\\xc9\\xbe&#x27;: 35.1, 35.1: &#x27;\u027e&#x27;, &#x27;\u03b8&#x27;: 36, b&#x27;\\xce\\xb8&#x27;: 36, 36: &#x27;\u03b8&#x27;, &#x27;\u028a\u0259&#x27;: 37, b&#x27;\\xca\\x8a\\xc9\\x99&#x27;: 37, 37: &#x27;\u028a\u0259&#x27;, &#x27;\u028a\u0279&#x27;: 37.1, b&#x27;\\xca\\x8a\\xc9\\xb9&#x27;: 37.1, 37.1: &#x27;\u028a\u0279&#x27;, &#x27;\u028a&#x27;: 37.2, b&#x27;\\xca\\x8a&#x27;: 37.2, 37.2: &#x27;\u028a&#x27;, &#x27;\u0289\u02d0&#x27;: 39, b&#x27;\\xca\\x89\\xcb\\x90&#x27;: 39, 39: &#x27;\u0289\u02d0&#x27;, &#x27;u\u02d0&#x27;: 39.1, b&#x27;u\\xcb\\x90&#x27;: 39.1, 39.1: &#x27;u\u02d0&#x27;, &#x27;u&#x27;: 39.2, b&#x27;u&#x27;: 39.2, 39.2: &#x27;u&#x27;, &#x27;\u0254\u02d0&#x27;: 40, b&#x27;\\xc9\\x94\\xcb\\x90&#x27;: 40, 40: &#x27;\u0254\u02d0&#x27;, 40.1: &#x27;\u0254&#x27;, &#x27;o\u02d0&#x27;: 40.2, b&#x27;o\\xcb\\x90&#x27;: 40.2, 40.2: &#x27;o\u02d0&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;\u028d&#x27;: 42.1, b&#x27;\\xca\\x8d&#x27;: 42.1, 42.1: &#x27;\u028d&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;\u0292&#x27;: 45, b&#x27;\\xca\\x92&#x27;: 45, 45: &#x27;\u0292&#x27;, &#x27;\u0294&#x27;: 46, b&#x27;\\xca\\x94&#x27;: 46, 46: &#x27;\u0294&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;IPA symbols in Unicode, as used by an increasing number of dictionary programs, websites etc&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-ipa.html&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;HTML&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;mobileoptimized&quot; content=&quot;0&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;&lt;tr&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;%s&lt;/td&gt;&lt;/tr&gt;\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &#x27;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cvtOut_func&#x27;): &lt;function unicode_preprocess&gt;}, &#x27;unicode-ipa-syls&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;.&#x27;, &#x27;\u02c8&#x27;: 47.1, b&#x27;\\xcb\\x88&#x27;: 47.1, 47.1: &#x27;\u02c8&#x27;, &#x27;\u02cc&#x27;: 47.2, b&#x27;\\xcb\\x8c&#x27;: 47.2, 47.2: &#x27;\u02cc&#x27;, &#x27;#&#x27;: 48, b&#x27;#&#x27;: 48, 48: &#x27;#&#x27;, &#x27;_&#x27;: 49, b&#x27;_&#x27;: 49, 49: &#x27;_&#x27;, &#x27;?&#x27;: 50, b&#x27;?&#x27;: 50, 50: &#x27;?&#x27;, &#x27;!&#x27;: 51, b&#x27;!&#x27;: 51, 51: &#x27;!&#x27;, &#x27;,&#x27;: 52, b&#x27;,&#x27;: 52, 52: &#x27;,&#x27;, &#x27;\u0251&#x27;: 1, b&#x27;\\xc9\\x91&#x27;: 1, 1: &#x27;\u0251&#x27;, &#x27;\u02d0&#x27;: 53, b&#x27;\\xcb\\x90&#x27;: 53, 53: &#x27;\u02d0&#x27;, &#x27;\u0251\u02d0&#x27;: 1.2, b&#x27;\\xc9\\x91\\xcb\\x90&#x27;: 1.2, 1.2: &#x27;\u0251\u02d0&#x27;, &#x27;\u0251\u0279&#x27;: 1.3, b&#x27;\\xc9\\x91\\xc9\\xb9&#x27;: 1.3, 1.3: &#x27;\u0251\u0279&#x27;, &#x27;a\u02d0&#x27;: 1.4, b&#x27;a\\xcb\\x90&#x27;: 1.4, 1.4: &#x27;a\u02d0&#x27;, &#x27;\u00e6&#x27;: 2, b&#x27;\\xc3\\xa6&#x27;: 2, 2: &#x27;\u00e6&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, &#x27;\u028c&#x27;: 3, b&#x27;\\xca\\x8c&#x27;: 3, 3: &#x27;\u028c&#x27;, &#x27;\u1d27&#x27;: 3, b&#x27;\\xe1\\xb4\\xa7&#x27;: 3, &#x27;\u0252&#x27;: 4, b&#x27;\\xc9\\x92&#x27;: 4, 4: &#x27;\u0252&#x27;, 4.1: &#x27;\u0251&#x27;, &#x27;\u0254&#x27;: 4.2, b&#x27;\\xc9\\x94&#x27;: 4.2, 4.2: &#x27;\u0254&#x27;, &#x27;a\u028a&#x27;: 5, b&#x27;a\\xca\\x8a&#x27;: 5, 5: &#x27;a\u028a&#x27;, &#x27;\u00e6\u0254&#x27;: 5.1, b&#x27;\\xc3\\xa6\\xc9\\x94&#x27;: 5.1, 5.1: &#x27;\u00e6\u0254&#x27;, &#x27;\u0259&#x27;: 6, b&#x27;\\xc9\\x99&#x27;: 6, 6: &#x27;\u0259&#x27;, &#x27;\u0259\u02d0&#x27;: 7, b&#x27;\\xc9\\x99\\xcb\\x90&#x27;: 7, 7: &#x27;\u0259\u02d0&#x27;, &#x27;\u025a&#x27;: 6.1, b&#x27;\\xc9\\x9a&#x27;: 6.1, 6.1: &#x27;\u025a&#x27;, &#x27;a\u026a&#x27;: 8, b&#x27;a\\xc9\\xaa&#x27;: 8, 8: &#x27;a\u026a&#x27;, &#x27;\u028c\u026a&#x27;: 8, b&#x27;\\xca\\x8c\\xc9\\xaa&#x27;: 8, &#x27;\u0251e&#x27;: 8.1, b&#x27;\\xc9\\x91e&#x27;: 8.1, 8.1: &#x27;\u0251e&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;t\u0283&#x27;: 10, b&#x27;t\\xca\\x83&#x27;: 10, 10: &#x27;t\u0283&#x27;, &#x27;\u02a7&#x27;: 10, b&#x27;\\xca\\xa7&#x27;: 10, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;\u00f0&#x27;: 12, b&#x27;\\xc3\\xb0&#x27;: 12, 12: &#x27;\u00f0&#x27;, &#x27;\u025b&#x27;: 13, b&#x27;\\xc9\\x9b&#x27;: 13, 13: &#x27;\u025b&#x27;, &#x27;e&#x27;: 13.1, b&#x27;e&#x27;: 13.1, 13.1: &#x27;e&#x27;, &#x27;\u025d&#x27;: 7.1, b&#x27;\\xc9\\x9d&#x27;: 7.1, 7.1: &#x27;\u025d&#x27;, &#x27;\u025c\u02d0&#x27;: 7.1, b&#x27;\\xc9\\x9c\\xcb\\x90&#x27;: 7.1, &#x27;\u025b\u0259&#x27;: 14, b&#x27;\\xc9\\x9b\\xc9\\x99&#x27;: 14, 14: &#x27;\u025b\u0259&#x27;, &#x27;\u025b\u0279&#x27;: 14.1, b&#x27;\\xc9\\x9b\\xc9\\xb9&#x27;: 14.1, 14.1: &#x27;\u025b\u0279&#x27;, &#x27;e\u02d0&#x27;: 14.2, b&#x27;e\\xcb\\x90&#x27;: 14.2, 14.2: &#x27;e\u02d0&#x27;, &#x27;\u025b\u02d0&#x27;: 14.3, b&#x27;\\xc9\\x9b\\xcb\\x90&#x27;: 14.3, 14.3: &#x27;\u025b\u02d0&#x27;, &#x27;e\u0259&#x27;: 14.4, b&#x27;e\\xc9\\x99&#x27;: 14.4, 14.4: &#x27;e\u0259&#x27;, &#x27;e\u026a&#x27;: 15, b&#x27;e\\xc9\\xaa&#x27;: 15, 15: &#x27;e\u026a&#x27;, &#x27;\u00e6\u026a&#x27;: 15.1, b&#x27;\\xc3\\xa6\\xc9\\xaa&#x27;: 15.1, 15.1: &#x27;\u00e6\u026a&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;\u0261&#x27;: 17, b&#x27;\\xc9\\xa1&#x27;: 17, 17: &#x27;\u0261&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;\u026a&#x27;: 19, b&#x27;\\xc9\\xaa&#x27;: 19, 19: &#x27;\u026a&#x27;, &#x27;\u0268&#x27;: 19.1, b&#x27;\\xc9\\xa8&#x27;: 19.1, 19.1: &#x27;\u0268&#x27;, &#x27;\u026a\u0259&#x27;: 20, b&#x27;\\xc9\\xaa\\xc9\\x99&#x27;: 20, 20: &#x27;\u026a\u0259&#x27;, &#x27;\u026a\u0279&#x27;: 20.1, b&#x27;\\xc9\\xaa\\xc9\\xb9&#x27;: 20.1, 20.1: &#x27;\u026a\u0279&#x27;, &#x27;\u026a\u0279\u0259&#x27;: 20.2, b&#x27;\\xc9\\xaa\\xc9\\xb9\\xc9\\x99&#x27;: 20.2, 20.2: &#x27;\u026a\u0279\u0259&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;i\u02d0&#x27;: 21.1, b&#x27;i\\xcb\\x90&#x27;: 21.1, 21.1: &#x27;i\u02d0&#x27;, &#x27;d\u0292&#x27;: 22, b&#x27;d\\xca\\x92&#x27;: 22, 22: &#x27;d\u0292&#x27;, &#x27;\u02a4&#x27;: 22, b&#x27;\\xca\\xa4&#x27;: 22, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;d\u026b&#x27;: 24.1, b&#x27;d\\xc9\\xab&#x27;: 24.1, 24.1: &#x27;d\u026b&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;\u014b&#x27;: 27, b&#x27;\\xc5\\x8b&#x27;: 27, 27: &#x27;\u014b&#x27;, &#x27;\u0259\u028a&#x27;: 28, b&#x27;\\xc9\\x99\\xca\\x8a&#x27;: 28, 28: &#x27;\u0259\u028a&#x27;, &#x27;o&#x27;: 28.1, b&#x27;o&#x27;: 28.1, 28.1: &#x27;o&#x27;, &#x27;o\u028a&#x27;: 28.2, b&#x27;o\\xca\\x8a&#x27;: 28.2, 28.2: &#x27;o\u028a&#x27;, &#x27;\u0259\u0289&#x27;: 3.1, b&#x27;\\xc9\\x99\\xca\\x89&#x27;: 3.1, 3.1: &#x27;\u0259\u0289&#x27;, &#x27;\u0254\u026a&#x27;: 30, b&#x27;\\xc9\\x94\\xc9\\xaa&#x27;: 30, 30: &#x27;\u0254\u026a&#x27;, &#x27;o\u026a&#x27;: 30.1, b&#x27;o\\xc9\\xaa&#x27;: 30.1, 30.1: &#x27;o\u026a&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;\u0279&#x27;: 32, b&#x27;\\xc9\\xb9&#x27;: 32, 32: &#x27;\u0279&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;\u0283&#x27;: 34, b&#x27;\\xca\\x83&#x27;: 34, 34: &#x27;\u0283&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;\u027e&#x27;: 35.1, b&#x27;\\xc9\\xbe&#x27;: 35.1, 35.1: &#x27;\u027e&#x27;, &#x27;\u03b8&#x27;: 36, b&#x27;\\xce\\xb8&#x27;: 36, 36: &#x27;\u03b8&#x27;, &#x27;\u028a\u0259&#x27;: 37, b&#x27;\\xca\\x8a\\xc9\\x99&#x27;: 37, 37: &#x27;\u028a\u0259&#x27;, &#x27;\u028a\u0279&#x27;: 37.1, b&#x27;\\xca\\x8a\\xc9\\xb9&#x27;: 37.1, 37.1: &#x27;\u028a\u0279&#x27;, &#x27;\u028a&#x27;: 37.2, b&#x27;\\xca\\x8a&#x27;: 37.2, 37.2: &#x27;\u028a&#x27;, &#x27;\u0289\u02d0&#x27;: 39, b&#x27;\\xca\\x89\\xcb\\x90&#x27;: 39, 39: &#x27;\u0289\u02d0&#x27;, &#x27;u\u02d0&#x27;: 39.1, b&#x27;u\\xcb\\x90&#x27;: 39.1, 39.1: &#x27;u\u02d0&#x27;, &#x27;u&#x27;: 39.2, b&#x27;u&#x27;: 39.2, 39.2: &#x27;u&#x27;, &#x27;\u0254\u02d0&#x27;: 40, b&#x27;\\xc9\\x94\\xcb\\x90&#x27;: 40, 40: &#x27;\u0254\u02d0&#x27;, 40.1: &#x27;\u0254&#x27;, &#x27;o\u02d0&#x27;: 40.2, b&#x27;o\\xcb\\x90&#x27;: 40.2, 40.2: &#x27;o\u02d0&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;\u028d&#x27;: 42.1, b&#x27;\\xca\\x8d&#x27;: 42.1, 42.1: &#x27;\u028d&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;\u0292&#x27;: 45, b&#x27;\\xca\\x92&#x27;: 45, 45: &#x27;\u0292&#x27;, &#x27;\u0294&#x27;: 46, b&#x27;\\xca\\x94&#x27;: 46, 46: &#x27;\u0294&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Like unicode-ipa but with syllable separators preserved&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-ipa.html&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;HTML&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;mobileoptimized&quot; content=&quot;0&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;&lt;tr&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;%s&lt;/td&gt;&lt;/tr&gt;\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &#x27;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cvtOut_func&#x27;): &lt;function unicode_preprocess&gt;, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;\\\\.+&#x27;, &#x27;.&#x27;)]}, &#x27;yinghan&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;&#x27;, &#x27;\u02c8&#x27;: 47.1, b&#x27;\\xcb\\x88&#x27;: 47.1, 47.1: &#x27;\u02c8&#x27;, &#x27;\u02cc&#x27;: 47.2, b&#x27;\\xcb\\x8c&#x27;: 47.2, 47.2: &#x27;\u02cc&#x27;, &#x27;#&#x27;: 48, b&#x27;#&#x27;: 48, 48: &#x27;#&#x27;, &#x27;_&#x27;: 49, b&#x27;_&#x27;: 49, 49: &#x27;_&#x27;, &#x27;?&#x27;: 50, b&#x27;?&#x27;: 50, 50: &#x27;?&#x27;, &#x27;!&#x27;: 51, b&#x27;!&#x27;: 51, 51: &#x27;!&#x27;, &#x27;,&#x27;: 52, b&#x27;,&#x27;: 52, 52: &#x27;,&#x27;, &#x27;\u0251&#x27;: 1, b&#x27;\\xc9\\x91&#x27;: 1, 1: &#x27;\u0251&#x27;, &#x27;\u02d0&#x27;: 53, b&#x27;\\xcb\\x90&#x27;: 53, 53: &#x27;\u02d0&#x27;, &#x27;\u0251\u02d0&#x27;: 1.2, b&#x27;\\xc9\\x91\\xcb\\x90&#x27;: 1.2, 1.2: &#x27;\u0251\u02d0&#x27;, &#x27;\u0251\u0279&#x27;: 1.3, b&#x27;\\xc9\\x91\\xc9\\xb9&#x27;: 1.3, 1.3: &#x27;\u0251\u0279&#x27;, &#x27;a\u02d0&#x27;: 1.4, b&#x27;a\\xcb\\x90&#x27;: 1.4, 1.4: &#x27;a\u02d0&#x27;, &#x27;\u00e6&#x27;: 2, b&#x27;\\xc3\\xa6&#x27;: 2, 2: &#x27;\u00e6&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, &#x27;\u028c&#x27;: 3, b&#x27;\\xca\\x8c&#x27;: 3, 3: &#x27;\u028c&#x27;, &#x27;\u1d27&#x27;: 3, b&#x27;\\xe1\\xb4\\xa7&#x27;: 3, &#x27;\u0252&#x27;: 4, b&#x27;\\xc9\\x92&#x27;: 4, 4: &#x27;\u0252&#x27;, 4.1: &#x27;\u0251&#x27;, &#x27;\u0254&#x27;: 4.2, b&#x27;\\xc9\\x94&#x27;: 4.2, 4.2: &#x27;\u0254&#x27;, &#x27;a\u028a&#x27;: 5, b&#x27;a\\xca\\x8a&#x27;: 5, 5: &#x27;a\u028a&#x27;, &#x27;\u00e6\u0254&#x27;: 5.1, b&#x27;\\xc3\\xa6\\xc9\\x94&#x27;: 5.1, 5.1: &#x27;\u00e6\u0254&#x27;, &#x27;\u0259&#x27;: 6, b&#x27;\\xc9\\x99&#x27;: 6, 6: &#x27;\u0259&#x27;, &#x27;\u0259\u02d0&#x27;: 7, b&#x27;\\xc9\\x99\\xcb\\x90&#x27;: 7, 7: &#x27;\u0259\u02d0&#x27;, &#x27;\u025a&#x27;: 6.1, b&#x27;\\xc9\\x9a&#x27;: 6.1, 6.1: &#x27;\u025a&#x27;, &#x27;a\u026a&#x27;: 8, b&#x27;a\\xc9\\xaa&#x27;: 8, 8: &#x27;a\u026a&#x27;, &#x27;\u028c\u026a&#x27;: 8, b&#x27;\\xca\\x8c\\xc9\\xaa&#x27;: 8, &#x27;\u0251e&#x27;: 8.1, b&#x27;\\xc9\\x91e&#x27;: 8.1, 8.1: &#x27;\u0251e&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;t\u0283&#x27;: 10, b&#x27;t\\xca\\x83&#x27;: 10, 10: &#x27;t\u0283&#x27;, &#x27;\u02a7&#x27;: 10, b&#x27;\\xca\\xa7&#x27;: 10, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;\u00f0&#x27;: 12, b&#x27;\\xc3\\xb0&#x27;: 12, 12: &#x27;\u00f0&#x27;, &#x27;\u025b&#x27;: 13, b&#x27;\\xc9\\x9b&#x27;: 13, 13: &#x27;\u025b&#x27;, &#x27;e&#x27;: 13.1, b&#x27;e&#x27;: 13.1, 13.1: &#x27;e&#x27;, &#x27;\u025d&#x27;: 7.1, b&#x27;\\xc9\\x9d&#x27;: 7.1, 7.1: &#x27;\u025d&#x27;, &#x27;\u025c\u02d0&#x27;: 7.1, b&#x27;\\xc9\\x9c\\xcb\\x90&#x27;: 7.1, &#x27;\u025b\u0259&#x27;: 14, b&#x27;\\xc9\\x9b\\xc9\\x99&#x27;: 14, 14: &#x27;\u025b\u0259&#x27;, &#x27;\u025b\u0279&#x27;: 14.1, b&#x27;\\xc9\\x9b\\xc9\\xb9&#x27;: 14.1, 14.1: &#x27;\u025b\u0279&#x27;, &#x27;e\u02d0&#x27;: 14.2, b&#x27;e\\xcb\\x90&#x27;: 14.2, 14.2: &#x27;e\u02d0&#x27;, &#x27;\u025b\u02d0&#x27;: 14.3, b&#x27;\\xc9\\x9b\\xcb\\x90&#x27;: 14.3, 14.3: &#x27;\u025b\u02d0&#x27;, &#x27;e\u0259&#x27;: 14.4, b&#x27;e\\xc9\\x99&#x27;: 14.4, 14.4: &#x27;e\u0259&#x27;, &#x27;e\u026a&#x27;: 15, b&#x27;e\\xc9\\xaa&#x27;: 15, 15: &#x27;e\u026a&#x27;, &#x27;\u00e6\u026a&#x27;: 15.1, b&#x27;\\xc3\\xa6\\xc9\\xaa&#x27;: 15.1, 15.1: &#x27;\u00e6\u026a&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;\u0261&#x27;: 17, b&#x27;\\xc9\\xa1&#x27;: 17, 17: &#x27;\u0261&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;\u026a&#x27;: 19, b&#x27;\\xc9\\xaa&#x27;: 19, 19: &#x27;\u026a&#x27;, &#x27;\u0268&#x27;: 19.1, b&#x27;\\xc9\\xa8&#x27;: 19.1, 19.1: &#x27;\u0268&#x27;, &#x27;\u026a\u0259&#x27;: 20, b&#x27;\\xc9\\xaa\\xc9\\x99&#x27;: 20, 20: &#x27;\u026a\u0259&#x27;, &#x27;\u026a\u0279&#x27;: 20.1, b&#x27;\\xc9\\xaa\\xc9\\xb9&#x27;: 20.1, 20.1: &#x27;\u026a\u0279&#x27;, &#x27;\u026a\u0279\u0259&#x27;: 20.2, b&#x27;\\xc9\\xaa\\xc9\\xb9\\xc9\\x99&#x27;: 20.2, 20.2: &#x27;\u026a\u0279\u0259&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;i\u02d0&#x27;: 21.1, b&#x27;i\\xcb\\x90&#x27;: 21.1, 21.1: &#x27;i\u02d0&#x27;, &#x27;d\u0292&#x27;: 22, b&#x27;d\\xca\\x92&#x27;: 22, 22: &#x27;d\u0292&#x27;, &#x27;\u02a4&#x27;: 22, b&#x27;\\xca\\xa4&#x27;: 22, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;d\u026b&#x27;: 24.1, b&#x27;d\\xc9\\xab&#x27;: 24.1, 24.1: &#x27;d\u026b&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;\u014b&#x27;: 27, b&#x27;\\xc5\\x8b&#x27;: 27, 27: &#x27;\u014b&#x27;, &#x27;\u0259\u028a&#x27;: 28, b&#x27;\\xc9\\x99\\xca\\x8a&#x27;: 28, 28: &#x27;\u0259\u028a&#x27;, &#x27;o&#x27;: 28.1, b&#x27;o&#x27;: 28.1, 28.1: &#x27;o&#x27;, &#x27;o\u028a&#x27;: 28.2, b&#x27;o\\xca\\x8a&#x27;: 28.2, 28.2: &#x27;o\u028a&#x27;, &#x27;\u0259\u0289&#x27;: 3.1, b&#x27;\\xc9\\x99\\xca\\x89&#x27;: 3.1, 3.1: &#x27;\u0259\u0289&#x27;, &#x27;\u0254\u026a&#x27;: 30, b&#x27;\\xc9\\x94\\xc9\\xaa&#x27;: 30, 30: &#x27;\u0254\u026a&#x27;, &#x27;o\u026a&#x27;: 30.1, b&#x27;o\\xc9\\xaa&#x27;: 30.1, 30.1: &#x27;o\u026a&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;\u0279&#x27;: 32, b&#x27;\\xc9\\xb9&#x27;: 32, 32: &#x27;\u0279&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;\u0283&#x27;: 34, b&#x27;\\xca\\x83&#x27;: 34, 34: &#x27;\u0283&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;\u027e&#x27;: 35.1, b&#x27;\\xc9\\xbe&#x27;: 35.1, 35.1: &#x27;\u027e&#x27;, &#x27;\u03b8&#x27;: 36, b&#x27;\\xce\\xb8&#x27;: 36, 36: &#x27;\u03b8&#x27;, &#x27;\u028a\u0259&#x27;: 37, b&#x27;\\xca\\x8a\\xc9\\x99&#x27;: 37, 37: &#x27;\u028a\u0259&#x27;, &#x27;\u028a\u0279&#x27;: 37.1, b&#x27;\\xca\\x8a\\xc9\\xb9&#x27;: 37.1, 37.1: &#x27;\u028a\u0279&#x27;, &#x27;\u028a&#x27;: 37.2, b&#x27;\\xca\\x8a&#x27;: 37.2, 37.2: &#x27;\u028a&#x27;, &#x27;\u0289\u02d0&#x27;: 39, b&#x27;\\xca\\x89\\xcb\\x90&#x27;: 39, 39: &#x27;\u0289\u02d0&#x27;, &#x27;u\u02d0&#x27;: 39.1, b&#x27;u\\xcb\\x90&#x27;: 39.1, 39.1: &#x27;u\u02d0&#x27;, &#x27;u&#x27;: 39.2, b&#x27;u&#x27;: 39.2, 39.2: &#x27;u&#x27;, &#x27;\u0254\u02d0&#x27;: 40, b&#x27;\\xc9\\x94\\xcb\\x90&#x27;: 40, 40: &#x27;\u0254\u02d0&#x27;, 40.1: &#x27;\u0254&#x27;, &#x27;o\u02d0&#x27;: 40.2, b&#x27;o\\xcb\\x90&#x27;: 40.2, 40.2: &#x27;o\u02d0&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;\u028d&#x27;: 42.1, b&#x27;\\xca\\x8d&#x27;: 42.1, 42.1: &#x27;\u028d&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;\u0292&#x27;: 45, b&#x27;\\xca\\x92&#x27;: 45, 45: &#x27;\u0292&#x27;, &#x27;\u0294&#x27;: 46, b&#x27;\\xca\\x94&#x27;: 46, 46: &#x27;\u0294&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;As unicode-ipa but, when converting a user lexicon, generates Python code that reads Wenlin Yinghan dictionary entries and adds IPA bands to matching words&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;yinghan-ipa.py&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;Python script&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;#!/usr/bin/env python\\n# -*- coding: utf-8 -*-\\n# Works in both Python 2 and Python 3\\n\\nimport sys; d={&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;u&quot;%s&quot;:u&quot;%s&quot;,\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &quot;}\\nimport re\\ntry: i,o=sys.stdin.buffer,sys.stdout.buffer # Python 3\\nexcept AttributeError: i,o=sys.stdin,sys.stdout # Python 2\\nfor k in list(d.keys()): d[k.lower().encode(&#x27;utf-8&#x27;)]=d[k]\\nnextIsHead=False\\nfor l in i:\\n o.write(l)\\n if nextIsHead and l.strip():\\n  w=l.split()\\n  if w[0]==u&#x27;ehw&#x27;.encode(&#x27;utf-8&#x27;): l=u&#x27; &#x27;.encode(&#x27;utf-8&#x27;).join(w[1:])\\n  k = re.sub(u&#x27;\\\\\\\\([^)]*\\\\\\\\)$&#x27;.encode(&#x27;utf-8&#x27;),u&#x27;&#x27;.encode(&#x27;utf-8&#x27;),l.strip()).strip().lower()\\n  if k in d: o.write(u&#x27;ipa &#x27;.encode(&#x27;utf-8&#x27;)+d[k].encode(&#x27;utf-8&#x27;)+u&#x27;\\\\n&#x27;.encode(&#x27;utf-8&#x27;))\\n if l.startswith(u&#x27;*** &#x27;.encode(&#x27;utf-8&#x27;)): nextIsHead=True\\n&quot;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cvtOut_func&#x27;): &lt;function unicode_preprocess&gt;}, &#x27;unicode-rough&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, 47: &#x27;&#x27;, &#x27;\u02c8&#x27;: 47.1, b&#x27;\\xcb\\x88&#x27;: 47.1, 47.1: &quot;&#x27;&quot;, &#x27;\u02cc&#x27;: 47.2, b&#x27;\\xcb\\x8c&#x27;: 47.2, 47.2: &#x27;,&#x27;, &#x27;#&#x27;: 48, b&#x27;#&#x27;: 48, 48: &#x27;#&#x27;, &#x27;_&#x27;: 49, b&#x27;_&#x27;: 49, 49: &#x27;_&#x27;, &#x27;?&#x27;: 50, b&#x27;?&#x27;: 50, 50: &#x27;?&#x27;, &#x27;!&#x27;: 51, b&#x27;!&#x27;: 51, 51: &#x27;!&#x27;, &#x27;,&#x27;: 47.2, b&#x27;,&#x27;: 47.2, 52: &#x27;,&#x27;, &#x27;\u0251&#x27;: 1, b&#x27;\\xc9\\x91&#x27;: 1, 1: &#x27;ar-&#x27;, &#x27;\u02d0&#x27;: 53, b&#x27;\\xcb\\x90&#x27;: 53, 53: &#x27;:&#x27;, &#x27;\u0251\u02d0&#x27;: 1.2, b&#x27;\\xc9\\x91\\xcb\\x90&#x27;: 1.2, 1.2: &#x27;ar-&#x27;, &#x27;\u0251\u0279&#x27;: 1.3, b&#x27;\\xc9\\x91\\xc9\\xb9&#x27;: 1.3, 1.3: &#x27;ar-&#x27;, &#x27;a\u02d0&#x27;: 1.4, b&#x27;a\\xcb\\x90&#x27;: 1.4, 1.4: &#x27;a\u02d0&#x27;, &#x27;\u00e6&#x27;: 2, b&#x27;\\xc3\\xa6&#x27;: 2, 2: &#x27;\u00e6&#x27;, &#x27;a&#x27;: 2, b&#x27;a&#x27;: 2, &#x27;\u028c&#x27;: 3, b&#x27;\\xca\\x8c&#x27;: 3, 3: &#x27;uh&#x27;, &#x27;\u1d27&#x27;: 3, b&#x27;\\xe1\\xb4\\xa7&#x27;: 3, &#x27;\u0252&#x27;: 4, b&#x27;\\xc9\\x92&#x27;: 4, 4: &#x27;\u0252&#x27;, 4.1: &#x27;\u0251&#x27;, &#x27;\u0254&#x27;: 4.2, b&#x27;\\xc9\\x94&#x27;: 4.2, 4.2: &#x27;\u0254&#x27;, &#x27;a\u028a&#x27;: 5, b&#x27;a\\xca\\x8a&#x27;: 5, 5: &#x27;a\u028a&#x27;, &#x27;\u00e6\u0254&#x27;: 5.1, b&#x27;\\xc3\\xa6\\xc9\\x94&#x27;: 5.1, 5.1: &#x27;\u00e6\u0254&#x27;, &#x27;\u0259&#x27;: 6, b&#x27;\\xc9\\x99&#x27;: 6, 6: &#x27;\u0259&#x27;, &#x27;\u0259\u02d0&#x27;: 7, b&#x27;\\xc9\\x99\\xcb\\x90&#x27;: 7, 7: &#x27;\u0259:&#x27;, &#x27;\u025a&#x27;: 6.1, b&#x27;\\xc9\\x9a&#x27;: 6.1, 6.1: &#x27;\u025a&#x27;, &#x27;a\u026a&#x27;: 8, b&#x27;a\\xc9\\xaa&#x27;: 8, 8: &#x27;ai&#x27;, &#x27;\u028c\u026a&#x27;: 8, b&#x27;\\xca\\x8c\\xc9\\xaa&#x27;: 8, &#x27;\u0251e&#x27;: 8.1, b&#x27;\\xc9\\x91e&#x27;: 8.1, 8.1: &#x27;\u0251e&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;t\u0283&#x27;: 10, b&#x27;t\\xca\\x83&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;\u02a7&#x27;: 10, b&#x27;\\xca\\xa7&#x27;: 10, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;\u00f0&#x27;: 12, b&#x27;\\xc3\\xb0&#x27;: 12, 12: &#x27;\u00f0&#x27;, &#x27;\u025b&#x27;: 13, b&#x27;\\xc9\\x9b&#x27;: 13, 13: &#x27;e&#x27;, &#x27;e&#x27;: 13, b&#x27;e&#x27;: 13, 13.1: &#x27;e&#x27;, &#x27;\u025d&#x27;: 7.1, b&#x27;\\xc9\\x9d&#x27;: 7.1, 7.1: &#x27;3:&#x27;, &#x27;\u025c\u02d0&#x27;: 7.1, b&#x27;\\xc9\\x9c\\xcb\\x90&#x27;: 7.1, &#x27;\u025b\u0259&#x27;: 14, b&#x27;\\xc9\\x9b\\xc9\\x99&#x27;: 14, 14: &#x27;e:&#x27;, &#x27;\u025b\u0279&#x27;: 14.1, b&#x27;\\xc9\\x9b\\xc9\\xb9&#x27;: 14.1, 14.1: &#x27;e:&#x27;, &#x27;e\u02d0&#x27;: 14.2, b&#x27;e\\xcb\\x90&#x27;: 14.2, 14.2: &#x27;e:&#x27;, &#x27;\u025b\u02d0&#x27;: 14.3, b&#x27;\\xc9\\x9b\\xcb\\x90&#x27;: 14.3, 14.3: &#x27;e:&#x27;, &#x27;e\u0259&#x27;: 14.4, b&#x27;e\\xc9\\x99&#x27;: 14.4, 14.4: &#x27;e:&#x27;, &#x27;e\u026a&#x27;: 15, b&#x27;e\\xc9\\xaa&#x27;: 15, 15: &#x27;ei&#x27;, &#x27;\u00e6\u026a&#x27;: 15.1, b&#x27;\\xc3\\xa6\\xc9\\xaa&#x27;: 15.1, 15.1: &#x27;\u00e6i&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;\u0261&#x27;: 17, b&#x27;\\xc9\\xa1&#x27;: 17, 17: &#x27;g&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;\u026a&#x27;: 19, b&#x27;\\xc9\\xaa&#x27;: 19, 19: &#x27;i&#x27;, &#x27;\u0268&#x27;: 19.1, b&#x27;\\xc9\\xa8&#x27;: 19.1, 19.1: &#x27;i&#x27;, &#x27;\u026a\u0259&#x27;: 20, b&#x27;\\xc9\\xaa\\xc9\\x99&#x27;: 20, 20: &#x27;eeuh-&#x27;, &#x27;\u026a\u0279&#x27;: 20.1, b&#x27;\\xc9\\xaa\\xc9\\xb9&#x27;: 20.1, 20.1: &#x27;\u026a\u0279&#x27;, &#x27;\u026a\u0279\u0259&#x27;: 20.2, b&#x27;\\xc9\\xaa\\xc9\\xb9\\xc9\\x99&#x27;: 20.2, 20.2: &#x27;eeuh-&#x27;, &#x27;i&#x27;: 19, b&#x27;i&#x27;: 19, 21: &#x27;ee&#x27;, &#x27;i\u02d0&#x27;: 21.1, b&#x27;i\\xcb\\x90&#x27;: 21.1, 21.1: &#x27;ee&#x27;, &#x27;d\u0292&#x27;: 22, b&#x27;d\\xca\\x92&#x27;: 22, 22: &#x27;j&#x27;, &#x27;\u02a4&#x27;: 22, b&#x27;\\xca\\xa4&#x27;: 22, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;d\u026b&#x27;: 24.1, b&#x27;d\\xc9\\xab&#x27;: 24.1, 24.1: &#x27;d\u026b&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;\u014b&#x27;: 27, b&#x27;\\xc5\\x8b&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;\u0259\u028a&#x27;: 28, b&#x27;\\xc9\\x99\\xca\\x8a&#x27;: 28, 28: &#x27;o&#x27;, &#x27;o&#x27;: 28, b&#x27;o&#x27;: 28, 28.1: &#x27;o&#x27;, &#x27;o\u028a&#x27;: 28.2, b&#x27;o\\xca\\x8a&#x27;: 28.2, 28.2: &#x27;o&#x27;, &#x27;\u0259\u0289&#x27;: 3.1, b&#x27;\\xc9\\x99\\xca\\x89&#x27;: 3.1, 3.1: &#x27;o&#x27;, &#x27;\u0254\u026a&#x27;: 30, b&#x27;\\xc9\\x94\\xc9\\xaa&#x27;: 30, 30: &#x27;oy&#x27;, &#x27;o\u026a&#x27;: 30.1, b&#x27;o\\xc9\\xaa&#x27;: 30.1, 30.1: &#x27;oy&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;\u0279&#x27;: 32, b&#x27;\\xc9\\xb9&#x27;: 32, 32: &#x27;r&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;\u0283&#x27;: 34, b&#x27;\\xca\\x83&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;\u027e&#x27;: 35.1, b&#x27;\\xc9\\xbe&#x27;: 35.1, 35.1: &#x27;t&#x27;, &#x27;\u03b8&#x27;: 36, b&#x27;\\xce\\xb8&#x27;: 36, 36: &#x27;th&#x27;, &#x27;\u028a\u0259&#x27;: 37, b&#x27;\\xca\\x8a\\xc9\\x99&#x27;: 37, 37: &#x27;or&#x27;, &#x27;\u028a\u0279&#x27;: 37.1, b&#x27;\\xca\\x8a\\xc9\\xb9&#x27;: 37.1, 37.1: &#x27;or&#x27;, &#x27;\u028a&#x27;: 37.2, b&#x27;\\xca\\x8a&#x27;: 37.2, 37.2: &#x27;u&#x27;, &#x27;\u0289\u02d0&#x27;: 39, b&#x27;\\xca\\x89\\xcb\\x90&#x27;: 39, 39: &#x27;oo&#x27;, &#x27;u\u02d0&#x27;: 39.1, b&#x27;u\\xcb\\x90&#x27;: 39.1, 39.1: &#x27;oo&#x27;, &#x27;u&#x27;: 37.2, b&#x27;u&#x27;: 37.2, 39.2: &#x27;oo&#x27;, &#x27;\u0254\u02d0&#x27;: 40, b&#x27;\\xc9\\x94\\xcb\\x90&#x27;: 40, 40: &#x27;or&#x27;, 40.1: &#x27;or&#x27;, &#x27;o\u02d0&#x27;: 40.2, b&#x27;o\\xcb\\x90&#x27;: 40.2, 40.2: &#x27;or&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;\u028d&#x27;: 42.1, b&#x27;\\xca\\x8d&#x27;: 42.1, 42.1: &#x27;w&#x27;, &#x27;j&#x27;: 22, b&#x27;j&#x27;: 22, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;\u0292&#x27;: 45, b&#x27;\\xca\\x92&#x27;: 45, 45: &#x27;3&#x27;, &#x27;\u0294&#x27;: 46, b&#x27;\\xca\\x94&#x27;: 46, 46: &#x27;\u0294&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &quot;A non-standard notation that&#x27;s reminiscent of unicode-ipa but changed so that more of the characters show in old browsers with incomplete fonts&quot;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-ipa.html&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;HTML&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;mobileoptimized&quot; content=&quot;0&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;&lt;tr&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;%s&lt;/td&gt;&lt;/tr&gt;\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &#x27;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cvtOut_func&#x27;): None, &quot;&#x27;&quot;: 47.1, b&quot;&#x27;&quot;: 47.1, &#x27;ar-&#x27;: 1, b&#x27;ar-&#x27;: 1, &#x27;:&#x27;: 53, b&#x27;:&#x27;: 53, &#x27;uh&#x27;: 3, b&#x27;uh&#x27;: 3, &#x27;\u0259:&#x27;: 7, b&#x27;\\xc9\\x99:&#x27;: 7, &#x27;ai&#x27;: 8, b&#x27;ai&#x27;: 8, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, &#x27;3:&#x27;: 7.1, b&#x27;3:&#x27;: 7.1, &#x27;ei&#x27;: 15, b&#x27;ei&#x27;: 15, &#x27;\u00e6i&#x27;: 15.1, b&#x27;\\xc3\\xa6i&#x27;: 15.1, &#x27;eeuh-&#x27;: 20, b&#x27;eeuh-&#x27;: 20, &#x27;ee&#x27;: 21, b&#x27;ee&#x27;: 21, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, &#x27;oy&#x27;: 30, b&#x27;oy&#x27;: 30, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, &#x27;th&#x27;: 36, b&#x27;th&#x27;: 36, &#x27;or&#x27;: 37, b&#x27;or&#x27;: 37, &#x27;oo&#x27;: 39, b&#x27;oo&#x27;: 39, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, &#x27;3&#x27;: 45, b&#x27;3&#x27;: 45, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;-$&#x27;, &#x27;&#x27;)]}, &#x27;braille-ipa&#x27;: {&#x27;_B&#x27;: 47.1, b&#x27;_B&#x27;: 47.1, 47.1: &#x27;_B&#x27;, &#x27;_2&#x27;: 47.2, b&#x27;_2&#x27;: 47.2, 47.2: &#x27;_2&#x27;, &#x27;*&#x27;: 1, b&#x27;*&#x27;: 1, 1: &#x27;*&#x27;, &#x27;3&#x27;: 53, b&#x27;3&#x27;: 53, 53: &#x27;3&#x27;, &#x27;*3&#x27;: 1.2, b&#x27;*3&#x27;: 1.2, 1.2: &#x27;*3&#x27;, &#x27;*#&#x27;: 1.3, b&#x27;*#&#x27;: 1.3, 1.3: &#x27;*#&#x27;, &#x27;A3&#x27;: 1.4, b&#x27;A3&#x27;: 1.4, 1.4: &#x27;A3&#x27;, &#x27;%&#x27;: 2, b&#x27;%&#x27;: 2, 2: &#x27;%&#x27;, &#x27;A&#x27;: 2, b&#x27;A&#x27;: 2, &#x27;+&#x27;: 3, b&#x27;+&#x27;: 3, 3: &#x27;+&#x27;, &#x27;4*&#x27;: 4, b&#x27;4*&#x27;: 4, 4: &#x27;4*&#x27;, 4.1: &#x27;*&#x27;, &#x27;&lt;&#x27;: 4.2, b&#x27;&lt;&#x27;: 4.2, 4.2: &#x27;&lt;&#x27;, &#x27;A(&#x27;: 5, b&#x27;A(&#x27;: 5, 5: &#x27;A(&#x27;, &#x27;%&lt;&#x27;: 5.1, b&#x27;%&lt;&#x27;: 5.1, 5.1: &#x27;%&lt;&#x27;, &#x27;5&#x27;: 6, b&#x27;5&#x27;: 6, 6: &#x27;5&#x27;, &#x27;53&#x27;: 7, b&#x27;53&#x27;: 7, 7: &#x27;53&#x27;, &#x27;5&quot;R.&#x27;: 6.1, b&#x27;5&quot;R.&#x27;: 6.1, 6.1: &#x27;5&quot;R.&#x27;, &#x27;A/&#x27;: 8, b&#x27;A/&#x27;: 8, 8: &#x27;A/&#x27;, &#x27;*E&#x27;: 8.1, b&#x27;*E&#x27;: 8.1, 8.1: &#x27;*E&#x27;, &#x27;B&#x27;: 9, b&#x27;B&#x27;: 9, 9: &#x27;B&#x27;, &#x27;T:&#x27;: 10, b&#x27;T:&#x27;: 10, 10: &#x27;T:&#x27;, &#x27;T&quot;:.&#x27;: 10, b&#x27;T&quot;:.&#x27;: 10, &#x27;D&#x27;: 11, b&#x27;D&#x27;: 11, 11: &#x27;D&#x27;, &#x27;]&#x27;: 12, b&#x27;]&#x27;: 12, 12: &#x27;]&#x27;, &#x27;&gt;&#x27;: 13, b&#x27;&gt;&#x27;: 13, 13: &#x27;&gt;&#x27;, &#x27;E&#x27;: 13.1, b&#x27;E&#x27;: 13.1, 13.1: &#x27;E&#x27;, &#x27;4&gt;3&#x27;: 7.1, b&#x27;4&gt;3&#x27;: 7.1, 7.1: &#x27;4&gt;3&#x27;, &#x27;&gt;5&#x27;: 14, b&#x27;&gt;5&#x27;: 14, 14: &#x27;&gt;5&#x27;, &#x27;&gt;#&#x27;: 14.1, b&#x27;&gt;#&#x27;: 14.1, 14.1: &#x27;&gt;#&#x27;, &#x27;E3&#x27;: 14.2, b&#x27;E3&#x27;: 14.2, 14.2: &#x27;E3&#x27;, &#x27;&gt;3&#x27;: 14.3, b&#x27;&gt;3&#x27;: 14.3, 14.3: &#x27;&gt;3&#x27;, &#x27;E5&#x27;: 14.4, b&#x27;E5&#x27;: 14.4, 14.4: &#x27;E5&#x27;, &#x27;E/&#x27;: 15, b&#x27;E/&#x27;: 15, 15: &#x27;E/&#x27;, &#x27;%/&#x27;: 15.1, b&#x27;%/&#x27;: 15.1, 15.1: &#x27;%/&#x27;, &#x27;F&#x27;: 16, b&#x27;F&#x27;: 16, 16: &#x27;F&#x27;, &#x27;G&#x27;: 17, b&#x27;G&#x27;: 17, 17: &#x27;G&#x27;, &#x27;H&#x27;: 18, b&#x27;H&#x27;: 18, 18: &#x27;H&#x27;, &#x27;/&#x27;: 19, b&#x27;/&#x27;: 19, 19: &#x27;/&#x27;, &#x27;0I&#x27;: 19.1, b&#x27;0I&#x27;: 19.1, 19.1: &#x27;0I&#x27;, &#x27;/5&#x27;: 20, b&#x27;/5&#x27;: 20, 20: &#x27;/5&#x27;, &#x27;/#&#x27;: 20.1, b&#x27;/#&#x27;: 20.1, 20.1: &#x27;/#&#x27;, &#x27;/#5&#x27;: 20.2, b&#x27;/#5&#x27;: 20.2, 20.2: &#x27;/#5&#x27;, &#x27;I&#x27;: 21, b&#x27;I&#x27;: 21, 21: &#x27;I&#x27;, &#x27;I3&#x27;: 21.1, b&#x27;I3&#x27;: 21.1, 21.1: &#x27;I3&#x27;, &#x27;D!&#x27;: 22, b&#x27;D!&#x27;: 22, 22: &#x27;D!&#x27;, &#x27;K&#x27;: 23, b&#x27;K&#x27;: 23, 23: &#x27;K&#x27;, &#x27;X&#x27;: 23.1, b&#x27;X&#x27;: 23.1, 23.1: &#x27;X&#x27;, &#x27;L&#x27;: 24, b&#x27;L&#x27;: 24, 24: &#x27;L&#x27;, &#x27;D6L&#x27;: 24.1, b&#x27;D6L&#x27;: 24.1, 24.1: &#x27;D6L&#x27;, &#x27;M&#x27;: 25, b&#x27;M&#x27;: 25, 25: &#x27;M&#x27;, &#x27;N&#x27;: 26, b&#x27;N&#x27;: 26, 26: &#x27;N&#x27;, &#x27;$&#x27;: 27, b&#x27;$&#x27;: 27, 27: &#x27;$&#x27;, &#x27;5(&#x27;: 28, b&#x27;5(&#x27;: 28, 28: &#x27;5(&#x27;, &#x27;O&#x27;: 28.1, b&#x27;O&#x27;: 28.1, 28.1: &#x27;O&#x27;, &#x27;O(&#x27;: 28.2, b&#x27;O(&#x27;: 28.2, 28.2: &#x27;O(&#x27;, &#x27;50U&#x27;: 3.1, b&#x27;50U&#x27;: 3.1, 3.1: &#x27;50U&#x27;, &#x27;&lt;/&#x27;: 30, b&#x27;&lt;/&#x27;: 30, 30: &#x27;&lt;/&#x27;, &#x27;O/&#x27;: 30.1, b&#x27;O/&#x27;: 30.1, 30.1: &#x27;O/&#x27;, &#x27;P&#x27;: 31, b&#x27;P&#x27;: 31, 31: &#x27;P&#x27;, &#x27;#&#x27;: 32, b&#x27;#&#x27;: 32, 32: &#x27;#&#x27;, 32.1: &#x27;R&#x27;, &#x27;S&#x27;: 33, b&#x27;S&#x27;: 33, 33: &#x27;S&#x27;, &#x27;:&#x27;: 34, b&#x27;:&#x27;: 34, 34: &#x27;:&#x27;, &#x27;T&#x27;: 35, b&#x27;T&#x27;: 35, 35: &#x27;T&#x27;, &#x27;6R&#x27;: 35.1, b&#x27;6R&#x27;: 35.1, 35.1: &#x27;6R&#x27;, &#x27;.?&#x27;: 36, b&#x27;.?&#x27;: 36, 36: &#x27;.?&#x27;, &#x27;(5&#x27;: 37, b&#x27;(5&#x27;: 37, 37: &#x27;(5&#x27;, &#x27;(#&#x27;: 37.1, b&#x27;(#&#x27;: 37.1, 37.1: &#x27;(#&#x27;, &#x27;(&#x27;: 37.2, b&#x27;(&#x27;: 37.2, 37.2: &#x27;(&#x27;, &#x27;0U3&#x27;: 39, b&#x27;0U3&#x27;: 39, 39: &#x27;0U3&#x27;, &#x27;U3&#x27;: 39.1, b&#x27;U3&#x27;: 39.1, 39.1: &#x27;U3&#x27;, &#x27;U&#x27;: 39.2, b&#x27;U&#x27;: 39.2, 39.2: &#x27;U&#x27;, &#x27;&lt;3&#x27;: 40, b&#x27;&lt;3&#x27;: 40, 40: &#x27;&lt;3&#x27;, 40.1: &#x27;&lt;&#x27;, &#x27;O3&#x27;: 40.2, b&#x27;O3&#x27;: 40.2, 40.2: &#x27;O3&#x27;, &#x27;V&#x27;: 41, b&#x27;V&#x27;: 41, 41: &#x27;V&#x27;, &#x27;W&#x27;: 42, b&#x27;W&#x27;: 42, 42: &#x27;W&#x27;, &#x27;6W&#x27;: 42.1, b&#x27;6W&#x27;: 42.1, 42.1: &#x27;6W&#x27;, &#x27;J&#x27;: 43, b&#x27;J&#x27;: 43, 43: &#x27;J&#x27;, &#x27;Z&#x27;: 44, b&#x27;Z&#x27;: 44, 44: &#x27;Z&#x27;, &#x27;!&#x27;: 45, b&#x27;!&#x27;: 45, 45: &#x27;!&#x27;, &#x27;2&#x27;: 46, b&#x27;2&#x27;: 46, 46: &#x27;2&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;IPA symbols in Braille (2008 BANA standard).  By default Braille ASCII is output; if you prefer to see the Braille dots via Unicode, set the BRAILLE_UNICODE environment variable.&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-ipa.brl&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;document&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s = %s\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True, (&#x27;settings&#x27;, &#x27;cleanup_func&#x27;): &lt;function LexFormats.&lt;locals&gt;.&lt;lambda&gt;&gt;, (&#x27;settings&#x27;, &#x27;cvtOut_func&#x27;): &lt;function unicode_to_ascii_braille&gt;}, &#x27;latex-ipa&#x27;: {&#x27;.&#x27;: 47, b&#x27;.&#x27;: 47, &#x27;&quot;&#x27;: 47.1, b&#x27;&quot;&#x27;: 47.1, 47.1: &#x27;&quot;&#x27;, &#x27;\\\\textsecstress{}&#x27;: 47.2, b&#x27;\\\\textsecstress{}&#x27;: 47.2, 47.2: &#x27;\\\\textsecstress{}&#x27;, &#x27;\\\\#&#x27;: 48, b&#x27;\\\\#&#x27;: 48, 48: &#x27;\\\\#&#x27;, &#x27;\\\\_&#x27;: 49, b&#x27;\\\\_&#x27;: 49, 49: &#x27;\\\\_&#x27;, &#x27;?&#x27;: 50, b&#x27;?&#x27;: 50, 50: &#x27;?&#x27;, &#x27;!&#x27;: 51, b&#x27;!&#x27;: 51, 51: &#x27;!&#x27;, &#x27;,&#x27;: 52, b&#x27;,&#x27;: 52, 52: &#x27;,&#x27;, &#x27;A&#x27;: 1, b&#x27;A&#x27;: 1, 1: &#x27;A&#x27;, &#x27;:&#x27;: 53, b&#x27;:&#x27;: 53, 53: &#x27;:&#x27;, &#x27;A:&#x27;: 1.2, b&#x27;A:&#x27;: 1.2, 1.2: &#x27;A:&#x27;, &#x27;A\\\\textturnr{}&#x27;: 1.3, b&#x27;A\\\\textturnr{}&#x27;: 1.3, 1.3: &#x27;A\\\\textturnr{}&#x27;, &#x27;a:&#x27;: 1.4, b&#x27;a:&#x27;: 1.4, 1.4: &#x27;a:&#x27;, &#x27;\\\\ae{}&#x27;: 2, b&#x27;\\\\ae{}&#x27;: 2, 2: &#x27;\\\\ae{}&#x27;, &#x27;2&#x27;: 3, b&#x27;2&#x27;: 3, 3: &#x27;2&#x27;, &#x27;6&#x27;: 4, b&#x27;6&#x27;: 4, 4: &#x27;6&#x27;, 4.1: &#x27;A&#x27;, &#x27;O&#x27;: 4.2, b&#x27;O&#x27;: 4.2, 4.2: &#x27;O&#x27;, &#x27;aU&#x27;: 5, b&#x27;aU&#x27;: 5, 5: &#x27;aU&#x27;, &#x27;\\\\ae{}O&#x27;: 5.1, b&#x27;\\\\ae{}O&#x27;: 5.1, 5.1: &#x27;\\\\ae{}O&#x27;, &#x27;@&#x27;: 6, b&#x27;@&#x27;: 6, 6: &#x27;@&#x27;, &#x27;@:&#x27;: 7, b&#x27;@:&#x27;: 7, 7: &#x27;@:&#x27;, &#x27;\\\\textrhookschwa{}&#x27;: 6.1, b&#x27;\\\\textrhookschwa{}&#x27;: 6.1, 6.1: &#x27;\\\\textrhookschwa{}&#x27;, &#x27;aI&#x27;: 8, b&#x27;aI&#x27;: 8, 8: &#x27;aI&#x27;, &#x27;Ae&#x27;: 8.1, b&#x27;Ae&#x27;: 8.1, 8.1: &#x27;Ae&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;tS&#x27;: 10, b&#x27;tS&#x27;: 10, 10: &#x27;tS&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;D&#x27;: 12, b&#x27;D&#x27;: 12, 12: &#x27;D&#x27;, &#x27;E&#x27;: 13, b&#x27;E&#x27;: 13, 13: &#x27;E&#x27;, &#x27;e&#x27;: 13.1, b&#x27;e&#x27;: 13.1, 13.1: &#x27;e&#x27;, &#x27;3:&#x27;: 7.1, b&#x27;3:&#x27;: 7.1, 7.1: &#x27;3:&#x27;, &#x27;E@&#x27;: 14, b&#x27;E@&#x27;: 14, 14: &#x27;E@&#x27;, &#x27;E\\\\textturnr{}&#x27;: 14.1, b&#x27;E\\\\textturnr{}&#x27;: 14.1, 14.1: &#x27;E\\\\textturnr{}&#x27;, &#x27;e:&#x27;: 14.2, b&#x27;e:&#x27;: 14.2, 14.2: &#x27;e:&#x27;, &#x27;E:&#x27;: 14.3, b&#x27;E:&#x27;: 14.3, 14.3: &#x27;E:&#x27;, &#x27;e@&#x27;: 14.4, b&#x27;e@&#x27;: 14.4, 14.4: &#x27;e@&#x27;, &#x27;eI&#x27;: 15, b&#x27;eI&#x27;: 15, 15: &#x27;eI&#x27;, &#x27;\\\\ae{}I&#x27;: 15.1, b&#x27;\\\\ae{}I&#x27;: 15.1, 15.1: &#x27;\\\\ae{}I&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;I&#x27;: 19, b&#x27;I&#x27;: 19, 19: &#x27;I&#x27;, &#x27;1&#x27;: 19.1, b&#x27;1&#x27;: 19.1, 19.1: &#x27;1&#x27;, &#x27;I@&#x27;: 20, b&#x27;I@&#x27;: 20, 20: &#x27;I@&#x27;, &#x27;I\\\\textturnr{}&#x27;: 20.1, b&#x27;I\\\\textturnr{}&#x27;: 20.1, 20.1: &#x27;I\\\\textturnr{}&#x27;, &#x27;I@\\\\textturnr{}&#x27;: 20.2, b&#x27;I@\\\\textturnr{}&#x27;: 20.2, 20.2: &#x27;I@\\\\textturnr{}&#x27;, &#x27;i&#x27;: 21, b&#x27;i&#x27;: 21, 21: &#x27;i&#x27;, &#x27;i:&#x27;: 21.1, b&#x27;i:&#x27;: 21.1, 21.1: &#x27;i:&#x27;, &#x27;dZ&#x27;: 22, b&#x27;dZ&#x27;: 22, 22: &#x27;dZ&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;x&#x27;: 23.1, b&#x27;x&#x27;: 23.1, 23.1: &#x27;x&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;d\\\\textltilde{}&#x27;: 24.1, b&#x27;d\\\\textltilde{}&#x27;: 24.1, 24.1: &#x27;d\\\\textltilde{}&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;N&#x27;: 27, b&#x27;N&#x27;: 27, 27: &#x27;N&#x27;, &#x27;@U&#x27;: 28, b&#x27;@U&#x27;: 28, 28: &#x27;@U&#x27;, &#x27;o&#x27;: 28.1, b&#x27;o&#x27;: 28.1, 28.1: &#x27;o&#x27;, &#x27;oU&#x27;: 28.2, b&#x27;oU&#x27;: 28.2, 28.2: &#x27;oU&#x27;, &#x27;@0&#x27;: 3.1, b&#x27;@0&#x27;: 3.1, 3.1: &#x27;@0&#x27;, &#x27;OI&#x27;: 30, b&#x27;OI&#x27;: 30, 30: &#x27;OI&#x27;, &#x27;oI&#x27;: 30.1, b&#x27;oI&#x27;: 30.1, 30.1: &#x27;oI&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;\\\\textturnr{}&#x27;: 32, b&#x27;\\\\textturnr{}&#x27;: 32, 32: &#x27;\\\\textturnr{}&#x27;, 32.1: &#x27;r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;S&#x27;: 34, b&#x27;S&#x27;: 34, 34: &#x27;S&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;R&#x27;: 35.1, b&#x27;R&#x27;: 35.1, 35.1: &#x27;R&#x27;, &#x27;T&#x27;: 36, b&#x27;T&#x27;: 36, 36: &#x27;T&#x27;, &#x27;U@&#x27;: 37, b&#x27;U@&#x27;: 37, 37: &#x27;U@&#x27;, &#x27;U\\\\textturnr{}&#x27;: 37.1, b&#x27;U\\\\textturnr{}&#x27;: 37.1, 37.1: &#x27;U\\\\textturnr{}&#x27;, &#x27;U&#x27;: 37.2, b&#x27;U&#x27;: 37.2, 37.2: &#x27;U&#x27;, &#x27;0:&#x27;: 39, b&#x27;0:&#x27;: 39, 39: &#x27;0:&#x27;, &#x27;u:&#x27;: 39.1, b&#x27;u:&#x27;: 39.1, 39.1: &#x27;u:&#x27;, &#x27;u&#x27;: 39.2, b&#x27;u&#x27;: 39.2, 39.2: &#x27;u&#x27;, &#x27;O:&#x27;: 40, b&#x27;O:&#x27;: 40, 40: &#x27;O:&#x27;, 40.1: &#x27;O&#x27;, &#x27;o:&#x27;: 40.2, b&#x27;o:&#x27;: 40.2, 40.2: &#x27;o:&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;\\\\textturnw{}&#x27;: 42.1, b&#x27;\\\\textturnw{}&#x27;: 42.1, 42.1: &#x27;\\\\textturnw{}&#x27;, &#x27;j&#x27;: 43, b&#x27;j&#x27;: 43, 43: &#x27;j&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;Z&#x27;: 45, b&#x27;Z&#x27;: 45, 45: &#x27;Z&#x27;, &#x27;P&#x27;: 46, b&#x27;P&#x27;: 46, 46: &#x27;P&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;IPA symbols for typesetting in LaTeX using the &quot;tipa&quot; package&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-ipa.tex&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;document&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;\\\\documentclass[12pt,a4paper]{article} \\\\usepackage[safe]{tipa} \\\\usepackage{longtable} \\\\begin{document} \\\\begin{longtable}{ll}&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s &amp; \\\\textipa{%s}\\\\\\\\\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_footer&#x27;): &#x27;\\\\end{longtable}\\\\end{document}\\n&#x27;, (&#x27;settings&#x27;, &#x27;inline_format&#x27;): &#x27;\\\\textipa{%s}&#x27;, (&#x27;settings&#x27;, &#x27;inline_oneoff_header&#x27;): &#x27;% In preamble, put \\\\usepackage[safe]{tipa}\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;clause_separator&#x27;): &#x27;\\\\\\\\\\n&#x27;, (&#x27;settings&#x27;, &#x27;stress_comes_before_vowel&#x27;): True, (&#x27;settings&#x27;, &#x27;safe_to_drop_characters&#x27;): True}, &#x27;pinyin-approx&#x27;: {&#x27;4&#x27;: 47.1, b&#x27;4&#x27;: 47.1, 47.1: &#x27;4&#x27;, &#x27;2&#x27;: 47.2, b&#x27;2&#x27;: 47.2, 47.2: &#x27;2&#x27;, &#x27;a5&#x27;: 1, b&#x27;a5&#x27;: 1, 1: &#x27;a5&#x27;, &#x27;ya5&#x27;: 2, b&#x27;ya5&#x27;: 2, 2: &#x27;ya5&#x27;, &#x27;e5&#x27;: 3, b&#x27;e5&#x27;: 3, 3: &#x27;e5&#x27;, &#x27;yo5&#x27;: 4, b&#x27;yo5&#x27;: 4, 4: &#x27;yo5&#x27;, &#x27;ao5&#x27;: 5, b&#x27;ao5&#x27;: 5, 5: &#x27;ao5&#x27;, 7: &#x27;e5&#x27;, &#x27;ai5&#x27;: 8, b&#x27;ai5&#x27;: 8, 8: &#x27;ai5&#x27;, &#x27;bu0&#x27;: 9, b&#x27;bu0&#x27;: 9, 9: &#x27;bu0&#x27;, &#x27;che0&#x27;: 10, b&#x27;che0&#x27;: 10, 10: &#x27;che0&#x27;, &#x27;de0&#x27;: 11, b&#x27;de0&#x27;: 11, 11: &#x27;de0&#x27;, &#x27;ze0&#x27;: 12, b&#x27;ze0&#x27;: 12, 12: &#x27;ze0&#x27;, &#x27;ye5&#x27;: 13, b&#x27;ye5&#x27;: 13, 13: &#x27;ye5&#x27;, 14: &#x27;ye5&#x27;, &#x27;ei5&#x27;: 15, b&#x27;ei5&#x27;: 15, 15: &#x27;ei5&#x27;, &#x27;fu0&#x27;: 16, b&#x27;fu0&#x27;: 16, 16: &#x27;fu0&#x27;, &#x27;ge0&#x27;: 17, b&#x27;ge0&#x27;: 17, 17: &#x27;ge0&#x27;, &#x27;he0&#x27;: 18, b&#x27;he0&#x27;: 18, 18: &#x27;he0&#x27;, &#x27;yi5&#x27;: 19, b&#x27;yi5&#x27;: 19, 19: &#x27;yi5&#x27;, &#x27;yi3re5&#x27;: 20, b&#x27;yi3re5&#x27;: 20, 20: &#x27;yi3re5&#x27;, 21: &#x27;yi5&#x27;, &#x27;zhe0&#x27;: 22, b&#x27;zhe0&#x27;: 22, 22: &#x27;zhe0&#x27;, &#x27;ke0&#x27;: 23, b&#x27;ke0&#x27;: 23, 23: &#x27;ke0&#x27;, &#x27;le0&#x27;: 24, b&#x27;le0&#x27;: 24, 24: &#x27;le0&#x27;, &#x27;me0&#x27;: 25, b&#x27;me0&#x27;: 25, 25: &#x27;me0&#x27;, &#x27;ne0&#x27;: 26, b&#x27;ne0&#x27;: 26, 26: &#x27;ne0&#x27;, &#x27;eng0&#x27;: 27, b&#x27;eng0&#x27;: 27, 27: &#x27;eng0&#x27;, &#x27;ou5&#x27;: 28, b&#x27;ou5&#x27;: 28, 28: &#x27;ou5&#x27;, &#x27;ruo2yi5&#x27;: 30, b&#x27;ruo2yi5&#x27;: 30, 30: &#x27;ruo2yi5&#x27;, &#x27;pu0&#x27;: 31, b&#x27;pu0&#x27;: 31, 31: &#x27;pu0&#x27;, &#x27;re0&#x27;: 32, b&#x27;re0&#x27;: 32, 32: &#x27;re0&#x27;, &#x27;se0&#x27;: 33, b&#x27;se0&#x27;: 33, 33: &#x27;se0&#x27;, &#x27;she0&#x27;: 34, b&#x27;she0&#x27;: 34, 34: &#x27;she0&#x27;, &#x27;te0&#x27;: 35, b&#x27;te0&#x27;: 35, 35: &#x27;te0&#x27;, 36: &#x27;zhe0&#x27;, 37: &#x27;wu5&#x27;, &#x27;yu5&#x27;: 39, b&#x27;yu5&#x27;: 39, 39: &#x27;yu5&#x27;, &#x27;huo5&#x27;: 40, b&#x27;huo5&#x27;: 40, 40: &#x27;huo5&#x27;, 41: &#x27;fu0&#x27;, &#x27;wu0&#x27;: 42, b&#x27;wu0&#x27;: 42, 42: &#x27;wu0&#x27;, &#x27;yu0&#x27;: 43, b&#x27;yu0&#x27;: 43, 43: &#x27;yu0&#x27;, 44: &#x27;ze0&#x27;, 45: &#x27;zhe0&#x27;, 6: &#x27;e5&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Rough approximation using roughly the spelling rules of Chinese Pinyin (for getting Chinese-only voices to speak some English words - works with some words better than others)&#x27;, (&#x27;settings&#x27;, &#x27;approximate_missing&#x27;): True, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-pinyin-approx.txt&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;text&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;Pinyin approxmations (very approximate!)\\n----------------------------------------\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s ~= %s\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;te0ye&#x27;, &#x27;tie&#x27;), (&#x27;e0e5&#x27;, &#x27;e5&#x27;), (&#x27;([^aeiou][uo])0e(5)&#x27;, &#x27;\\\\1\\\\2&#x27;), (&#x27;yu0y&#x27;, &#x27;y&#x27;), (&#x27;wu0yo5&#x27;, &#x27;wo5&#x27;), (&#x27;([bdfghklmnpwz])[euo]0ei&#x27;, &#x27;\\\\1ei&#x27;), (&#x27;([bdghklmnpstwz])[euo]0ai&#x27;, &#x27;\\\\1ai&#x27;), (&#x27;([ghklmnpstyz])[euo]0ya&#x27;, &#x27;\\\\1a&#x27;), (&#x27;([ghklmnpstz])a([0-5]*)ne0&#x27;, &#x27;\\\\1an\\\\2&#x27;), (&#x27;([bdfghklmnpstwyz])[euo]0a([1-5])&#x27;, &#x27;\\\\1a\\\\2&#x27;), (&#x27;([bdjlmnpt])[euo]0yi&#x27;, &#x27;\\\\1i&#x27;), (&#x27;([bjlmnp])i([1-5]*)ne0&#x27;, &#x27;\\\\1in\\\\2&#x27;), (&#x27;([zs])he0ei&#x27;, &#x27;\\\\1hei&#x27;), (&#x27;([dfghklmnprstyz])[euo]0ou&#x27;, &#x27;\\\\1ou&#x27;), (&#x27;([dghklnrst])[euo]0huo&#x27;, &#x27;\\\\1uo&#x27;), (&#x27;([bfpm])[euo]0huo&#x27;, &#x27;\\\\1o&#x27;), (&#x27;([bdghklmnprstyz])[euo]0ao&#x27;, &#x27;\\\\1ao&#x27;), (&#x27;([zcs])h[eu]0ao&#x27;, &#x27;\\\\1hao&#x27;), (&#x27;re0r&#x27;, &#x27;r&#x27;), (&#x27;zhe0ne0&#x27;, &#x27;zhun5&#x27;), (&#x27;54&#x27;, &#x27;4&#x27;), (&#x27;52&#x27;, &#x27;2&#x27;), (&#x27;([bdjlmnpty])i([1-9])eng0&#x27;, &#x27;\\\\1ing\\\\2&#x27;), (&#x27;ya([1-9])eng0&#x27;, &#x27;yang\\\\1&#x27;), (&#x27;ya([1-9])ne0&#x27;, &#x27;an\\\\1&#x27;), (&#x27;ye([1-9])ne0&#x27;, &#x27;yan\\\\1&#x27;), (&#x27;([wr])[eu]0yan&#x27;, &#x27;\\\\1en&#x27;), (&#x27;yi([1-9])ne0&#x27;, &#x27;yin\\\\1&#x27;), (&#x27;yu0&#x27;, &#x27;yu5&#x27;), (&#x27;eng0&#x27;, &#x27;eng5&#x27;), (&#x27;0&#x27;, &#x27;5&#x27;)]}, &#x27;kana-approx&#x27;: {&#x27;\u30fc&#x27;: 47.1, b&#x27;\\xe3\\x83\\xbc&#x27;: 47.1, 47.1: &#x27;\u30fc&#x27;, 47.2: &#x27;&#x27;, &#x27;\u3042&#x27;: 2, b&#x27;\\xe3\\x81\\x82&#x27;: 2, 2: &#x27;\u3042&#x27;, &#x27;\u3044&#x27;: 21, b&#x27;\\xe3\\x81\\x84&#x27;: 21, 21: &#x27;\u3044&#x27;, &#x27;\u3046&#x27;: 39, b&#x27;\\xe3\\x81\\x86&#x27;: 39, 39: &#x27;\u3046&#x27;, &#x27;\u3048&#x27;: 13, b&#x27;\\xe3\\x81\\x88&#x27;: 13, 13: &#x27;\u3048&#x27;, &#x27;\u304a&#x27;: 4, b&#x27;\\xe3\\x81\\x8a&#x27;: 4, 4: &#x27;\u304a&#x27;, &#x27;\u3042\u3044&#x27;: 8, b&#x27;\\xe3\\x81\\x82\\xe3\\x81\\x84&#x27;: 8, 8: &#x27;\u3042\u3044&#x27;, &#x27;\u3042\u304a&#x27;: 5, b&#x27;\\xe3\\x81\\x82\\xe3\\x81\\x8a&#x27;: 5, 5: &#x27;\u3042\u304a&#x27;, &#x27;\u3048\u3044&#x27;: 15, b&#x27;\\xe3\\x81\\x88\\xe3\\x81\\x84&#x27;: 15, 15: &#x27;\u3048\u3044&#x27;, &#x27;\u304a\u3044&#x27;: 30, b&#x27;\\xe3\\x81\\x8a\\xe3\\x81\\x84&#x27;: 30, 30: &#x27;\u304a\u3044&#x27;, &#x27;\u304a\u3046&#x27;: 28, b&#x27;\\xe3\\x81\\x8a\\xe3\\x81\\x86&#x27;: 28, 28: &#x27;\u304a\u3046&#x27;, 1: &#x27;\u3042&#x27;, 6: &#x27;\u3046\u304a&#x27;, 7: &#x27;\u3042&#x27;, 19: &#x27;\u3044&#x27;, 3: &#x27;\u3046&#x27;, 7.1: &#x27;\u3048&#x27;, 20: &#x27;\u3044\u304a&#x27;, 14: &#x27;\u3048&#x27;, 37: &#x27;\u304a&#x27;, 40: &#x27;\u304a\u30fc&#x27;, &#x27;\u304a\u30fc&#x27;: 40, &#x27;\u3076&#x27;: 9, b&#x27;\\xe3\\x81\\xb6&#x27;: 9, 9: &#x27;\u3076&#x27;, &#x27;\u3061\u3047&#x27;: 10, b&#x27;\\xe3\\x81\\xa1\\xe3\\x81\\x87&#x27;: 10, 10: &#x27;\u3061\u3047&#x27;, &#x27;\u3065&#x27;: 11, b&#x27;\\xe3\\x81\\xa5&#x27;: 11, 11: &#x27;\u3065&#x27;, &#x27;\u3066\u3085&#x27;: 36, b&#x27;\\xe3\\x81\\xa6\\xe3\\x82\\x85&#x27;: 36, 36: &#x27;\u3066\u3085&#x27;, 12: &#x27;\u3066\u3085&#x27;, &#x27;\u3075&#x27;: 16, b&#x27;\\xe3\\x81\\xb5&#x27;: 16, 16: &#x27;\u3075&#x27;, &#x27;\u3050&#x27;: 17, b&#x27;\\xe3\\x81\\x90&#x27;: 17, 17: &#x27;\u3050&#x27;, &#x27;\u306f&#x27;: 18, b&#x27;\\xe3\\x81\\xaf&#x27;: 18, 18: &#x27;\u306f&#x27;, &#x27;\u3058\u3085&#x27;: 22, b&#x27;\\xe3\\x81\\x98\\xe3\\x82\\x85&#x27;: 22, 22: &#x27;\u3058\u3085&#x27;, 45: &#x27;\u3058\u3085&#x27;, &#x27;\u304f&#x27;: 23, b&#x27;\\xe3\\x81\\x8f&#x27;: 23, 23: &#x27;\u304f&#x27;, &#x27;\u308b&#x27;: 24, b&#x27;\\xe3\\x82\\x8b&#x27;: 24, 24: &#x27;\u308b&#x27;, 32: &#x27;\u308b&#x27;, &#x27;\u3080&#x27;: 25, b&#x27;\\xe3\\x82\\x80&#x27;: 25, 25: &#x27;\u3080&#x27;, &#x27;\u306c&#x27;: 26, b&#x27;\\xe3\\x81\\xac&#x27;: 26, 26: &#x27;\u306c&#x27;, &#x27;\u3093\u3050&#x27;: 27, b&#x27;\\xe3\\x82\\x93\\xe3\\x81\\x90&#x27;: 27, 27: &#x27;\u3093\u3050&#x27;, &#x27;\u3077&#x27;: 31, b&#x27;\\xe3\\x81\\xb7&#x27;: 31, 31: &#x27;\u3077&#x27;, &#x27;\u3059&#x27;: 33, b&#x27;\\xe3\\x81\\x99&#x27;: 33, 33: &#x27;\u3059&#x27;, &#x27;\u3057\u3085&#x27;: 34, b&#x27;\\xe3\\x81\\x97\\xe3\\x82\\x85&#x27;: 34, 34: &#x27;\u3057\u3085&#x27;, &#x27;\u3064&#x27;: 35, b&#x27;\\xe3\\x81\\xa4&#x27;: 35, 35: &#x27;\u3064&#x27;, &#x27;\u308f&#x27;: 42, b&#x27;\\xe3\\x82\\x8f&#x27;: 42, 42: &#x27;\u308f&#x27;, 41: &#x27;\u3094&#x27;, &#x27;\u3086&#x27;: 43, b&#x27;\\xe3\\x82\\x86&#x27;: 43, 43: &#x27;\u3086&#x27;, &#x27;\u305a&#x27;: 44, b&#x27;\\xe3\\x81\\x9a&#x27;: 44, 44: &#x27;\u305a&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Rough approximation using kana (for getting Japanese computer voices to speak some English words - works with some words better than others).  Set KANA_TYPE environment variable to hiragana or katakana (which can affect the sounds of some voices); default is hiragana&#x27;, (&#x27;settings&#x27;, &#x27;lex_filename&#x27;): &#x27;words-kana-approx.txt&#x27;, (&#x27;settings&#x27;, &#x27;lex_type&#x27;): &#x27;text&#x27;, (&#x27;settings&#x27;, &#x27;lex_header&#x27;): &#x27;Kana approxmations (very approximate!)\\n--------------------------------------\\n&#x27;, (&#x27;settings&#x27;, &#x27;lex_entry_format&#x27;): &#x27;%s ~= %s\\n&#x27;, (&#x27;settings&#x27;, &#x27;word_separator&#x27;): &#x27; &#x27;, (&#x27;settings&#x27;, &#x27;phoneme_separator&#x27;): &#x27;&#x27;, (&#x27;settings&#x27;, &#x27;clause_separator&#x27;): b&#x27;\\xe3\\x80\\x82\\n&#x27;, (&#x27;settings&#x27;, &#x27;cleanup_regexps&#x27;): [(&#x27;\u306c$&#x27;, &#x27;\u3093\u30fc&#x27;), (&#x27;\u3076\u3042&#x27;, &#x27;\u3070&#x27;), (&#x27;\u3076\u3044&#x27;, &#x27;\u3073&#x27;), (&#x27;\u3076\u3048&#x27;, &#x27;\u3079&#x27;), (&#x27;\u3076\u304a&#x27;, &#x27;\u307c&#x27;), (&#x27;\u3076\u3046&#x27;, &#x27;\u3076&#x27;), (&#x27;\u3061\u3085\u3042&#x27;, &#x27;\u3061\u3083&#x27;), (&#x27;\u3061\u3085\u3046&#x27;, &#x27;\u3061\u3085&#x27;), (&#x27;\u3061\u3085\u3048&#x27;, &#x27;\u3061\u3047&#x27;), (&#x27;\u3061\u3085\u304a&#x27;, &#x27;\u3061\u3087&#x27;), (&#x27;\u3061\u3085\u3044&#x27;, &#x27;\u3061&#x27;), (&#x27;\u3065\u3042&#x27;, &#x27;\u3060&#x27;), (&#x27;\u3065\u3044&#x27;, &#x27;\u3062&#x27;), (&#x27;\u3065\u3048&#x27;, &#x27;\u3067&#x27;), (&#x27;\u3065\u304a&#x27;, &#x27;\u3069&#x27;), (&#x27;\u3065\u3046&#x27;, &#x27;\u3065&#x27;), (&#x27;\u3066\u3085\u3042&#x27;, &#x27;\u3066\u3083&#x27;), (&#x27;\u3066\u3085\u3044&#x27;, &#x27;\u3066\u3043&#x27;), (&#x27;\u3066\u3043\u3046&#x27;, &#x27;\u3066\u3085&#x27;), (&#x27;\u3066\u3085\u3048&#x27;, &#x27;\u3066\u3047&#x27;), (&#x27;\u3066\u3085\u304a&#x27;, &#x27;\u3066\u3087&#x27;), (&#x27;\u3075\u3042&#x27;, &#x27;\u3075\u3041&#x27;), (&#x27;\u3075\u3044&#x27;, &#x27;\u3075\u3043&#x27;), (&#x27;\u3075\u3048&#x27;, &#x27;\u3075\u3047&#x27;), (&#x27;\u3075\u304a&#x27;, &#x27;\u3075\u3049&#x27;), (&#x27;\u3075\u3046&#x27;, &#x27;\u3075&#x27;), (&#x27;\u306f\u3044&#x27;, &#x27;\u3072&#x27;), (&#x27;\u306f\u3046&#x27;, &#x27;\u3075&#x27;), (&#x27;\u306f\u3048&#x27;, &#x27;\u3078&#x27;), (&#x27;\u306f\u304a&#x27;, &#x27;\u307b&#x27;), (&#x27;\u306f\u3042&#x27;, &#x27;\u306f&#x27;), (&#x27;\u3050\u3042&#x27;, &#x27;\u304c&#x27;), (&#x27;\u3050\u3044&#x27;, &#x27;\u304e&#x27;), (&#x27;\u3050\u3048&#x27;, &#x27;\u3052&#x27;), (&#x27;\u3050\u304a&#x27;, &#x27;\u3054&#x27;), (&#x27;\u3050\u3046&#x27;, &#x27;\u3050&#x27;), (&#x27;\u3058\u3085\u3042&#x27;, &#x27;\u3058\u3083&#x27;), (&#x27;\u3058\u3085\u3046&#x27;, &#x27;\u3058\u3085&#x27;), (&#x27;\u3058\u3085\u3048&#x27;, &#x27;\u3058\u3047&#x27;), (&#x27;\u3058\u3085\u304a&#x27;, &#x27;\u3058\u3087&#x27;), (&#x27;\u3058\u3085\u304a&#x27;, &#x27;\u3058&#x27;), (&#x27;\u304f\u3042&#x27;, &#x27;\u304b&#x27;), (&#x27;\u304f\u3044&#x27;, &#x27;\u304d&#x27;), (&#x27;\u304f\u3048&#x27;, &#x27;\u3051&#x27;), (&#x27;\u304f\u304a&#x27;, &#x27;\u3053&#x27;), (&#x27;\u304f\u3046&#x27;, &#x27;\u304f&#x27;), (&#x27;\u308b\u3042&#x27;, &#x27;\u3089&#x27;), (&#x27;\u308b\u3044&#x27;, &#x27;\u308a&#x27;), (&#x27;\u308b\u3048&#x27;, &#x27;\u308c&#x27;), (&#x27;\u308b\u304a&#x27;, &#x27;\u308d&#x27;), (&#x27;\u308b\u3046&#x27;, &#x27;\u308b&#x27;), (&#x27;\u3080\u3042&#x27;, &#x27;\u307e&#x27;), (&#x27;\u3080\u3044&#x27;, &#x27;\u307f&#x27;), (&#x27;\u3080\u3048&#x27;, &#x27;\u3081&#x27;), (&#x27;\u3080\u304a&#x27;, &#x27;\u3082&#x27;), (&#x27;\u3080\u3046&#x27;, &#x27;\u3080&#x27;), (&#x27;\u306c\u3042&#x27;, &#x27;\u306a&#x27;), (&#x27;\u306c\u3044&#x27;, &#x27;\u306b&#x27;), (&#x27;\u306c\u3048&#x27;, &#x27;\u306d&#x27;), (&#x27;\u306c\u304a&#x27;, &#x27;\u306e&#x27;), (&#x27;\u306c\u3046&#x27;, &#x27;\u306c&#x27;), (&#x27;\u3077\u3042&#x27;, &#x27;\u3071&#x27;), (&#x27;\u3077\u3044&#x27;, &#x27;\u3074&#x27;), (&#x27;\u3077\u3048&#x27;, &#x27;\u307a&#x27;), (&#x27;\u3077\u304a&#x27;, &#x27;\u307d&#x27;), (&#x27;\u3077\u3046&#x27;, &#x27;\u3077&#x27;), (&#x27;\u3059\u3042&#x27;, &#x27;\u3055&#x27;), (&#x27;\u3059\u3048&#x27;, &#x27;\u305b&#x27;), (&#x27;\u3059\u304a&#x27;, &#x27;\u305d&#x27;), (&#x27;\u3059\u3046&#x27;, &#x27;\u3059&#x27;), (&#x27;\u3057\u3085\u3042&#x27;, &#x27;\u3057\u3083&#x27;), (&#x27;\u3057\u3085\u3046&#x27;, &#x27;\u3057\u3085&#x27;), (&#x27;\u3057\u3085\u3048&#x27;, &#x27;\u3057\u3047&#x27;), (&#x27;\u3057\u3085\u304a&#x27;, &#x27;\u3057\u3087&#x27;), (&#x27;\u3057\u3085\u3044&#x27;, &#x27;\u3057&#x27;), (&#x27;\u3064\u3042&#x27;, &#x27;\u305f&#x27;), (&#x27;\u3064\u3044&#x27;, &#x27;\u3061&#x27;), (&#x27;\u3064\u3048&#x27;, &#x27;\u3066&#x27;), (&#x27;\u3064\u304a&#x27;, &#x27;\u3068&#x27;), (&#x27;\u3064\u3046&#x27;, &#x27;\u3064&#x27;), (&#x27;\u3086\u3042&#x27;, &#x27;\u3084&#x27;), (&#x27;\u3086\u3048&#x27;, &#x27;\u3044\u3047&#x27;), (&#x27;\u3086\u304a&#x27;, &#x27;\u3088&#x27;), (&#x27;\u3086\u3046&#x27;, &#x27;\u3086&#x27;), (&#x27;\u305a\u3042&#x27;, &#x27;\u3056&#x27;), (&#x27;\u305a\u3044&#x27;, &#x27;\u3058&#x27;), (&#x27;\u305a\u3048&#x27;, &#x27;\u305c&#x27;), (&#x27;\u305a\u304a&#x27;, &#x27;\u305e&#x27;), (&#x27;\u305a\u3046&#x27;, &#x27;\u305a&#x27;), (&#x27;\u308f\u3044&#x27;, &#x27;\u3046\u3043&#x27;), (&#x27;\u308f\u3046&#x27;, &#x27;\u3046&#x27;), (&#x27;\u308f\u3048&#x27;, &#x27;\u3046\u3047&#x27;), (&#x27;\u308f\u304a&#x27;, &#x27;\u3092&#x27;), (&#x27;\u308f\u3042&#x27;, &#x27;\u308f&#x27;), (&#x27;\u3046\u3043\u3066\u3085&#x27;, &#x27;\u3046\u3043\u3065&#x27;), (&#x27;\u3085\u3046&#x27;, &#x27;\u3085&#x27;), (&#x27;\u3050\u3050&#x27;, &#x27;\u3050&#x27;), (&#x27;\u30fc\u30fc+&#x27;, &#x27;\u30fc&#x27;), (&#x27;^(.)$&#x27;, &#x27;\\\\1\u30fc&#x27;), (&#x27;^([\u3042\u3070\u3060\u304c\u304b\u3089\u307e\u306a\u3071\u3055\u305f\u3084\u3056\u308f]\u3044)$&#x27;, &#x27;\\\\1\u30fc&#x27;)], (&#x27;settings&#x27;, &#x27;cleanup_func&#x27;): &lt;function hiragana_to_katakana&gt;}, &#x27;names&#x27;: {&#x27;a_as_in_ah&#x27;: 1, b&#x27;a_as_in_ah&#x27;: 1, 1: &#x27;a_as_in_ah&#x27;, &#x27;var1_a_as_in_ah&#x27;: 1.1, b&#x27;var1_a_as_in_ah&#x27;: 1.1, 1.1: &#x27;var1_a_as_in_ah&#x27;, &#x27;var3_a_as_in_ah&#x27;: 1.2, b&#x27;var3_a_as_in_ah&#x27;: 1.2, 1.2: &#x27;var3_a_as_in_ah&#x27;, &#x27;var4_a_as_in_ah&#x27;: 1.3, b&#x27;var4_a_as_in_ah&#x27;: 1.3, 1.3: &#x27;var4_a_as_in_ah&#x27;, &#x27;var5_a_as_in_ah&#x27;: 1.4, b&#x27;var5_a_as_in_ah&#x27;: 1.4, 1.4: &#x27;var5_a_as_in_ah&#x27;, &#x27;a_as_in_apple&#x27;: 2, b&#x27;a_as_in_apple&#x27;: 2, 2: &#x27;a_as_in_apple&#x27;, &#x27;u_as_in_but&#x27;: 3, b&#x27;u_as_in_but&#x27;: 3, 3: &#x27;u_as_in_but&#x27;, &#x27;var1_u_as_in_but&#x27;: 3.1, b&#x27;var1_u_as_in_but&#x27;: 3.1, 3.1: &#x27;var1_u_as_in_but&#x27;, &#x27;o_as_in_orange&#x27;: 4, b&#x27;o_as_in_orange&#x27;: 4, 4: &#x27;o_as_in_orange&#x27;, &#x27;var1_o_as_in_orange&#x27;: 4.1, b&#x27;var1_o_as_in_orange&#x27;: 4.1, 4.1: &#x27;var1_o_as_in_orange&#x27;, &#x27;var2_o_as_in_orange&#x27;: 4.2, b&#x27;var2_o_as_in_orange&#x27;: 4.2, 4.2: &#x27;var2_o_as_in_orange&#x27;, &#x27;o_as_in_now&#x27;: 5, b&#x27;o_as_in_now&#x27;: 5, 5: &#x27;o_as_in_now&#x27;, &#x27;var1_o_as_in_now&#x27;: 5.1, b&#x27;var1_o_as_in_now&#x27;: 5.1, 5.1: &#x27;var1_o_as_in_now&#x27;, &#x27;a_as_in_ago&#x27;: 6, b&#x27;a_as_in_ago&#x27;: 6, 6: &#x27;a_as_in_ago&#x27;, &#x27;var1_a_as_in_ago&#x27;: 6.1, b&#x27;var1_a_as_in_ago&#x27;: 6.1, 6.1: &#x27;var1_a_as_in_ago&#x27;, &#x27;e_as_in_herd&#x27;: 7, b&#x27;e_as_in_herd&#x27;: 7, 7: &#x27;e_as_in_herd&#x27;, &#x27;ar_as_in_year&#x27;: 7.1, b&#x27;ar_as_in_year&#x27;: 7.1, 7.1: &#x27;ar_as_in_year&#x27;, &#x27;eye&#x27;: 8, b&#x27;eye&#x27;: 8, 8: &#x27;eye&#x27;, &#x27;var1_eye&#x27;: 8.1, b&#x27;var1_eye&#x27;: 8.1, 8.1: &#x27;var1_eye&#x27;, &#x27;b&#x27;: 9, b&#x27;b&#x27;: 9, 9: &#x27;b&#x27;, &#x27;ch&#x27;: 10, b&#x27;ch&#x27;: 10, 10: &#x27;ch&#x27;, &#x27;d&#x27;: 11, b&#x27;d&#x27;: 11, 11: &#x27;d&#x27;, &#x27;th_as_in_them&#x27;: 12, b&#x27;th_as_in_them&#x27;: 12, 12: &#x27;th_as_in_them&#x27;, &#x27;e_as_in_them&#x27;: 13, b&#x27;e_as_in_them&#x27;: 13, 13: &#x27;e_as_in_them&#x27;, &#x27;var1_e_as_in_them&#x27;: 13.1, b&#x27;var1_e_as_in_them&#x27;: 13.1, 13.1: &#x27;var1_e_as_in_them&#x27;, &#x27;a_as_in_air&#x27;: 14, b&#x27;a_as_in_air&#x27;: 14, 14: &#x27;a_as_in_air&#x27;, &#x27;var1_a_as_in_air&#x27;: 14.1, b&#x27;var1_a_as_in_air&#x27;: 14.1, 14.1: &#x27;var1_a_as_in_air&#x27;, &#x27;var2_a_as_in_air&#x27;: 14.2, b&#x27;var2_a_as_in_air&#x27;: 14.2, 14.2: &#x27;var2_a_as_in_air&#x27;, &#x27;var3_a_as_in_air&#x27;: 14.3, b&#x27;var3_a_as_in_air&#x27;: 14.3, 14.3: &#x27;var3_a_as_in_air&#x27;, &#x27;var4_a_as_in_air&#x27;: 14.4, b&#x27;var4_a_as_in_air&#x27;: 14.4, 14.4: &#x27;var4_a_as_in_air&#x27;, &#x27;a_as_in_ate&#x27;: 15, b&#x27;a_as_in_ate&#x27;: 15, 15: &#x27;a_as_in_ate&#x27;, &#x27;var1_a_as_in_ate&#x27;: 15.1, b&#x27;var1_a_as_in_ate&#x27;: 15.1, 15.1: &#x27;var1_a_as_in_ate&#x27;, &#x27;f&#x27;: 16, b&#x27;f&#x27;: 16, 16: &#x27;f&#x27;, &#x27;g&#x27;: 17, b&#x27;g&#x27;: 17, 17: &#x27;g&#x27;, &#x27;h&#x27;: 18, b&#x27;h&#x27;: 18, 18: &#x27;h&#x27;, &#x27;i_as_in_it&#x27;: 19, b&#x27;i_as_in_it&#x27;: 19, 19: &#x27;i_as_in_it&#x27;, &#x27;var1_i_as_in_it&#x27;: 19.1, b&#x27;var1_i_as_in_it&#x27;: 19.1, 19.1: &#x27;var1_i_as_in_it&#x27;, &#x27;var2_i_as_in_it&#x27;: 19.2, b&#x27;var2_i_as_in_it&#x27;: 19.2, 19.2: &#x27;var2_i_as_in_it&#x27;, &#x27;ear&#x27;: 20, b&#x27;ear&#x27;: 20, 20: &#x27;ear&#x27;, &#x27;var1_ear&#x27;: 20.1, b&#x27;var1_ear&#x27;: 20.1, 20.1: &#x27;var1_ear&#x27;, &#x27;var2_ear&#x27;: 20.2, b&#x27;var2_ear&#x27;: 20.2, 20.2: &#x27;var2_ear&#x27;, &#x27;e_as_in_eat&#x27;: 21, b&#x27;e_as_in_eat&#x27;: 21, 21: &#x27;e_as_in_eat&#x27;, &#x27;var1_e_as_in_eat&#x27;: 21.1, b&#x27;var1_e_as_in_eat&#x27;: 21.1, 21.1: &#x27;var1_e_as_in_eat&#x27;, &#x27;j_as_in_jump&#x27;: 22, b&#x27;j_as_in_jump&#x27;: 22, 22: &#x27;j_as_in_jump&#x27;, &#x27;k&#x27;: 23, b&#x27;k&#x27;: 23, 23: &#x27;k&#x27;, &#x27;opt_scottish_loch&#x27;: 23.1, b&#x27;opt_scottish_loch&#x27;: 23.1, 23.1: &#x27;opt_scottish_loch&#x27;, &#x27;l&#x27;: 24, b&#x27;l&#x27;: 24, 24: &#x27;l&#x27;, &#x27;var1_l&#x27;: 24.1, b&#x27;var1_l&#x27;: 24.1, 24.1: &#x27;var1_l&#x27;, &#x27;m&#x27;: 25, b&#x27;m&#x27;: 25, 25: &#x27;m&#x27;, &#x27;n&#x27;: 26, b&#x27;n&#x27;: 26, 26: &#x27;n&#x27;, &#x27;ng&#x27;: 27, b&#x27;ng&#x27;: 27, 27: &#x27;ng&#x27;, &#x27;o_as_in_go&#x27;: 28, b&#x27;o_as_in_go&#x27;: 28, 28: &#x27;o_as_in_go&#x27;, &#x27;var1_o_as_in_go&#x27;: 28.1, b&#x27;var1_o_as_in_go&#x27;: 28.1, 28.1: &#x27;var1_o_as_in_go&#x27;, &#x27;var2_o_as_in_go&#x27;: 28.2, b&#x27;var2_o_as_in_go&#x27;: 28.2, 28.2: &#x27;var2_o_as_in_go&#x27;, &#x27;opt_ol_as_in_gold&#x27;: 29, b&#x27;opt_ol_as_in_gold&#x27;: 29, 29: &#x27;opt_ol_as_in_gold&#x27;, &#x27;oy_as_in_toy&#x27;: 30, b&#x27;oy_as_in_toy&#x27;: 30, 30: &#x27;oy_as_in_toy&#x27;, &#x27;var1_oy_as_in_toy&#x27;: 30.1, b&#x27;var1_oy_as_in_toy&#x27;: 30.1, 30.1: &#x27;var1_oy_as_in_toy&#x27;, &#x27;p&#x27;: 31, b&#x27;p&#x27;: 31, 31: &#x27;p&#x27;, &#x27;r&#x27;: 32, b&#x27;r&#x27;: 32, 32: &#x27;r&#x27;, &#x27;var1_r&#x27;: 32.1, b&#x27;var1_r&#x27;: 32.1, 32.1: &#x27;var1_r&#x27;, &#x27;s&#x27;: 33, b&#x27;s&#x27;: 33, 33: &#x27;s&#x27;, &#x27;sh&#x27;: 34, b&#x27;sh&#x27;: 34, 34: &#x27;sh&#x27;, &#x27;t&#x27;: 35, b&#x27;t&#x27;: 35, 35: &#x27;t&#x27;, &#x27;var1_t&#x27;: 35.1, b&#x27;var1_t&#x27;: 35.1, 35.1: &#x27;var1_t&#x27;, &#x27;th_as_in_think&#x27;: 36, b&#x27;th_as_in_think&#x27;: 36, 36: &#x27;th_as_in_think&#x27;, &#x27;oor_as_in_poor&#x27;: 37, b&#x27;oor_as_in_poor&#x27;: 37, 37: &#x27;oor_as_in_poor&#x27;, &#x27;var1_oor_as_in_poor&#x27;: 37.1, b&#x27;var1_oor_as_in_poor&#x27;: 37.1, 37.1: &#x27;var1_oor_as_in_poor&#x27;, &#x27;opt_u_as_in_pull&#x27;: 37.2, b&#x27;opt_u_as_in_pull&#x27;: 37.2, 37.2: &#x27;opt_u_as_in_pull&#x27;, &#x27;opt_ul_as_in_pull&#x27;: 38, b&#x27;opt_ul_as_in_pull&#x27;: 38, 38: &#x27;opt_ul_as_in_pull&#x27;, &#x27;oo_as_in_food&#x27;: 39, b&#x27;oo_as_in_food&#x27;: 39, 39: &#x27;oo_as_in_food&#x27;, &#x27;var1_oo_as_in_food&#x27;: 39.1, b&#x27;var1_oo_as_in_food&#x27;: 39.1, 39.1: &#x27;var1_oo_as_in_food&#x27;, &#x27;var2_oo_as_in_food&#x27;: 39.2, b&#x27;var2_oo_as_in_food&#x27;: 39.2, 39.2: &#x27;var2_oo_as_in_food&#x27;, &#x27;close_to_or&#x27;: 40, b&#x27;close_to_or&#x27;: 40, 40: &#x27;close_to_or&#x27;, &#x27;var1_close_to_or&#x27;: 40.1, b&#x27;var1_close_to_or&#x27;: 40.1, 40.1: &#x27;var1_close_to_or&#x27;, &#x27;var2_close_to_or&#x27;: 40.2, b&#x27;var2_close_to_or&#x27;: 40.2, 40.2: &#x27;var2_close_to_or&#x27;, &#x27;var3_close_to_or&#x27;: 40.3, b&#x27;var3_close_to_or&#x27;: 40.3, 40.3: &#x27;var3_close_to_or&#x27;, &#x27;v&#x27;: 41, b&#x27;v&#x27;: 41, 41: &#x27;v&#x27;, &#x27;w&#x27;: 42, b&#x27;w&#x27;: 42, 42: &#x27;w&#x27;, &#x27;var1_w&#x27;: 42.1, b&#x27;var1_w&#x27;: 42.1, 42.1: &#x27;var1_w&#x27;, &#x27;y&#x27;: 43, b&#x27;y&#x27;: 43, 43: &#x27;y&#x27;, &#x27;z&#x27;: 44, b&#x27;z&#x27;: 44, 44: &#x27;z&#x27;, &#x27;ge_of_blige_etc&#x27;: 45, b&#x27;ge_of_blige_etc&#x27;: 45, 45: &#x27;ge_of_blige_etc&#x27;, &#x27;glottal_stop&#x27;: 46, b&#x27;glottal_stop&#x27;: 46, 46: &#x27;glottal_stop&#x27;, &#x27;syllable_separator&#x27;: 47, b&#x27;syllable_separator&#x27;: 47, 47: &#x27;syllable_separator&#x27;, &#x27;primary_stress&#x27;: 47.1, b&#x27;primary_stress&#x27;: 47.1, 47.1: &#x27;primary_stress&#x27;, &#x27;secondary_stress&#x27;: 47.2, b&#x27;secondary_stress&#x27;: 47.2, 47.2: &#x27;secondary_stress&#x27;, &#x27;text_sharp&#x27;: 48, b&#x27;text_sharp&#x27;: 48, 48: &#x27;text_sharp&#x27;, &#x27;text_underline&#x27;: 49, b&#x27;text_underline&#x27;: 49, 49: &#x27;text_underline&#x27;, &#x27;text_question&#x27;: 50, b&#x27;text_question&#x27;: 50, 50: &#x27;text_question&#x27;, &#x27;text_exclamation&#x27;: 51, b&#x27;text_exclamation&#x27;: 51, 51: &#x27;text_exclamation&#x27;, &#x27;text_comma&#x27;: 52, b&#x27;text_comma&#x27;: 52, 52: &#x27;text_comma&#x27;, &#x27;ipa_colon&#x27;: 53, b&#x27;ipa_colon&#x27;: 53, 53: &#x27;ipa_colon&#x27;, (&#x27;settings&#x27;, &#x27;doc&#x27;): &#x27;Lexconvert internal phoneme names (sometimes useful with the --phones option while developing new formats)&#x27;}}"}, "prosodic.lib.lexconvert.chr": {"fullname": "prosodic.lib.lexconvert.chr", "modulename": "prosodic.lib.lexconvert", "qualname": "chr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.lexconvert.sorted": {"fullname": "prosodic.lib.lexconvert.sorted", "modulename": "prosodic.lib.lexconvert", "qualname": "sorted", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span>, </span><span class=\"param\"><span class=\"n\">theCmp</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree": {"fullname": "prosodic.lib.metricaltree", "modulename": "prosodic.lib.metricaltree", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.deptree": {"fullname": "prosodic.lib.metricaltree.deptree", "modulename": "prosodic.lib.metricaltree.deptree", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree", "kind": "class", "doc": "<p></p>\n", "bases": "nltk.tree.tree.Tree"}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.__init__", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span>, </span><span class=\"param\"><span class=\"n\">children</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">dep</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.preterminal", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.category", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.category", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.dependency", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.dependency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.preterminals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.categories", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.categories", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.dependencies", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.set_label", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.set_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.set_category", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.set_category", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.set_dep", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dep</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.set_deps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deps</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.to_tuples", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.contract", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.contract", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.fromstring", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.convert", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.convert", "kind": "function", "doc": "<p>Convert a tree between different subtypes of Tree.  <code>cls</code> determines\nwhich class will be used to encode the new tree.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>tree</strong>:  The tree that should be converted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The new Tree.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">tree</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTree.copy", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTree.copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser", "kind": "class", "doc": "<p></p>\n", "bases": "nltk.parse.api.ParserI"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path_to_jar</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">path_to_models_jar</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">path_to_ejml_jar</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;edu/stanford/nlp/models/parser/lexparser/englishPCFG.ser.gz&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf8&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">java_options</span><span class=\"o\">=</span><span class=\"s1\">&#39;-mx3G&#39;</span></span>)</span>"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.model_path", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.java_options", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.raw_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.raw_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.tagged_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"fullname": "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "DependencyTreeParser.tagged_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.deptree.setup_module": {"fullname": "prosodic.lib.metricaltree.deptree.setup_module", "modulename": "prosodic.lib.metricaltree.deptree", "qualname": "setup_module", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree": {"fullname": "prosodic.lib.metricaltree.metricaltree", "modulename": "prosodic.lib.metricaltree.metricaltree", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.metricaltree.DATE": {"fullname": "prosodic.lib.metricaltree.metricaltree.DATE", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "DATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;2015-04-20&#x27;"}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"fullname": "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MODELS_VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;3.5.2&#x27;"}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"fullname": "prosodic.lib.metricaltree.metricaltree.EJML_VERSION", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "EJML_VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;0.23&#x27;"}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"fullname": "prosodic.lib.metricaltree.metricaltree.DIR_ROOT", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "DIR_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;.&#x27;"}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"fullname": "prosodic.lib.metricaltree.metricaltree.sylcmu", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "sylcmu", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"fullname": "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "INFO_DO_NOT_STORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;contour&#x27;, &#x27;sent&#x27;, &#x27;nsyll&#x27;, &#x27;nseg&#x27;, &#x27;seg&#x27;, &#x27;nstress&#x27;, &#x27;word&#x27;]"}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"fullname": "prosodic.lib.metricaltree.metricaltree.set_paths", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "set_paths", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dir_root</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"fullname": "prosodic.lib.metricaltree.metricaltree.sent_splitter", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "sent_splitter", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;nltk.tokenize.punkt.PunktSentenceTokenizer object&gt;"}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"fullname": "prosodic.lib.metricaltree.metricaltree.parse_worker", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "parse_worker", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">q</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"fullname": "prosodic.lib.metricaltree.metricaltree.return_parser", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "return_parser", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dir_root</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"fullname": "prosodic.lib.metricaltree.metricaltree.pause_splitter", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "pause_splitter", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"fullname": "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "pause_splitter_tokens", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tokens</span>, </span><span class=\"param\"><span class=\"n\">split_by</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;:&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u2013&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u2014&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;--&#39;</span><span class=\"p\">}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"fullname": "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "split_sentences_from_tokens", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree", "kind": "class", "doc": "<p></p>\n", "bases": "prosodic.lib.metricaltree.deptree.DependencyTree"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">node</span>, </span><span class=\"param\"><span class=\"n\">children</span>, </span><span class=\"param\"><span class=\"n\">dep</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">lstress</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">pstress</span><span class=\"o\">=</span><span class=\"n\">nan</span>, </span><span class=\"param\"><span class=\"n\">stress</span><span class=\"o\">=</span><span class=\"n\">nan</span></span>)</span>"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.lstress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.pstress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.stress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.seg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.nseg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.nsyll", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.nstress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.lstresses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.pstresses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.stresses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.nsylls", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">leaves</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.set_lstress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.set_pstress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.set_stress", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stress</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.set_label", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.convert", "kind": "function", "doc": "<p>Convert a tree between different subtypes of Tree.  <code>cls</code> determines\nwhich class will be used to encode the new tree.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>tree</strong>:  The tree that should be converted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The new Tree.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">tree</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.ambiguity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.ambiguate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.max_stress_disambiguate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.min_stress_disambiguate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTree.copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser", "kind": "class", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">deptreeParser</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.deptreeParser", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.dep_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.dep_raw_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.dep_raw_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.dep_tagged_parse_sent", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.dep_tagged_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.lex_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.lex_raw_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.lex_raw_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.lex_tagged_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.lex_tagged_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.phr_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.phr_raw_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.phr_raw_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.phr_tagged_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.phr_tagged_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">stress_polysyll</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.get_stats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">generator</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">format_pandas</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.stats_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.stats_raw_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.stats_raw_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.stats_tagged_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentence</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"fullname": "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents", "modulename": "prosodic.lib.metricaltree.metricaltree", "qualname": "MetricalTreeParser.stats_tagged_parse_sents", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sentences</span>, </span><span class=\"param\"><span class=\"n\">arto</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.metricaltree.test": {"fullname": "prosodic.lib.metricaltree.test", "modulename": "prosodic.lib.metricaltree.test", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.metricaltree.test.test_parser": {"fullname": "prosodic.lib.metricaltree.test.test_parser", "modulename": "prosodic.lib.metricaltree.test", "qualname": "test_parser", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon": {"fullname": "prosodic.lib.syllabiphon", "modulename": "prosodic.lib.syllabiphon", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.complexity": {"fullname": "prosodic.lib.syllabiphon.complexity", "modulename": "prosodic.lib.syllabiphon.complexity", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"fullname": "prosodic.lib.syllabiphon.complexity.onsetless_syls", "modulename": "prosodic.lib.syllabiphon.complexity", "qualname": "onsetless_syls", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"fullname": "prosodic.lib.syllabiphon.complexity.complex_onsets", "modulename": "prosodic.lib.syllabiphon.complexity", "qualname": "complex_onsets", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.complexity.codas": {"fullname": "prosodic.lib.syllabiphon.complexity.codas", "modulename": "prosodic.lib.syllabiphon.complexity", "qualname": "codas", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"fullname": "prosodic.lib.syllabiphon.complexity.complex_codas", "modulename": "prosodic.lib.syllabiphon.complexity", "qualname": "complex_codas", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"fullname": "prosodic.lib.syllabiphon.complexity.FEATURES", "modulename": "prosodic.lib.syllabiphon.complexity", "qualname": "FEATURES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;function onsetless_syls&gt;, &lt;function complex_onsets&gt;, &lt;function codas&gt;, &lt;function complex_codas&gt;]"}, "prosodic.lib.syllabiphon.complexity.extract_features": {"fullname": "prosodic.lib.syllabiphon.complexity.extract_features", "modulename": "prosodic.lib.syllabiphon.complexity", "qualname": "extract_features", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parse</span>,</span><span class=\"param\">\t<span class=\"n\">features</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">onsetless_syls</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">complex_onsets</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">codas</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">complex_codas</span><span class=\"o\">&gt;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.syllabify": {"fullname": "prosodic.lib.syllabiphon.syllabify", "modulename": "prosodic.lib.syllabiphon.syllabify", "kind": "module", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"fullname": "prosodic.lib.syllabiphon.syllabify.ENG_CONFL", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "ENG_CONFL", "kind": "variable", "doc": "<p></p>\n", "default_value": "{9: 9, 8: 9, 7: 7, 6: 6, 5: 5, 4: 4, 3: 4, 2: 4, 1: 4}"}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify", "kind": "class", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">confl</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">9</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}</span></span>)</span>"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.ft", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.ft", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.son", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.son", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.confl", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.confl", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.find_boundaries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grid</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.syl_seg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.parse_syl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">syl</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"fullname": "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse", "modulename": "prosodic.lib.syllabiphon.syllabify", "qualname": "Syllabify.syl_parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing": {"fullname": "prosodic.parsing", "modulename": "prosodic.parsing", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.constraints": {"fullname": "prosodic.parsing.constraints", "modulename": "prosodic.parsing.constraints", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.constraints.w_stress": {"fullname": "prosodic.parsing.constraints.w_stress", "modulename": "prosodic.parsing.constraints", "qualname": "w_stress", "kind": "function", "doc": "<p>Check for stressed syllables in weak positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating stressed syllables in weak positions,\n        or None for each slot if the position is strong.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.s_unstress": {"fullname": "prosodic.parsing.constraints.s_unstress", "modulename": "prosodic.parsing.constraints", "qualname": "s_unstress", "kind": "function", "doc": "<p>Check for unstressed syllables in strong positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating unstressed syllables in strong positions,\n        or None for each slot if the position is weak.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.unres_within": {"fullname": "prosodic.parsing.constraints.unres_within", "modulename": "prosodic.parsing.constraints", "qualname": "unres_within", "kind": "function", "doc": "<p>Check for unresolved disyllabic positions within words.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating unresolved disyllabic positions within words,\n        or None for each slot if not applicable.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.foot_size": {"fullname": "prosodic.parsing.constraints.foot_size", "modulename": "prosodic.parsing.constraints", "qualname": "foot_size", "kind": "function", "doc": "<p>Check if the meter position exceeds two syllables or is empty.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating if the position violates foot size constraints.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.unres_across": {"fullname": "prosodic.parsing.constraints.unres_across", "modulename": "prosodic.parsing.constraints", "qualname": "unres_across", "kind": "function", "doc": "<p>Check for unresolved disyllabic positions across words.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating unresolved disyllabic positions across words,\n        or None for each slot if not applicable.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.w_peak": {"fullname": "prosodic.parsing.constraints.w_peak", "modulename": "prosodic.parsing.constraints", "qualname": "w_peak", "kind": "function", "doc": "<p>Check for polysyllabic stress on weak positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating polysyllabic stress on weak positions,\n        or None for each slot if the position is strong.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.s_trough": {"fullname": "prosodic.parsing.constraints.s_trough", "modulename": "prosodic.parsing.constraints", "qualname": "s_trough", "kind": "function", "doc": "<p>Check for polysyllabic unstress on strong positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos (MeterPosition):</strong>  The meter position to evaluate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of booleans indicating polysyllabic unstress on strong positions,\n        or None for each slot if the position is weak.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mpos</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"fullname": "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES", "modulename": "prosodic.parsing.constraints", "qualname": "DEFAULT_CONSTRAINTS_NAMES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;w_peak&#x27;, &#x27;w_stress&#x27;, &#x27;s_unstress&#x27;, &#x27;unres_across&#x27;, &#x27;unres_within&#x27;]"}, "prosodic.parsing.constraints.CONSTRAINTS": {"fullname": "prosodic.parsing.constraints.CONSTRAINTS", "modulename": "prosodic.parsing.constraints", "qualname": "CONSTRAINTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;w_peak&#x27;: &lt;function w_peak&gt;, &#x27;w_stress&#x27;: &lt;function w_stress&gt;, &#x27;s_unstress&#x27;: &lt;function s_unstress&gt;, &#x27;unres_across&#x27;: &lt;function unres_across&gt;, &#x27;unres_within&#x27;: &lt;function unres_within&gt;, &#x27;s_trough&#x27;: &lt;function s_trough&gt;, &#x27;foot_size&#x27;: &lt;function foot_size&gt;}"}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"fullname": "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS", "modulename": "prosodic.parsing.constraints", "qualname": "DEFAULT_CONSTRAINTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&lt;function w_peak&gt;, &lt;function w_stress&gt;, &lt;function s_unstress&gt;, &lt;function unres_across&gt;, &lt;function unres_within&gt;]"}, "prosodic.parsing.constraints.get_constraints": {"fullname": "prosodic.parsing.constraints.get_constraints", "modulename": "prosodic.parsing.constraints", "qualname": "get_constraints", "kind": "function", "doc": "<p>Get constraint functions from names or function objects.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>names_or_funcs (str or list):</strong>  Constraint names or function objects.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: A list of constraint functions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">names_or_funcs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"fullname": "prosodic.parsing.constraints.CONSTRAINT_DESCS", "modulename": "prosodic.parsing.constraints", "qualname": "CONSTRAINT_DESCS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;w_peak&#x27;: &#x27;No polysyllabic stress on weak position&#x27;, &#x27;s_trough&#x27;: &#x27;No polysyllabic unstress on strong position&#x27;, &#x27;w_stress&#x27;: &#x27;No stressed syllables on weak position&#x27;, &#x27;s_unstress&#x27;: &#x27;No unstressed syllable on strong position&#x27;, &#x27;unres_across&#x27;: &#x27;Disyllabic positions crossing words can only contain function words&#x27;, &#x27;unres_within&#x27;: &#x27;Disyllabic positions within words must start with a light and stressed syllable&#x27;, &#x27;foot_size&#x27;: &#x27;Do not allow positions to exceed two syllables&#x27;, &#x27;max_s&#x27;: &#x27;Maximum number of syllables in strong position&#x27;, &#x27;max_w&#x27;: &#x27;Maximum number of syllables in weak position&#x27;, &#x27;resolve_optionality&#x27;: &quot;Allow parser to choose best words&#x27; stress patterns option&quot;, &#x27;exhaustive&#x27;: &#x27;Compute even harmonically bounded parses (those worse in the same ways + another way compared to another parse)&#x27;}"}, "prosodic.parsing.meter": {"fullname": "prosodic.parsing.meter", "modulename": "prosodic.parsing.meter", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.meter.NUM_GOING": {"fullname": "prosodic.parsing.meter.NUM_GOING", "modulename": "prosodic.parsing.meter", "qualname": "NUM_GOING", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"fullname": "prosodic.parsing.meter.DEFAULT_METER_KWARGS", "modulename": "prosodic.parsing.meter", "qualname": "DEFAULT_METER_KWARGS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;constraints&#x27;: [&lt;function w_peak&gt;, &lt;function w_stress&gt;, &lt;function s_unstress&gt;, &lt;function unres_across&gt;, &lt;function unres_within&gt;], &#x27;categorical_constraints&#x27;: [], &#x27;max_s&#x27;: 2, &#x27;max_w&#x27;: 2, &#x27;resolve_optionality&#x27;: True, &#x27;exhaustive&#x27;: False}"}, "prosodic.parsing.meter.MTRDEFAULT": {"fullname": "prosodic.parsing.meter.MTRDEFAULT", "modulename": "prosodic.parsing.meter", "qualname": "MTRDEFAULT", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;constraints&#x27;: [&lt;function w_peak&gt;, &lt;function w_stress&gt;, &lt;function s_unstress&gt;, &lt;function unres_across&gt;, &lt;function unres_within&gt;], &#x27;categorical_constraints&#x27;: [], &#x27;max_s&#x27;: 2, &#x27;max_w&#x27;: 2, &#x27;resolve_optionality&#x27;: True, &#x27;exhaustive&#x27;: False}"}, "prosodic.parsing.meter.Meter": {"fullname": "prosodic.parsing.meter.Meter", "modulename": "prosodic.parsing.meter", "qualname": "Meter", "kind": "class", "doc": "<p>A class representing a metrical parsing system.</p>\n\n<p>This class implements methods for parsing lines and texts according to\nspecified metrical constraints.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>constraints (list):</strong>  List of constraint functions to apply.</li>\n<li><strong>categorical_constraints (list):</strong>  List of categorical constraint functions.</li>\n<li><strong>max_s (int):</strong>  Maximum number of consecutive strong positions.</li>\n<li><strong>max_w (int):</strong>  Maximum number of consecutive weak positions.</li>\n<li><strong>resolve_optionality (bool):</strong>  Whether to resolve optional syllables.</li>\n<li><strong>exhaustive (bool):</strong>  Whether to perform exhaustive parsing.</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.parsing.meter.Meter.__init__": {"fullname": "prosodic.parsing.meter.Meter.__init__", "modulename": "prosodic.parsing.meter", "qualname": "Meter.__init__", "kind": "function", "doc": "<p>Initialize a Meter object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>constraints (list):</strong>  List of constraint functions to apply.</li>\n<li><strong>categorical_constraints (list):</strong>  List of categorical constraint functions.</li>\n<li><strong>max_s (int):</strong>  Maximum number of consecutive strong positions.</li>\n<li><strong>max_w (int):</strong>  Maximum number of consecutive weak positions.</li>\n<li><strong>resolve_optionality (bool):</strong>  Whether to resolve optional syllables.</li>\n<li><strong>exhaustive (bool):</strong>  Whether to perform exhaustive parsing.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">constraints</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">w_peak</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">w_stress</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">s_unstress</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">unres_across</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">unres_within</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">categorical_constraints</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">max_s</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">max_w</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">resolve_optionality</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">exhaustive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "prosodic.parsing.meter.Meter.prefix": {"fullname": "prosodic.parsing.meter.Meter.prefix", "modulename": "prosodic.parsing.meter", "qualname": "Meter.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;meter&#x27;"}, "prosodic.parsing.meter.Meter.constraints": {"fullname": "prosodic.parsing.meter.Meter.constraints", "modulename": "prosodic.parsing.meter", "qualname": "Meter.constraints", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.meter.Meter.categorical_constraints": {"fullname": "prosodic.parsing.meter.Meter.categorical_constraints", "modulename": "prosodic.parsing.meter", "qualname": "Meter.categorical_constraints", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.meter.Meter.max_s": {"fullname": "prosodic.parsing.meter.Meter.max_s", "modulename": "prosodic.parsing.meter", "qualname": "Meter.max_s", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.meter.Meter.max_w": {"fullname": "prosodic.parsing.meter.Meter.max_w", "modulename": "prosodic.parsing.meter", "qualname": "Meter.max_w", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.meter.Meter.resolve_optionality": {"fullname": "prosodic.parsing.meter.Meter.resolve_optionality", "modulename": "prosodic.parsing.meter", "qualname": "Meter.resolve_optionality", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.meter.Meter.exhaustive": {"fullname": "prosodic.parsing.meter.Meter.exhaustive", "modulename": "prosodic.parsing.meter", "qualname": "Meter.exhaustive", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.meter.Meter.use_cache": {"fullname": "prosodic.parsing.meter.Meter.use_cache", "modulename": "prosodic.parsing.meter", "qualname": "Meter.use_cache", "kind": "variable", "doc": "<p>Check if caching is enabled.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if caching is enabled, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.meter.Meter.use_cache_lines": {"fullname": "prosodic.parsing.meter.Meter.use_cache_lines", "modulename": "prosodic.parsing.meter", "qualname": "Meter.use_cache_lines", "kind": "variable", "doc": "<p>Check if line caching is enabled.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if line caching is enabled, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.meter.Meter.use_cache_texts": {"fullname": "prosodic.parsing.meter.Meter.use_cache_texts", "modulename": "prosodic.parsing.meter", "qualname": "Meter.use_cache_texts", "kind": "variable", "doc": "<p>Check if text caching is enabled.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if text caching is enabled, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.meter.Meter.to_json": {"fullname": "prosodic.parsing.meter.Meter.to_json", "modulename": "prosodic.parsing.meter", "qualname": "Meter.to_json", "kind": "function", "doc": "<p>Convert the Meter object to JSON format.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: JSON representation of the Meter object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.constraint_names": {"fullname": "prosodic.parsing.meter.Meter.constraint_names", "modulename": "prosodic.parsing.meter", "qualname": "Meter.constraint_names", "kind": "variable", "doc": "<p>Get the names of the constraint functions.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: Names of the constraint functions.</p>\n</blockquote>\n", "annotation": ": Tuple[str, ...]"}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"fullname": "prosodic.parsing.meter.Meter.categorical_constraint_names", "modulename": "prosodic.parsing.meter", "qualname": "Meter.categorical_constraint_names", "kind": "variable", "doc": "<p>Get the names of the categorical constraint functions.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: Names of the categorical constraint functions.</p>\n</blockquote>\n", "annotation": ": Tuple[str, ...]"}, "prosodic.parsing.meter.Meter.attrs": {"fullname": "prosodic.parsing.meter.Meter.attrs", "modulename": "prosodic.parsing.meter", "qualname": "Meter.attrs", "kind": "variable", "doc": "<p>Get the attributes of the Meter object.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: Attributes of the Meter object.</p>\n</blockquote>\n", "annotation": ": Dict[str, Any]"}, "prosodic.parsing.meter.Meter.get_pos_types": {"fullname": "prosodic.parsing.meter.Meter.get_pos_types", "modulename": "prosodic.parsing.meter", "qualname": "Meter.get_pos_types", "kind": "function", "doc": "<p>Get possible position types for a given number of syllables.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nsylls (int, optional):</strong>  Number of syllables. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: List of possible position types.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">nsylls</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"fullname": "prosodic.parsing.meter.Meter.get_wordform_matrix", "modulename": "prosodic.parsing.meter", "qualname": "Meter.get_wordform_matrix", "kind": "function", "doc": "<p>Get the wordform matrix for a given line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line to process.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[List[WordForm]]: The wordform matrix for the line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordForm</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse": {"fullname": "prosodic.parsing.meter.Meter.parse", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse", "kind": "function", "doc": "<p>Parse a text or line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>text_or_line (Text or Line):</strong>  The text or line to parse.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ParseList: List of parses for the text or line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text_or_line</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse_iter": {"fullname": "prosodic.parsing.meter.Meter.parse_iter", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse_iter", "kind": "function", "doc": "<p>Iterator for parsing a text or line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>text_or_line (Text or Line):</strong>  The text or line to parse.</li>\n<li><strong>force (bool, optional):</strong>  Force parsing even if cached. Defaults to False.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"yields\">Yields:</h6>\n\n<blockquote>\n  <p>Parse: Individual parses for the text or line.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If the object is not parseable.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text_or_line</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">stanzas</span><span class=\"o\">.</span><span class=\"n\">Stanza</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse_line": {"fullname": "prosodic.parsing.meter.Meter.parse_line", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse_line", "kind": "function", "doc": "<p>Parse a line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line to parse.</li>\n<li><strong>force (bool, optional):</strong>  Force parsing even if cached. Defaults to False.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ParseList: List of parses for the line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.get_key": {"fullname": "prosodic.parsing.meter.Meter.get_key", "modulename": "prosodic.parsing.meter", "qualname": "Meter.get_key", "kind": "function", "doc": "<p>Get the cache key for a line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The cache key.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parses_from_cache": {"fullname": "prosodic.parsing.meter.Meter.parses_from_cache", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parses_from_cache", "kind": "function", "doc": "<p>Get parses from cache for a line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line.</li>\n<li><strong>as_dict (bool, optional):</strong>  Whether to return as a dictionary. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ParseList or dict: The parses for the line, or a dictionary representation if as_dict is True.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span>,</span><span class=\"param\">\t<span class=\"n\">as_dict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse_line_fast": {"fullname": "prosodic.parsing.meter.Meter.parse_line_fast", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse_line_fast", "kind": "function", "doc": "<p>Parse a line using the fast parsing method.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line to parse.</li>\n<li><strong>force (bool, optional):</strong>  Force parsing even if cached. Defaults to False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ParseList: List of parses for the line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"fullname": "prosodic.parsing.meter.Meter.parse_line_exhaustive", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse_line_exhaustive", "kind": "function", "doc": "<p>Parse a line using the exhaustive parsing method.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line to parse.</li>\n<li><strong>progress (bool, optional):</strong>  Whether to show progress. Defaults to None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>ParseList: List of parses for the line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span>,</span><span class=\"param\">\t<span class=\"n\">progress</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse_text": {"fullname": "prosodic.parsing.meter.Meter.parse_text", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse_text", "kind": "function", "doc": "<p>Parse a text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>text (Text):</strong>  The text to parse.</li>\n<li><strong>num_proc (int, optional):</strong>  Number of processes to use. Defaults to DEFAULT_NUM_PROC.</li>\n<li><strong>progress (bool, optional):</strong>  Whether to show progress. Defaults to True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">Text</span>,</span><span class=\"param\">\t<span class=\"n\">num_proc</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">progress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.meter.Meter.parse_text_iter": {"fullname": "prosodic.parsing.meter.Meter.parse_text_iter", "modulename": "prosodic.parsing.meter", "qualname": "Meter.parse_text_iter", "kind": "function", "doc": "<p>Iterator for parsing a text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>text (Text):</strong>  The text to parse.</li>\n<li><strong>progress (bool, optional):</strong>  Whether to show progress. Defaults to True.</li>\n<li><strong>force (bool, optional):</strong>  Force parsing even if cached. Defaults to False.</li>\n<li><strong>num_proc (int, optional):</strong>  Number of processes to use. Defaults to DEFAULT_NUM_PROC.</li>\n<li><strong>use_mp (bool, optional):</strong>  Whether to use multiprocessing. Defaults to True.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"yields\">Yields:</h6>\n\n<blockquote>\n  <p>Line: Individual lines of the text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">stanzas</span><span class=\"o\">.</span><span class=\"n\">Stanza</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">progress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">num_proc</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_mp</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists": {"fullname": "prosodic.parsing.parselists", "modulename": "prosodic.parsing.parselists", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.parselists.ParseList": {"fullname": "prosodic.parsing.parselists.ParseList", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList", "kind": "class", "doc": "<p>A list of Parse objects representing possible metrical parses for a line of poetry.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>index_name (str):</strong>  Name of the index for this list type.</li>\n<li><strong>prefix (str):</strong>  Prefix used for attribute names.</li>\n<li><strong>show_bounded (bool):</strong>  Whether to show bounded parses.</li>\n<li><strong>is_scansions (bool):</strong>  Whether this list represents scansions.</li>\n<li><strong>line (Optional[Line]):</strong>  The Line object this ParseList is associated with.</li>\n</ul>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.parsing.parselists.ParseList.__init__": {"fullname": "prosodic.parsing.parselists.ParseList.__init__", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.__init__", "kind": "function", "doc": "<p>Initialize a ParseList.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>*args:</strong>  Variable length argument list.</li>\n<li><strong>line:</strong>  The Line object this ParseList is associated with.</li>\n<li><strong>**kwargs:</strong>  Arbitrary keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "prosodic.parsing.parselists.ParseList.index_name": {"fullname": "prosodic.parsing.parselists.ParseList.index_name", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.index_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;parse&#x27;"}, "prosodic.parsing.parselists.ParseList.prefix": {"fullname": "prosodic.parsing.parselists.ParseList.prefix", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;parselist&#x27;"}, "prosodic.parsing.parselists.ParseList.show_bounded": {"fullname": "prosodic.parsing.parselists.ParseList.show_bounded", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.show_bounded", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, "prosodic.parsing.parselists.ParseList.is_scansions": {"fullname": "prosodic.parsing.parselists.ParseList.is_scansions", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.is_scansions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, "prosodic.parsing.parselists.ParseList.line": {"fullname": "prosodic.parsing.parselists.ParseList.line", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.line", "kind": "variable", "doc": "<p>Get the Line object associated with this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The Line object, if available.</p>\n</blockquote>\n", "annotation": ": Optional[prosodic.texts.lines.Line]"}, "prosodic.parsing.parselists.ParseList.from_json": {"fullname": "prosodic.parsing.parselists.ParseList.from_json", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.from_json", "kind": "function", "doc": "<p>Create a ParseList from a JSON dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>json_d:</strong>  JSON dictionary containing parse data.</li>\n<li><strong>line:</strong>  The Line object this ParseList is associated with.</li>\n<li><strong>progress:</strong>  Whether to show progress during creation.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A new ParseList object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">json_d</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">progress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.num_parses": {"fullname": "prosodic.parsing.parselists.ParseList.num_parses", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.num_parses", "kind": "variable", "doc": "<p>Get the number of unbounded parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The number of unbounded parses.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parselists.ParseList.attrs": {"fullname": "prosodic.parsing.parselists.ParseList.attrs", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.attrs", "kind": "variable", "doc": "<p>Get the attributes of this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of attributes.</p>\n</blockquote>\n", "annotation": ": Dict[str, Any]"}, "prosodic.parsing.parselists.ParseList.meter": {"fullname": "prosodic.parsing.parselists.ParseList.meter", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.meter", "kind": "variable", "doc": "<p>Get the meter associated with this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The Meter object, if available.</p>\n</blockquote>\n", "annotation": ": Optional[ForwardRef(&#x27;Meter&#x27;)]"}, "prosodic.parsing.parselists.ParseList.to_json": {"fullname": "prosodic.parsing.parselists.ParseList.to_json", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.to_json", "kind": "function", "doc": "<p>Convert the ParseList to a JSON-serializable dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn:</strong>  Optional filename to save the JSON data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A JSON-serializable dictionary representing the ParseList.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.all": {"fullname": "prosodic.parsing.parselists.ParseList.all", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.all", "kind": "variable", "doc": "<p>Get all parses, including scansions.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A ParseList containing all parses.</p>\n</blockquote>\n", "annotation": ": prosodic.parsing.parselists.ParseList"}, "prosodic.parsing.parselists.ParseList.best": {"fullname": "prosodic.parsing.parselists.ParseList.best", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.best", "kind": "variable", "doc": "<p>Get the best parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The best Parse object, or None if no parses are available.</p>\n</blockquote>\n", "annotation": ": Optional[ForwardRef(&#x27;Parse&#x27;)]"}, "prosodic.parsing.parselists.ParseList.unbounded": {"fullname": "prosodic.parsing.parselists.ParseList.unbounded", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.unbounded", "kind": "variable", "doc": "<p>Get unbounded parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A ParseList containing only unbounded parses.</p>\n</blockquote>\n", "annotation": ": prosodic.parsing.parselists.ParseList"}, "prosodic.parsing.parselists.ParseList.bounded": {"fullname": "prosodic.parsing.parselists.ParseList.bounded", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.bounded", "kind": "variable", "doc": "<p>Get bounded parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A ParseList containing only bounded parses.</p>\n</blockquote>\n", "annotation": ": prosodic.parsing.parselists.ParseList"}, "prosodic.parsing.parselists.ParseList.best_parse": {"fullname": "prosodic.parsing.parselists.ParseList.best_parse", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.best_parse", "kind": "variable", "doc": "<p>Get the best parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The best Parse object, or None if no parses are available.</p>\n</blockquote>\n", "annotation": ": Optional[ForwardRef(&#x27;Parse&#x27;)]"}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"fullname": "prosodic.parsing.parselists.ParseList.num_unbounded", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.num_unbounded", "kind": "variable", "doc": "<p>Get the number of unbounded parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The number of unbounded parses.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parselists.ParseList.num_bounded": {"fullname": "prosodic.parsing.parselists.ParseList.num_bounded", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.num_bounded", "kind": "variable", "doc": "<p>Get the number of bounded parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The number of bounded parses.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parselists.ParseList.num_all": {"fullname": "prosodic.parsing.parselists.ParseList.num_all", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.num_all", "kind": "variable", "doc": "<p>Get the total number of parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The total number of parses.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"fullname": "prosodic.parsing.parselists.ParseList.num_all_with_combos", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.num_all_with_combos", "kind": "variable", "doc": "<p>Get the total number of parses including combinations.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The total number of parses including combinations.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parselists.ParseList.parses": {"fullname": "prosodic.parsing.parselists.ParseList.parses", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.parses", "kind": "variable", "doc": "<p>Get all parses.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>This ParseList object.</p>\n</blockquote>\n", "annotation": ": prosodic.parsing.parselists.ParseList"}, "prosodic.parsing.parselists.ParseList.bound": {"fullname": "prosodic.parsing.parselists.ParseList.bound", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.bound", "kind": "function", "doc": "<p>Bound the parses in this ParseList.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>progress:</strong>  Whether to show progress during bounding.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A ParseList containing unbounded parses after bounding.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">progress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parselists</span><span class=\"o\">.</span><span class=\"n\">ParseList</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.rank": {"fullname": "prosodic.parsing.parselists.ParseList.rank", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.rank", "kind": "function", "doc": "<p>Rank the parses in this ParseList.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.lines": {"fullname": "prosodic.parsing.parselists.ParseList.lines", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.lines", "kind": "variable", "doc": "<p>Get a list of unique Line objects associated with this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A LineList containing unique Line objects.</p>\n</blockquote>\n", "annotation": ": prosodic.texts.lines.LineList"}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"fullname": "prosodic.parsing.parselists.ParseList.prefix_attrs", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.prefix_attrs", "kind": "variable", "doc": "<p>Get prefix attributes for this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of prefix attributes.</p>\n</blockquote>\n", "annotation": ": Dict[str, Any]"}, "prosodic.parsing.parselists.ParseList.stats_d": {"fullname": "prosodic.parsing.parselists.ParseList.stats_d", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.stats_d", "kind": "function", "doc": "<p>Get statistics for this ParseList.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>by:</strong>  How to group the statistics.</li>\n<li><strong>norm:</strong>  Whether to normalize the statistics.</li>\n<li><strong>incl_bounded:</strong>  Whether to include bounded parses.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of statistics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">by</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">incl_bounded</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.stats": {"fullname": "prosodic.parsing.parselists.ParseList.stats", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.stats", "kind": "function", "doc": "<p>Get statistics for this ParseList as a DataFrame.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>norm:</strong>  Whether to normalize the statistics.</li>\n<li><strong>incl_bounded:</strong>  Whether to include bounded parses.</li>\n<li><strong>by:</strong>  How to group the statistics.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A DataFrame containing statistics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">norm</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">incl_bounded</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">by</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.df": {"fullname": "prosodic.parsing.parselists.ParseList.df", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.df", "kind": "variable", "doc": "<p>Get a DataFrame representation of this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A DataFrame representing this ParseList.</p>\n</blockquote>\n", "annotation": ": pandas.core.frame.DataFrame"}, "prosodic.parsing.parselists.ParseList.df_norm": {"fullname": "prosodic.parsing.parselists.ParseList.df_norm", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.df_norm", "kind": "variable", "doc": "<p>Get a normalized DataFrame representation of this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A normalized DataFrame representing this ParseList.</p>\n</blockquote>\n", "annotation": ": pandas.core.frame.DataFrame"}, "prosodic.parsing.parselists.ParseList.df_raw": {"fullname": "prosodic.parsing.parselists.ParseList.df_raw", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.df_raw", "kind": "variable", "doc": "<p>Get a raw DataFrame representation of this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A raw DataFrame representing this ParseList.</p>\n</blockquote>\n", "annotation": ": pandas.core.frame.DataFrame"}, "prosodic.parsing.parselists.ParseList.get_df": {"fullname": "prosodic.parsing.parselists.ParseList.get_df", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.get_df", "kind": "function", "doc": "<p>Get a DataFrame representation of this ParseList.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>*x:</strong>  Positional arguments.</li>\n<li><strong>**y:</strong>  Keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A DataFrame representing this ParseList.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.df_syll": {"fullname": "prosodic.parsing.parselists.ParseList.df_syll", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.df_syll", "kind": "variable", "doc": "<p>Get a syllable-level DataFrame representation of this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A syllable-level DataFrame representing this ParseList.</p>\n</blockquote>\n", "annotation": ": pandas.core.frame.DataFrame"}, "prosodic.parsing.parselists.ParseList.scansions": {"fullname": "prosodic.parsing.parselists.ParseList.scansions", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.scansions", "kind": "variable", "doc": "<p>Get unique scansions for this ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A ParseList containing unique scansions.</p>\n</blockquote>\n", "annotation": ": prosodic.parsing.parselists.ParseList"}, "prosodic.parsing.parselists.ParseList.num_lines": {"fullname": "prosodic.parsing.parselists.ParseList.num_lines", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.num_lines", "kind": "variable", "doc": "<p>Get the number of lines in the ParseList.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The number of lines.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parselists.ParseList.render": {"fullname": "prosodic.parsing.parselists.ParseList.render", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.render", "kind": "function", "doc": "<p>Render the ParseList as HTML.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>as_str:</strong>  Whether to return the result as a string.</li>\n<li><strong>blockquote:</strong>  Whether to render each line as a blockquote.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Union[str, 'HTML']: The rendered HTML, either as a string or an HTML object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">blockquote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">ForwardRef</span><span class=\"p\">(</span><span class=\"s1\">&#39;HTML&#39;</span><span class=\"p\">)]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parselists.ParseList.to_html": {"fullname": "prosodic.parsing.parselists.ParseList.to_html", "modulename": "prosodic.parsing.parselists", "qualname": "ParseList.to_html", "kind": "function", "doc": "<p>Convert the ParseList to HTML.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>as_str:</strong>  Whether to return the result as a string.</li>\n<li><strong>blockquote:</strong>  Whether to render each line as a blockquote.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Union[str, 'HTML']: The HTML representation, either as a string or an HTML object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">blockquote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">ForwardRef</span><span class=\"p\">(</span><span class=\"s1\">&#39;HTML&#39;</span><span class=\"p\">)]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses": {"fullname": "prosodic.parsing.parses", "modulename": "prosodic.parsing.parses", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse": {"fullname": "prosodic.parsing.parses.Parse", "modulename": "prosodic.parsing.parses", "qualname": "Parse", "kind": "class", "doc": "<p>Represents a metrical parse of a line of text.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>prefix (str):</strong>  The prefix used for naming this entity type.</li>\n<li><strong>positions (List[ParsePosition]):</strong>  List of metrical positions in the parse.</li>\n<li><strong>meter_obj (Meter):</strong>  The meter object associated with this parse.</li>\n<li><strong>meter (Meter):</strong>  Alias for meter_obj.</li>\n<li><strong>wordforms (WordFormList):</strong>  List of word forms in the parse.</li>\n<li><strong>line (Line):</strong>  The line object this parse is associated with.</li>\n<li><strong>is_bounded (bool):</strong>  Whether this parse is bounded.</li>\n<li><strong>bounded_by (List):</strong>  List of constraints that bound this parse.</li>\n<li><strong>unmetrical (bool):</strong>  Whether this parse is unmetrical.</li>\n<li><strong>comparison_nums (set):</strong>  Set of comparison numbers.</li>\n<li><strong>comparison_parses (List[Parse]):</strong>  List of comparison parses.</li>\n<li><strong>parse_num (int):</strong>  The number of this parse.</li>\n<li><strong>total_score (Optional[float]):</strong>  The total score of this parse.</li>\n<li><strong>pause_comparisons (bool):</strong>  Whether to pause comparisons.</li>\n<li><strong>parse_rank (Optional[int]):</strong>  The rank of this parse.</li>\n<li><strong>num_slots_positioned (int):</strong>  Number of slots positioned in this parse.</li>\n<li><strong>_line_num (Optional[int]):</strong>  The line number.</li>\n<li><strong>_stanza_num (Optional[int]):</strong>  The stanza number.</li>\n<li><strong>_line_txt (str):</strong>  The text of the line.</li>\n</ul>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>wordforms_or_str (Union[str, List, WordFormList]):</strong>  The word forms or string to parse.</li>\n<li><strong>scansion (str):</strong>  The scansion string.</li>\n<li><strong>meter (Optional[Meter]):</strong>  The meter to use for parsing.</li>\n<li><strong>parent (Optional[Any]):</strong>  The parent object of this parse.</li>\n<li><strong>positions (Optional[List[ParsePosition]]):</strong>  List of parse positions.</li>\n<li><strong>is_bounded (bool):</strong>  Whether this parse is bounded.</li>\n<li><strong>bounded_by (Optional[List]):</strong>  List of constraints that bound this parse.</li>\n<li><strong>rank (Optional[int]):</strong>  The rank of this parse.</li>\n<li><strong>line_num (Optional[int]):</strong>  The line number.</li>\n<li><strong>stanza_num (Optional[int]):</strong>  The stanza number.</li>\n<li><strong>line_txt (str):</strong>  The text of the line.</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.parsing.parses.Parse.__init__": {"fullname": "prosodic.parsing.parses.Parse.__init__", "modulename": "prosodic.parsing.parses", "qualname": "Parse.__init__", "kind": "function", "doc": "<p>Initialize an Entity object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text content of the entity.</li>\n<li><strong>children (list):</strong>  List of child entities.</li>\n<li><strong>parent (Entity):</strong>  The parent entity.</li>\n<li><strong>**kwargs:</strong>  Additional attributes to set on the entity.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">wordforms_or_str</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordFormList</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">scansion</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">meter</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ForwardRef</span><span class=\"p\">(</span><span class=\"s1\">&#39;Meter&#39;</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">positions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">positions</span><span class=\"o\">.</span><span class=\"n\">ParsePosition</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_bounded</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bounded_by</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rank</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">line_num</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stanza_num</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">line_txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, "prosodic.parsing.parses.Parse.prefix": {"fullname": "prosodic.parsing.parses.Parse.prefix", "modulename": "prosodic.parsing.parses", "qualname": "Parse.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;parse&#x27;"}, "prosodic.parsing.parses.Parse.positions": {"fullname": "prosodic.parsing.parses.Parse.positions", "modulename": "prosodic.parsing.parses", "qualname": "Parse.positions", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.positions_ls": {"fullname": "prosodic.parsing.parses.Parse.positions_ls", "modulename": "prosodic.parsing.parses", "qualname": "Parse.positions_ls", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.line": {"fullname": "prosodic.parsing.parses.Parse.line", "modulename": "prosodic.parsing.parses", "qualname": "Parse.line", "kind": "variable", "doc": "<p>Get the parent line entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Line: The parent line entity, or None if not found.</p>\n</blockquote>\n"}, "prosodic.parsing.parses.Parse.is_bounded": {"fullname": "prosodic.parsing.parses.Parse.is_bounded", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_bounded", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.bounded_by": {"fullname": "prosodic.parsing.parses.Parse.bounded_by", "modulename": "prosodic.parsing.parses", "qualname": "Parse.bounded_by", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.unmetrical": {"fullname": "prosodic.parsing.parses.Parse.unmetrical", "modulename": "prosodic.parsing.parses", "qualname": "Parse.unmetrical", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.comparison_nums": {"fullname": "prosodic.parsing.parses.Parse.comparison_nums", "modulename": "prosodic.parsing.parses", "qualname": "Parse.comparison_nums", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.comparison_parses": {"fullname": "prosodic.parsing.parses.Parse.comparison_parses", "modulename": "prosodic.parsing.parses", "qualname": "Parse.comparison_parses", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.parse_num": {"fullname": "prosodic.parsing.parses.Parse.parse_num", "modulename": "prosodic.parsing.parses", "qualname": "Parse.parse_num", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.total_score": {"fullname": "prosodic.parsing.parses.Parse.total_score", "modulename": "prosodic.parsing.parses", "qualname": "Parse.total_score", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.pause_comparisons": {"fullname": "prosodic.parsing.parses.Parse.pause_comparisons", "modulename": "prosodic.parsing.parses", "qualname": "Parse.pause_comparisons", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.parse_rank": {"fullname": "prosodic.parsing.parses.Parse.parse_rank", "modulename": "prosodic.parsing.parses", "qualname": "Parse.parse_rank", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"fullname": "prosodic.parsing.parses.Parse.num_slots_positioned", "modulename": "prosodic.parsing.parses", "qualname": "Parse.num_slots_positioned", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.children": {"fullname": "prosodic.parsing.parses.Parse.children", "modulename": "prosodic.parsing.parses", "qualname": "Parse.children", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.parses.Parse.line_num": {"fullname": "prosodic.parsing.parses.Parse.line_num", "modulename": "prosodic.parsing.parses", "qualname": "Parse.line_num", "kind": "variable", "doc": "<p>Get the line number.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[int]: The line number.</p>\n</blockquote>\n", "annotation": ": Optional[int]"}, "prosodic.parsing.parses.Parse.stanza_num": {"fullname": "prosodic.parsing.parses.Parse.stanza_num", "modulename": "prosodic.parsing.parses", "qualname": "Parse.stanza_num", "kind": "variable", "doc": "<p>Get the stanza number.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[int]: The stanza number.</p>\n</blockquote>\n", "annotation": ": Optional[int]"}, "prosodic.parsing.parses.Parse.init": {"fullname": "prosodic.parsing.parses.Parse.init", "modulename": "prosodic.parsing.parses", "qualname": "Parse.init", "kind": "function", "doc": "<p>Initialize the parse positions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.to_json": {"fullname": "prosodic.parsing.parses.Parse.to_json", "modulename": "prosodic.parsing.parses", "qualname": "Parse.to_json", "kind": "function", "doc": "<p>Convert the parse to a JSON-serializable dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn (Optional[str]):</strong>  Filename to save the JSON to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: JSON-serializable dictionary representation of the parse.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.from_json": {"fullname": "prosodic.parsing.parses.Parse.from_json", "modulename": "prosodic.parsing.parses", "qualname": "Parse.from_json", "kind": "function", "doc": "<p>Create a Parse object from a JSON dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>json_d (Dict[str, Any]):</strong>  JSON dictionary representation of the parse.</li>\n<li><strong>line (Optional[Union[Text, Stanza, Line]]):</strong>  The line object to associate with the parse.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Parse: A new Parse object created from the JSON data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">json_d</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">stanzas</span><span class=\"o\">.</span><span class=\"n\">Stanza</span><span class=\"p\">,</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.slots": {"fullname": "prosodic.parsing.parses.Parse.slots", "modulename": "prosodic.parsing.parses", "qualname": "Parse.slots", "kind": "variable", "doc": "<p>Get all slots in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[ParseSlot]: List of all slots in the parse.</p>\n</blockquote>\n", "annotation": ": List[prosodic.parsing.slots.ParseSlot]"}, "prosodic.parsing.parses.Parse.is_complete": {"fullname": "prosodic.parsing.parses.Parse.is_complete", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_complete", "kind": "variable", "doc": "<p>Check if the parse is complete.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the parse is complete, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.parses.Parse.extend": {"fullname": "prosodic.parsing.parses.Parse.extend", "modulename": "prosodic.parsing.parses", "qualname": "Parse.extend", "kind": "function", "doc": "<p>Extend the parse with a new metrical position.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>mpos_str (str):</strong>  String representation of the metrical position to add.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[Parse]: The extended parse, or None if extension is not possible.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mpos_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.violset": {"fullname": "prosodic.parsing.parses.Parse.violset", "modulename": "prosodic.parsing.parses", "qualname": "Parse.violset", "kind": "variable", "doc": "<p>Get the set of constraint violations for this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Multiset: A multiset of constraint violations.</p>\n</blockquote>\n", "annotation": ": multiset.Multiset"}, "prosodic.parsing.parses.Parse.branch": {"fullname": "prosodic.parsing.parses.Parse.branch", "modulename": "prosodic.parsing.parses", "qualname": "Parse.branch", "kind": "function", "doc": "<p>Create branching parses from this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Parse]: List of branching parses.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.sort_key": {"fullname": "prosodic.parsing.parses.Parse.sort_key", "modulename": "prosodic.parsing.parses", "qualname": "Parse.sort_key", "kind": "variable", "doc": "<p>Get the sort key for this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: A tuple used for sorting parses.</p>\n</blockquote>\n", "annotation": ": tuple"}, "prosodic.parsing.parses.Parse.constraints": {"fullname": "prosodic.parsing.parses.Parse.constraints", "modulename": "prosodic.parsing.parses", "qualname": "Parse.constraints", "kind": "variable", "doc": "<p>Get the list of constraints for this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Callable]: List of constraint functions.</p>\n</blockquote>\n", "annotation": ": List[Callable]"}, "prosodic.parsing.parses.Parse.constraint_d": {"fullname": "prosodic.parsing.parses.Parse.constraint_d", "modulename": "prosodic.parsing.parses", "qualname": "Parse.constraint_d", "kind": "variable", "doc": "<p>Get a dictionary of constraints keyed by their names.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Callable]: Dictionary of constraints.</p>\n</blockquote>\n", "annotation": ": Dict[str, Callable]"}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"fullname": "prosodic.parsing.parses.Parse.categorical_constraint_d", "modulename": "prosodic.parsing.parses", "qualname": "Parse.categorical_constraint_d", "kind": "variable", "doc": "<p>Get a dictionary of categorical constraints keyed by their names.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Callable]: Dictionary of categorical constraints.</p>\n</blockquote>\n", "annotation": ": Dict[str, Callable]"}, "prosodic.parsing.parses.Parse.can_compare": {"fullname": "prosodic.parsing.parses.Parse.can_compare", "modulename": "prosodic.parsing.parses", "qualname": "Parse.can_compare", "kind": "function", "doc": "<p>Check if this parse can be compared to another parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>other (Parse):</strong>  The other parse to compare to.</li>\n<li><strong>min_slots (int):</strong>  Minimum number of slots required for comparison.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the parses can be compared, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span>, </span><span class=\"param\"><span class=\"n\">min_slots</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.txt": {"fullname": "prosodic.parsing.parses.Parse.txt", "modulename": "prosodic.parsing.parses", "qualname": "Parse.txt", "kind": "variable", "doc": "<p>Get the text representation of the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: Text representation of the parse.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"fullname": "prosodic.parsing.parses.Parse.num_stressed_sylls", "modulename": "prosodic.parsing.parses", "qualname": "Parse.num_stressed_sylls", "kind": "variable", "doc": "<p>Get the number of stressed syllables in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: Number of stressed syllables.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parses.Parse.num_sylls": {"fullname": "prosodic.parsing.parses.Parse.num_sylls", "modulename": "prosodic.parsing.parses", "qualname": "Parse.num_sylls", "kind": "variable", "doc": "<p>Get the total number of syllables in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: Total number of syllables.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parses.Parse.num_words": {"fullname": "prosodic.parsing.parses.Parse.num_words", "modulename": "prosodic.parsing.parses", "qualname": "Parse.num_words", "kind": "variable", "doc": "<p>Get the number of words in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: Number of words.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parses.Parse.num_peaks": {"fullname": "prosodic.parsing.parses.Parse.num_peaks", "modulename": "prosodic.parsing.parses", "qualname": "Parse.num_peaks", "kind": "variable", "doc": "<p>Get the number of metrical peaks in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: Number of metrical peaks.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parses.Parse.is_rising": {"fullname": "prosodic.parsing.parses.Parse.is_rising", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_rising", "kind": "variable", "doc": "<p>Check if the parse has a rising rhythm.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[bool]: True if rising, False if falling, None if undetermined.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.parsing.parses.Parse.nary_feet": {"fullname": "prosodic.parsing.parses.Parse.nary_feet", "modulename": "prosodic.parsing.parses", "qualname": "Parse.nary_feet", "kind": "variable", "doc": "<p>Get the n-ary foot type of the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The n-ary foot type (2 for binary, 3 for ternary, etc.).</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parses.Parse.feet": {"fullname": "prosodic.parsing.parses.Parse.feet", "modulename": "prosodic.parsing.parses", "qualname": "Parse.feet", "kind": "variable", "doc": "<p>Get the list of feet in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[str]: List of feet as strings.</p>\n</blockquote>\n", "annotation": ": List[str]"}, "prosodic.parsing.parses.Parse.foot_counts": {"fullname": "prosodic.parsing.parses.Parse.foot_counts", "modulename": "prosodic.parsing.parses", "qualname": "Parse.foot_counts", "kind": "variable", "doc": "<p>Get a counter of foot types in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Counter: Counter of foot types.</p>\n</blockquote>\n", "annotation": ": Counter"}, "prosodic.parsing.parses.Parse.foot_sizes": {"fullname": "prosodic.parsing.parses.Parse.foot_sizes", "modulename": "prosodic.parsing.parses", "qualname": "Parse.foot_sizes", "kind": "variable", "doc": "<p>Get the sizes of feet in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[int]: List of foot sizes.</p>\n</blockquote>\n", "annotation": ": List[int]"}, "prosodic.parsing.parses.Parse.num_positions": {"fullname": "prosodic.parsing.parses.Parse.num_positions", "modulename": "prosodic.parsing.parses", "qualname": "Parse.num_positions", "kind": "variable", "doc": "<p>Get the number of metrical positions in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: Number of metrical positions.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.parses.Parse.foot_type": {"fullname": "prosodic.parsing.parses.Parse.foot_type", "modulename": "prosodic.parsing.parses", "qualname": "Parse.foot_type", "kind": "variable", "doc": "<p>Get the foot type of the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The foot type (e.g., \"iambic\", \"trochaic\", etc.).</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.parses.Parse.is_iambic": {"fullname": "prosodic.parsing.parses.Parse.is_iambic", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_iambic", "kind": "variable", "doc": "<p>Check if the parse is iambic.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if iambic, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.parses.Parse.is_trochaic": {"fullname": "prosodic.parsing.parses.Parse.is_trochaic", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_trochaic", "kind": "variable", "doc": "<p>Check if the parse is trochaic.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if trochaic, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.parses.Parse.is_anapestic": {"fullname": "prosodic.parsing.parses.Parse.is_anapestic", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_anapestic", "kind": "variable", "doc": "<p>Check if the parse is anapestic.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if anapestic, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.parses.Parse.is_dactylic": {"fullname": "prosodic.parsing.parses.Parse.is_dactylic", "modulename": "prosodic.parsing.parses", "qualname": "Parse.is_dactylic", "kind": "variable", "doc": "<p>Check if the parse is dactylic.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if dactylic, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.parses.Parse.average_position_size": {"fullname": "prosodic.parsing.parses.Parse.average_position_size", "modulename": "prosodic.parsing.parses", "qualname": "Parse.average_position_size", "kind": "variable", "doc": "<p>Get the average size of metrical positions in the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: Average position size.</p>\n</blockquote>\n", "annotation": ": float"}, "prosodic.parsing.parses.Parse.attrs": {"fullname": "prosodic.parsing.parses.Parse.attrs", "modulename": "prosodic.parsing.parses", "qualname": "Parse.attrs", "kind": "variable", "doc": "<p>Get a dictionary of attributes for the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: Dictionary of parse attributes.</p>\n</blockquote>\n", "annotation": ": Dict[str, Any]"}, "prosodic.parsing.parses.Parse.line_txt": {"fullname": "prosodic.parsing.parses.Parse.line_txt", "modulename": "prosodic.parsing.parses", "qualname": "Parse.line_txt", "kind": "variable", "doc": "<p>Get the text of the line associated with this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: The text of the line.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.parses.Parse.ambig": {"fullname": "prosodic.parsing.parses.Parse.ambig", "modulename": "prosodic.parsing.parses", "qualname": "Parse.ambig", "kind": "variable", "doc": "<p>Get the ambiguity score of the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[int]: The ambiguity score, or None if not available.</p>\n</blockquote>\n", "annotation": ": Optional[int]"}, "prosodic.parsing.parses.Parse.constraint_viols": {"fullname": "prosodic.parsing.parses.Parse.constraint_viols", "modulename": "prosodic.parsing.parses", "qualname": "Parse.constraint_viols", "kind": "variable", "doc": "<p>Get the constraint violations for this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, List[float]]: Dictionary of constraint violations.</p>\n</blockquote>\n", "annotation": ": Dict[str, List[float]]"}, "prosodic.parsing.parses.Parse.constraint_scores": {"fullname": "prosodic.parsing.parses.Parse.constraint_scores", "modulename": "prosodic.parsing.parses", "qualname": "Parse.constraint_scores", "kind": "variable", "doc": "<p>Get the constraint scores for this parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, float]: Dictionary of constraint scores.</p>\n</blockquote>\n", "annotation": ": Dict[str, float]"}, "prosodic.parsing.parses.Parse.score": {"fullname": "prosodic.parsing.parses.Parse.score", "modulename": "prosodic.parsing.parses", "qualname": "Parse.score", "kind": "variable", "doc": "<p>Get the total score of the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The total score.</p>\n</blockquote>\n", "annotation": ": float"}, "prosodic.parsing.parses.Parse.meter_str": {"fullname": "prosodic.parsing.parses.Parse.meter_str", "modulename": "prosodic.parsing.parses", "qualname": "Parse.meter_str", "kind": "variable", "doc": "<p>Get the meter string representation of the parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>word_sep (str):</strong>  Separator between words.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: Meter string representation.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.parses.Parse.meter_ints": {"fullname": "prosodic.parsing.parses.Parse.meter_ints", "modulename": "prosodic.parsing.parses", "qualname": "Parse.meter_ints", "kind": "variable", "doc": "<p>Get the meter as a tuple of integers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>word_sep (str):</strong>  Separator between words.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: Tuple of integers representing the meter.</p>\n</blockquote>\n", "annotation": ": tuple"}, "prosodic.parsing.parses.Parse.stress_ints": {"fullname": "prosodic.parsing.parses.Parse.stress_ints", "modulename": "prosodic.parsing.parses", "qualname": "Parse.stress_ints", "kind": "variable", "doc": "<p>Get the stress pattern as a tuple of integers.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>word_sep (str):</strong>  Separator between words.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: Tuple of integers representing the stress pattern.</p>\n</blockquote>\n", "annotation": ": tuple"}, "prosodic.parsing.parses.Parse.stress_str": {"fullname": "prosodic.parsing.parses.Parse.stress_str", "modulename": "prosodic.parsing.parses", "qualname": "Parse.stress_str", "kind": "variable", "doc": "<p>Get the stress string representation of the parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>word_sep (str):</strong>  Separator between words.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: Stress string representation.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.parses.Parse.bounding_relation": {"fullname": "prosodic.parsing.parses.Parse.bounding_relation", "modulename": "prosodic.parsing.parses", "qualname": "Parse.bounding_relation", "kind": "function", "doc": "<p>Get the bounding relation between this parse and another parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>parse (Parse):</strong>  The other parse to compare to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Bounding: The bounding relation.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parse</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">Bounding</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.bounds": {"fullname": "prosodic.parsing.parses.Parse.bounds", "modulename": "prosodic.parsing.parses", "qualname": "Parse.bounds", "kind": "function", "doc": "<p>Check if this parse bounds another parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>parse (Parse):</strong>  The other parse to compare to.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if this parse bounds the other parse, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parse</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">parsing</span><span class=\"o\">.</span><span class=\"n\">parses</span><span class=\"o\">.</span><span class=\"n\">Parse</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.html": {"fullname": "prosodic.parsing.parses.Parse.html", "modulename": "prosodic.parsing.parses", "qualname": "Parse.html", "kind": "variable", "doc": "<p>Get an HTML representation of the parse.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: HTML representation of the parse.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.parses.Parse.to_html": {"fullname": "prosodic.parsing.parses.Parse.to_html", "modulename": "prosodic.parsing.parses", "qualname": "Parse.to_html", "kind": "function", "doc": "<p>Convert the parse to an HTML representation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>as_str (bool):</strong>  Whether to return the HTML as a string.</li>\n<li><strong>css (str):</strong>  CSS styles to apply to the HTML.</li>\n<li><strong>blockquote (bool):</strong>  Whether to include a blockquote with parse attributes.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Union[str, HTML]: HTML representation of the parse.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">.miniquote { margin-left:0em;margin-top:.5em;font-family:monospace; font-size:.8em;}</span><span class=\"se\">\\n</span><span class=\"s1\">.parse { line-height:2.5em; letter-spacing:.1em;}</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist { list-style-type: none; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist li { padding-left:2em;}</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist li:nth-child(5n) { list-style-type: decimal; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parse { text-decoration-offset:5px; }</span><span class=\"se\">\\n\\n</span><span class=\"s1\">.viol_y { text-decoration-color:#f43838; color: #f43838; }</span><span class=\"se\">\\n</span><span class=\"s1\">.mtr_s { text-decoration: overline; }</span><span class=\"se\">\\n</span><span class=\"s1\">.str_s { font-weight:600; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist &gt; li:first-of-type { list-style-type: decimal; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist &gt; li:last-of-type { list-style-type: decimal; }</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">blockquote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">ForwardRef</span><span class=\"p\">(</span><span class=\"s1\">&#39;HTML&#39;</span><span class=\"p\">)]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"fullname": "prosodic.parsing.parses.Parse.wordtoken2slots", "modulename": "prosodic.parsing.parses", "qualname": "Parse.wordtoken2slots", "kind": "variable", "doc": "<p>Get a dictionary mapping word tokens to their corresponding parse slots.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, List[ParseSlot]]: Dictionary mapping word tokens to parse slots.</p>\n</blockquote>\n", "annotation": ": Dict[str, List[prosodic.parsing.slots.ParseSlot]]"}, "prosodic.parsing.parses.Parse.stats_d": {"fullname": "prosodic.parsing.parses.Parse.stats_d", "modulename": "prosodic.parsing.parses", "qualname": "Parse.stats_d", "kind": "function", "doc": "<p>Get a dictionary of statistics for the parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>norm (Optional[bool]):</strong>  Whether to normalize the statistics.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: Dictionary of parse statistics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">norm</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.parses.Parse.get_df": {"fullname": "prosodic.parsing.parses.Parse.get_df", "modulename": "prosodic.parsing.parses", "qualname": "Parse.get_df", "kind": "function", "doc": "<p>Get a DataFrame representation of the parse.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>*x:</strong>  Additional positional arguments.</li>\n<li><strong>**y:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: DataFrame representation of the parse.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.positions": {"fullname": "prosodic.parsing.positions", "modulename": "prosodic.parsing.positions", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.positions.ParsePosition": {"fullname": "prosodic.parsing.positions.ParsePosition", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition", "kind": "class", "doc": "<p>Represents a position in a metrical parse.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>viold:</strong>  Dict of lists of violations; length of these lists == length of <code>slots</code>.</li>\n<li><strong>violset:</strong>  Set of all violations on this position.</li>\n<li><strong>slots:</strong>  List of child slots.</li>\n<li><strong>parse:</strong>  Parent parse object.</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.parsing.positions.ParsePosition.__init__": {"fullname": "prosodic.parsing.positions.ParsePosition.__init__", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.__init__", "kind": "function", "doc": "<p>Initialize a ParsePosition.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>meter_val:</strong>  String representing whether the position is 's' or 'w'.</li>\n<li><strong>children:</strong>  List of child slots.</li>\n<li><strong>parent:</strong>  Parent parse object.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">meter_val</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ForwardRef</span><span class=\"p\">(</span><span class=\"s1\">&#39;Parse&#39;</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.parsing.positions.ParsePosition.prefix": {"fullname": "prosodic.parsing.positions.ParsePosition.prefix", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;meterpos&#x27;"}, "prosodic.parsing.positions.ParsePosition.viold": {"fullname": "prosodic.parsing.positions.ParsePosition.viold", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.viold", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, List[int]]"}, "prosodic.parsing.positions.ParsePosition.violset": {"fullname": "prosodic.parsing.positions.ParsePosition.violset", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.violset", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Set[str]"}, "prosodic.parsing.positions.ParsePosition.slots": {"fullname": "prosodic.parsing.positions.ParsePosition.slots", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.slots", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List"}, "prosodic.parsing.positions.ParsePosition.parse": {"fullname": "prosodic.parsing.positions.ParsePosition.parse", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.parse", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &quot;Optional[&#x27;Parse&#x27;]&quot;"}, "prosodic.parsing.positions.ParsePosition.init": {"fullname": "prosodic.parsing.positions.ParsePosition.init", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.init", "kind": "function", "doc": "<p>Initialize violations for this position.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.positions.ParsePosition.to_json": {"fullname": "prosodic.parsing.positions.ParsePosition.to_json", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.to_json", "kind": "function", "doc": "<p>Convert the ParsePosition to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary representation of the ParsePosition.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.positions.ParsePosition.attrs": {"fullname": "prosodic.parsing.positions.ParsePosition.attrs", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.attrs", "kind": "variable", "doc": "<p>Get the attributes of this ParsePosition.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of attributes.</p>\n</blockquote>\n", "annotation": ": Dict"}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"fullname": "prosodic.parsing.positions.ParsePosition.constraint_viols", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.constraint_viols", "kind": "variable", "doc": "<p>Get the constraint violations for this position.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of constraint violations.</p>\n</blockquote>\n", "annotation": ": Dict[str, List[int]]"}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"fullname": "prosodic.parsing.positions.ParsePosition.constraint_scores", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.constraint_scores", "kind": "variable", "doc": "<p>Get the constraint scores for this position.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of constraint scores.</p>\n</blockquote>\n", "annotation": ": Dict[str, int]"}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"fullname": "prosodic.parsing.positions.ParsePosition.constraint_set", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.constraint_set", "kind": "variable", "doc": "<p>Get the set of constraints violated by this position.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A set of constraint names.</p>\n</blockquote>\n", "annotation": ": Set[str]"}, "prosodic.parsing.positions.ParsePosition.is_prom": {"fullname": "prosodic.parsing.positions.ParsePosition.is_prom", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.is_prom", "kind": "variable", "doc": "<p>Check if this position is prominent.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the position is prominent, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.positions.ParsePosition.txt": {"fullname": "prosodic.parsing.positions.ParsePosition.txt", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.txt", "kind": "variable", "doc": "<p>Get the text representation of this position.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string representation of the position.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.positions.ParsePosition.meter_str": {"fullname": "prosodic.parsing.positions.ParsePosition.meter_str", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.meter_str", "kind": "variable", "doc": "<p>Get the meter string for this position.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string representing the meter of this position.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.positions.ParsePosition.num_slots": {"fullname": "prosodic.parsing.positions.ParsePosition.num_slots", "modulename": "prosodic.parsing.positions", "qualname": "ParsePosition.num_slots", "kind": "variable", "doc": "<p>Get the number of slots in this position.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The number of slots.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.slots": {"fullname": "prosodic.parsing.slots", "modulename": "prosodic.parsing.slots", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.slots.ParseSlot": {"fullname": "prosodic.parsing.slots.ParseSlot", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot", "kind": "class", "doc": "<p>Represents a slot in a metrical parse.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>prefix (str):</strong>  The prefix for this entity type.</li>\n<li><strong>unit (Syllable):</strong>  The syllable associated with this slot.</li>\n<li><strong>viold (Dict[str, Any]):</strong>  Dictionary of violation data.</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.parsing.slots.ParseSlot.__init__": {"fullname": "prosodic.parsing.slots.ParseSlot.__init__", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.__init__", "kind": "function", "doc": "<p>Initialize a ParseSlot.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>unit:</strong>  The syllable associated with this slot.</li>\n<li><strong>parent:</strong>  The parent entity.</li>\n<li><strong>children:</strong>  List of child entities.</li>\n<li><strong>viold:</strong>  Dictionary of violation data.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">syllables</span><span class=\"o\">.</span><span class=\"n\">Syllable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">viold</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.parsing.slots.ParseSlot.prefix": {"fullname": "prosodic.parsing.slots.ParseSlot.prefix", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;meterslot&#x27;"}, "prosodic.parsing.slots.ParseSlot.unit": {"fullname": "prosodic.parsing.slots.ParseSlot.unit", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.unit", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.slots.ParseSlot.viold": {"fullname": "prosodic.parsing.slots.ParseSlot.viold", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.viold", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.parsing.slots.ParseSlot.to_json": {"fullname": "prosodic.parsing.slots.ParseSlot.to_json", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.to_json", "kind": "function", "doc": "<p>Convert the ParseSlot to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary representation of the ParseSlot.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.slots.ParseSlot.violset": {"fullname": "prosodic.parsing.slots.ParseSlot.violset", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.violset", "kind": "variable", "doc": "<p>Set of constraint violations.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A set of constraint violation keys.</p>\n</blockquote>\n", "annotation": ": Set[str]"}, "prosodic.parsing.slots.ParseSlot.num_viols": {"fullname": "prosodic.parsing.slots.ParseSlot.num_viols", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.num_viols", "kind": "variable", "doc": "<p>Number of constraint violations.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The number of constraint violations.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"fullname": "prosodic.parsing.slots.ParseSlot.constraint_scores", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.constraint_scores", "kind": "variable", "doc": "<p>Dictionary of constraint scores.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of constraint scores.</p>\n</blockquote>\n", "annotation": ": Dict[str, Any]"}, "prosodic.parsing.slots.ParseSlot.meter_val": {"fullname": "prosodic.parsing.slots.ParseSlot.meter_val", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.meter_val", "kind": "variable", "doc": "<p>Meter value of the parent.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The meter value of the parent.</p>\n</blockquote>\n", "annotation": ": Any"}, "prosodic.parsing.slots.ParseSlot.is_prom": {"fullname": "prosodic.parsing.slots.ParseSlot.is_prom", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.is_prom", "kind": "variable", "doc": "<p>Whether the slot is prominent.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the slot is prominent, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.slots.ParseSlot.wordform": {"fullname": "prosodic.parsing.slots.ParseSlot.wordform", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.wordform", "kind": "variable", "doc": "<p>The wordform associated with this slot.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The wordform associated with this slot.</p>\n</blockquote>\n", "annotation": ": Any"}, "prosodic.parsing.slots.ParseSlot.syll": {"fullname": "prosodic.parsing.slots.ParseSlot.syll", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.syll", "kind": "variable", "doc": "<p>The syllable associated with this slot.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The syllable associated with this slot.</p>\n</blockquote>\n", "annotation": ": prosodic.words.syllables.Syllable"}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"fullname": "prosodic.parsing.slots.ParseSlot.is_stressed", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.is_stressed", "kind": "variable", "doc": "<p>Whether the syllable is stressed.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is stressed, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"fullname": "prosodic.parsing.slots.ParseSlot.is_heavy", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.is_heavy", "kind": "variable", "doc": "<p>Whether the syllable is heavy.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is heavy, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.slots.ParseSlot.is_strong": {"fullname": "prosodic.parsing.slots.ParseSlot.is_strong", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.is_strong", "kind": "variable", "doc": "<p>Whether the syllable is strong.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is strong, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.slots.ParseSlot.is_weak": {"fullname": "prosodic.parsing.slots.ParseSlot.is_weak", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.is_weak", "kind": "variable", "doc": "<p>Whether the syllable is weak.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is weak, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.slots.ParseSlot.score": {"fullname": "prosodic.parsing.slots.ParseSlot.score", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.score", "kind": "variable", "doc": "<p>Total violation score.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The total violation score.</p>\n</blockquote>\n", "annotation": ": float"}, "prosodic.parsing.slots.ParseSlot.has_viol": {"fullname": "prosodic.parsing.slots.ParseSlot.has_viol", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.has_viol", "kind": "variable", "doc": "<p>Whether the slot has any violations.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the slot has any violations, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.parsing.slots.ParseSlot.txt": {"fullname": "prosodic.parsing.slots.ParseSlot.txt", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.txt", "kind": "variable", "doc": "<p>Text representation of the slot.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The text representation of the slot.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.parsing.slots.ParseSlot.i": {"fullname": "prosodic.parsing.slots.ParseSlot.i", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.i", "kind": "variable", "doc": "<p>Index of the slot in the parent's slots list.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The index of the slot in the parent's slots list.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.parsing.slots.ParseSlot.attrs": {"fullname": "prosodic.parsing.slots.ParseSlot.attrs", "modulename": "prosodic.parsing.slots", "qualname": "ParseSlot.attrs", "kind": "variable", "doc": "<p>Dictionary of attributes for the slot.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of attributes for the slot.</p>\n</blockquote>\n", "annotation": ": Dict[str, Any]"}, "prosodic.parsing.utils": {"fullname": "prosodic.parsing.utils", "modulename": "prosodic.parsing.utils", "kind": "module", "doc": "<p></p>\n"}, "prosodic.parsing.utils.Bounding": {"fullname": "prosodic.parsing.utils.Bounding", "modulename": "prosodic.parsing.utils", "qualname": "Bounding", "kind": "class", "doc": "<p>Represents the potential bounding relations between two parses.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>bounds (int):</strong>  First parse harmonically bounds the second.</li>\n<li><strong>bounded (int):</strong>  First parse is harmonically bounded by the second.</li>\n<li><strong>equal (int):</strong>  The same constraint violation scores.</li>\n<li><strong>unequal (int):</strong>  Unequal scores; neither set of violations is a subset of the other.</li>\n</ul>\n"}, "prosodic.parsing.utils.Bounding.bounds": {"fullname": "prosodic.parsing.utils.Bounding.bounds", "modulename": "prosodic.parsing.utils", "qualname": "Bounding.bounds", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, "prosodic.parsing.utils.Bounding.bounded": {"fullname": "prosodic.parsing.utils.Bounding.bounded", "modulename": "prosodic.parsing.utils", "qualname": "Bounding.bounded", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "1"}, "prosodic.parsing.utils.Bounding.equal": {"fullname": "prosodic.parsing.utils.Bounding.equal", "modulename": "prosodic.parsing.utils", "qualname": "Bounding.equal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, "prosodic.parsing.utils.Bounding.unequal": {"fullname": "prosodic.parsing.utils.Bounding.unequal", "modulename": "prosodic.parsing.utils", "qualname": "Bounding.unequal", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, "prosodic.parsing.utils.get_iambic_parse": {"fullname": "prosodic.parsing.utils.get_iambic_parse", "modulename": "prosodic.parsing.utils", "qualname": "get_iambic_parse", "kind": "function", "doc": "<p>Generate an iambic parse for a given number of syllables.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nsyll (int):</strong>  Number of syllables.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[str]: A list representing the iambic parse, where 'w' represents weak\n  and 's' represents strong positions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nsyll</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.utils.split_scansion": {"fullname": "prosodic.parsing.utils.split_scansion", "modulename": "prosodic.parsing.utils", "qualname": "split_scansion", "kind": "function", "doc": "<p>Split a scansion string into positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>wsws:</strong>  The scansion string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of scansion positions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wsws</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.utils.get_possible_scansions": {"fullname": "prosodic.parsing.utils.get_possible_scansions", "modulename": "prosodic.parsing.utils", "qualname": "get_possible_scansions", "kind": "function", "doc": "<p>Get all possible scansions for a given number of syllables.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nsyll:</strong>  Number of syllables.</li>\n<li><strong>max_s:</strong>  Maximum number of strong positions.</li>\n<li><strong>max_w:</strong>  Maximum number of weak positions.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of possible scansions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nsyll</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_s</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">max_w</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.utils.getlenparse": {"fullname": "prosodic.parsing.utils.getlenparse", "modulename": "prosodic.parsing.utils", "qualname": "getlenparse", "kind": "function", "doc": "<p>Get the total length of parsed positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>l:</strong>  List of parsed positions.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The total length of all positions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "prosodic.parsing.utils.iter_mpos": {"fullname": "prosodic.parsing.utils.iter_mpos", "modulename": "prosodic.parsing.utils", "qualname": "iter_mpos", "kind": "function", "doc": "<p>Iterate over possible metrical positions.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nsyll:</strong>  Number of syllables.</li>\n<li><strong>starter:</strong>  Initial list of positions.</li>\n<li><strong>pos_types:</strong>  List of possible position types.</li>\n<li><strong>max_s:</strong>  Maximum number of strong positions.</li>\n<li><strong>max_w:</strong>  Maximum number of weak positions.</li>\n</ul>\n\n<h6 id=\"yields\">Yields:</h6>\n\n<blockquote>\n  <p>Lists of metrical positions.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">nsyll</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">starter</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">pos_types</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_s</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">max_w</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.prosodic": {"fullname": "prosodic.prosodic", "modulename": "prosodic.prosodic", "kind": "module", "doc": "<p></p>\n"}, "prosodic.sents": {"fullname": "prosodic.sents", "modulename": "prosodic.sents", "kind": "module", "doc": "<p></p>\n"}, "prosodic.sents.sents": {"fullname": "prosodic.sents.sents", "modulename": "prosodic.sents.sents", "kind": "module", "doc": "<p></p>\n"}, "prosodic.sents.tokenizers": {"fullname": "prosodic.sents.tokenizers", "modulename": "prosodic.sents.tokenizers", "kind": "module", "doc": "<p></p>\n"}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"fullname": "prosodic.sents.tokenizers.get_sent_tokenizer", "modulename": "prosodic.sents.tokenizers", "qualname": "get_sent_tokenizer", "kind": "function", "doc": "<p>Get a sentence tokenizer function.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A function that tokenizes text into sentences.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If NLTK punkt tokenizer fails to load.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"fullname": "prosodic.sents.tokenizers.tokenize_sents_txt", "modulename": "prosodic.sents.tokenizers", "qualname": "tokenize_sents_txt", "kind": "function", "doc": "<p>Tokenize text into sentences.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The input text to tokenize.</li>\n<li><strong>**y:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of sentences.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.sents.tokenizers.tokenize_words_txt": {"fullname": "prosodic.sents.tokenizers.tokenize_words_txt", "modulename": "prosodic.sents.tokenizers", "qualname": "tokenize_words_txt", "kind": "function", "doc": "<p>Tokenize text into words.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The input text to tokenize.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of words.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"fullname": "prosodic.sents.tokenizers.tokenize_sentwords_df", "modulename": "prosodic.sents.tokenizers", "qualname": "tokenize_sentwords_df", "kind": "function", "doc": "<p>Tokenize text into sentences and words, returning a DataFrame.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The input text to tokenize.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A DataFrame containing tokenized sentences and words.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"fullname": "prosodic.sents.tokenizers.tokenize_sentwords_iter", "modulename": "prosodic.sents.tokenizers", "qualname": "tokenize_sentwords_iter", "kind": "function", "doc": "<p>Tokenize text into sentences and words, yielding dictionaries.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The input text to tokenize.</li>\n<li><strong>sents:</strong>  Optional pre-tokenized sentences.</li>\n<li><strong>sep_line:</strong>  Line separator.</li>\n<li><strong>sep_stanza:</strong>  Stanza separator.</li>\n<li><strong>seps_phrase:</strong>  Phrase separators.</li>\n<li><strong>para_i:</strong>  Optional paragraph index.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"yields\">Yields:</h6>\n\n<blockquote>\n  <p>Dictionaries containing tokenized word information.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sents</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sep_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sep_stanza</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">seps_phrase</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;,&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u2014&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;)&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;!&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u201c&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u201d&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;:&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u2013&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;]&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u2019&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;\u2018&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;[&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;(&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;?&#39;</span><span class=\"p\">}</span>,</span><span class=\"param\">\t<span class=\"n\">para_i</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts": {"fullname": "prosodic.texts", "modulename": "prosodic.texts", "kind": "module", "doc": "<p></p>\n"}, "prosodic.texts.lines": {"fullname": "prosodic.texts.lines", "modulename": "prosodic.texts.lines", "kind": "module", "doc": "<p></p>\n"}, "prosodic.texts.lines.Line": {"fullname": "prosodic.texts.lines.Line", "modulename": "prosodic.texts.lines", "qualname": "Line", "kind": "class", "doc": "<p>A class representing a line of text in a poem or prose.</p>\n\n<pre><code>This class inherits from Text and represents a single line, typically containing\nwords or tokens. It provides methods for parsing, analyzing, and rendering the line.\n\nAttributes:\n    line_sep (str): Separator string used between lines. Default is \"\n</code></pre>\n\n<p>\".\n        sep (str): Separator string used between words. Default is \"\n\".\n        child_type (str): The type of child entities. Default is \"WordToken\".\n        is_parseable (bool): Whether the line can be parsed. Default is True.\n        prefix (str): Prefix used for identification. Default is \"line\".\n        list_type (str): The type of list used for storing children. Default is 'WordTokenList'.\n        use_cache (bool): Whether to use caching. Default is False.</p>\n", "bases": "prosodic.texts.texts.Text"}, "prosodic.texts.lines.Line.__init__": {"fullname": "prosodic.texts.lines.Line.__init__", "modulename": "prosodic.texts.lines", "qualname": "Line.__init__", "kind": "function", "doc": "<p>Initialize a Line object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text content of the line.</li>\n<li><strong>children (List[Any]):</strong>  List of child entities (usually WordTokens).</li>\n<li><strong>parent (Optional[Any]):</strong>  The parent entity of this line.</li>\n<li><strong>tokens_df (Optional[pd.DataFrame]):</strong>  DataFrame containing tokenized data.</li>\n<li><strong>lang (str):</strong>  The language of the line. Defaults to DEFAULT_LANG.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If neither txt, children, nor tokens_df is provided.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokens_df</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;en&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.texts.lines.Line.line_sep": {"fullname": "prosodic.texts.lines.Line.line_sep", "modulename": "prosodic.texts.lines", "qualname": "Line.line_sep", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;\\n&#x27;"}, "prosodic.texts.lines.Line.sep": {"fullname": "prosodic.texts.lines.Line.sep", "modulename": "prosodic.texts.lines", "qualname": "Line.sep", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;\\n&#x27;"}, "prosodic.texts.lines.Line.child_type": {"fullname": "prosodic.texts.lines.Line.child_type", "modulename": "prosodic.texts.lines", "qualname": "Line.child_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;WordToken&#x27;"}, "prosodic.texts.lines.Line.is_parseable": {"fullname": "prosodic.texts.lines.Line.is_parseable", "modulename": "prosodic.texts.lines", "qualname": "Line.is_parseable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, "prosodic.texts.lines.Line.prefix": {"fullname": "prosodic.texts.lines.Line.prefix", "modulename": "prosodic.texts.lines", "qualname": "Line.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;line&#x27;"}, "prosodic.texts.lines.Line.list_type": {"fullname": "prosodic.texts.lines.Line.list_type", "modulename": "prosodic.texts.lines", "qualname": "Line.list_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;WordTokenList&#x27;"}, "prosodic.texts.lines.Line.use_cache": {"fullname": "prosodic.texts.lines.Line.use_cache", "modulename": "prosodic.texts.lines", "qualname": "Line.use_cache", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, "prosodic.texts.lines.Line.wordform_matrix": {"fullname": "prosodic.texts.lines.Line.wordform_matrix", "modulename": "prosodic.texts.lines", "qualname": "Line.wordform_matrix", "kind": "variable", "doc": "<p>Get the matrix of word forms for the line.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Any]: A matrix of word forms.</p>\n</blockquote>\n", "annotation": ": List[Any]"}, "prosodic.texts.lines.Line.get_wordform_matrix": {"fullname": "prosodic.texts.lines.Line.get_wordform_matrix", "modulename": "prosodic.texts.lines", "qualname": "Line.get_wordform_matrix", "kind": "function", "doc": "<p>Generate a matrix of word forms for the line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>resolve_optionality (bool):</strong>  Whether to resolve optional forms. Default is True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Any]: A matrix of word forms.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">resolve_optionality</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.Line.match_wordforms": {"fullname": "prosodic.texts.lines.Line.match_wordforms", "modulename": "prosodic.texts.lines", "qualname": "Line.match_wordforms", "kind": "function", "doc": "<p>Match given word forms to the line's word forms.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>wordforms (List[Any]):</strong>  List of word forms to match.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: A WordFormList of matched word forms.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">wordforms</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.Line.to_json": {"fullname": "prosodic.texts.lines.Line.to_json", "modulename": "prosodic.texts.lines", "qualname": "Line.to_json", "kind": "function", "doc": "<p>Convert the Line object to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary representation of the Line object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.Line.to_html": {"fullname": "prosodic.texts.lines.Line.to_html", "modulename": "prosodic.texts.lines", "qualname": "Line.to_html", "kind": "function", "doc": "<p>Generate an HTML representation of the Line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>parse (Optional[Any]):</strong>  The parse to use for rendering. If None, uses the minimum parse.</li>\n<li><strong>as_str (bool):</strong>  If True, return the result as a string. Default is False.</li>\n<li><strong>css (str):</strong>  CSS styles to include in the HTML. Default is HTML_CSS.</li>\n<li><strong>tooltip (bool):</strong>  Whether to include tooltips. Default is False.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: HTML representation of the Line.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parse</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n</span><span class=\"s1\">.miniquote { margin-left:0em;margin-top:.5em;font-family:monospace; font-size:.8em;}</span><span class=\"se\">\\n</span><span class=\"s1\">.parse { line-height:2.5em; letter-spacing:.1em;}</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist { list-style-type: none; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist li { padding-left:2em;}</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist li:nth-child(5n) { list-style-type: decimal; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parse { text-decoration-offset:5px; }</span><span class=\"se\">\\n\\n</span><span class=\"s1\">.viol_y { text-decoration-color:#f43838; color: #f43838; }</span><span class=\"se\">\\n</span><span class=\"s1\">.mtr_s { text-decoration: overline; }</span><span class=\"se\">\\n</span><span class=\"s1\">.str_s { font-weight:600; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist &gt; li:first-of-type { list-style-type: decimal; }</span><span class=\"se\">\\n</span><span class=\"s1\">.parselist &gt; li:last-of-type { list-style-type: decimal; }</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.Line.stats": {"fullname": "prosodic.texts.lines.Line.stats", "modulename": "prosodic.texts.lines", "qualname": "Line.stats", "kind": "function", "doc": "<p>Get statistics for the line's parses.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>by (str):</strong>  The grouping criterion for statistics. Default is \"parse\".</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: A DataFrame containing parse statistics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">by</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;parse&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.Line.stats_d": {"fullname": "prosodic.texts.lines.Line.stats_d", "modulename": "prosodic.texts.lines", "qualname": "Line.stats_d", "kind": "function", "doc": "<p>Get statistics for the line's parses as a dictionary.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>by (str):</strong>  The grouping criterion for statistics. Default is \"parse\".</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary containing parse statistics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">by</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;parse&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.Line.num_sylls": {"fullname": "prosodic.texts.lines.Line.num_sylls", "modulename": "prosodic.texts.lines", "qualname": "Line.num_sylls", "kind": "variable", "doc": "<p>Get the number of syllables in the line.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The number of syllables.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.texts.lines.Line.rime_distance": {"fullname": "prosodic.texts.lines.Line.rime_distance", "modulename": "prosodic.texts.lines", "qualname": "Line.rime_distance", "kind": "function", "doc": "<p>Calculate the rime distance between this line and another line.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>line (Line):</strong>  The line to compare with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The rime distance between the two lines.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">line</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">texts</span><span class=\"o\">.</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">Line</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.lines.LineList": {"fullname": "prosodic.texts.lines.LineList", "modulename": "prosodic.texts.lines", "qualname": "LineList", "kind": "class", "doc": "<p>A list of Entity objects.</p>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"fullname": "prosodic.texts.lines.LineList.get_rhyming_lines", "modulename": "prosodic.texts.lines", "qualname": "LineList.get_rhyming_lines", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_dist</span><span class=\"o\">=</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.texts.stanzas": {"fullname": "prosodic.texts.stanzas", "modulename": "prosodic.texts.stanzas", "kind": "module", "doc": "<p></p>\n"}, "prosodic.texts.stanzas.Stanza": {"fullname": "prosodic.texts.stanzas.Stanza", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza", "kind": "class", "doc": "<p>A class representing a stanza in a poem or text.</p>\n\n<p>This class inherits from Text and represents a group of lines in a poem or text.\nIt provides methods for initializing, converting to JSON, and analyzing rhyme patterns.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>sep (str):</strong>  Separator string used between lines. Default is an empty string.</li>\n<li><strong>child_type (str):</strong>  The type of child entities. Default is \"Line\".</li>\n<li><strong>prefix (str):</strong>  Prefix used for identification. Default is \"stanza\".</li>\n<li><strong>list_type (str):</strong>  The type of list used for storing children. Default is 'LineList'.</li>\n</ul>\n", "bases": "prosodic.texts.texts.Text"}, "prosodic.texts.stanzas.Stanza.__init__": {"fullname": "prosodic.texts.stanzas.Stanza.__init__", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.__init__", "kind": "function", "doc": "<p>Initialize a Stanza object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text content of the stanza.</li>\n<li><strong>children (List[Any]):</strong>  List of child entities (usually Lines).</li>\n<li><strong>parent (Optional[Any]):</strong>  The parent entity of this stanza.</li>\n<li><strong>tokens_df (Optional[pd.DataFrame]):</strong>  DataFrame containing tokenized data.</li>\n<li><strong>lang (str):</strong>  The language of the stanza. Defaults to DEFAULT_LANG.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If neither txt, children, nor tokens_df is provided.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tokens_df</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;en&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.texts.stanzas.Stanza.sep": {"fullname": "prosodic.texts.stanzas.Stanza.sep", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.sep", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;&#x27;"}, "prosodic.texts.stanzas.Stanza.child_type": {"fullname": "prosodic.texts.stanzas.Stanza.child_type", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.child_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Line&#x27;"}, "prosodic.texts.stanzas.Stanza.prefix": {"fullname": "prosodic.texts.stanzas.Stanza.prefix", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;stanza&#x27;"}, "prosodic.texts.stanzas.Stanza.list_type": {"fullname": "prosodic.texts.stanzas.Stanza.list_type", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.list_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;LineList&#x27;"}, "prosodic.texts.stanzas.Stanza.to_json": {"fullname": "prosodic.texts.stanzas.Stanza.to_json", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.to_json", "kind": "function", "doc": "<p>Convert the Stanza object to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary representation of the Stanza object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"fullname": "prosodic.texts.stanzas.Stanza.get_rhyming_lines", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.get_rhyming_lines", "kind": "function", "doc": "<p>Get the rhyming lines within the stanza.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>max_dist (int):</strong>  Maximum distance between rhyming lines. Default is RHYME_MAX_DIST.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[Any, Any]: A dictionary of rhyming lines.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_dist</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"fullname": "prosodic.texts.stanzas.Stanza.num_rhyming_lines", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.num_rhyming_lines", "kind": "variable", "doc": "<p>Get the number of rhyming lines in the stanza.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The number of rhyming lines.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"fullname": "prosodic.texts.stanzas.Stanza.is_rhyming", "modulename": "prosodic.texts.stanzas", "qualname": "Stanza.is_rhyming", "kind": "variable", "doc": "<p>Check if the stanza contains rhyming lines.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the stanza contains rhyming lines, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.texts.stanzas.StanzaList": {"fullname": "prosodic.texts.stanzas.StanzaList", "modulename": "prosodic.texts.stanzas", "qualname": "StanzaList", "kind": "class", "doc": "<p>A list of Entity objects.</p>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.texts.texts": {"fullname": "prosodic.texts.texts", "modulename": "prosodic.texts.texts", "kind": "module", "doc": "<p></p>\n"}, "prosodic.texts.texts.NUMBUILT": {"fullname": "prosodic.texts.texts.NUMBUILT", "modulename": "prosodic.texts.texts", "qualname": "NUMBUILT", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "prosodic.texts.texts.Text": {"fullname": "prosodic.texts.texts.Text", "modulename": "prosodic.texts.texts", "qualname": "Text", "kind": "class", "doc": "<p>A class that represents a text structure, usually comprised of stanzas.</p>\n\n<p>This class inherits from the Entity class and is responsible for parsing and managing\na body of text. It supports caching for efficient retrieval of parsed data and allows\nfor text analysis at various granularities.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>sep (str):</strong>  Separator string used in text processing. Default is an empty string.</li>\n<li><strong>child_type (str):</strong>  The type of child entity expected within the text. Default is \"Stanza\".</li>\n<li><strong>prefix (str):</strong>  Prefix identifier for the text entity. Default is \"text\".</li>\n<li><strong>parse_unit_attr (str):</strong>  Attribute name representing the unit to be parsed. Default is \"lines\".</li>\n<li><strong>list_type (StanzaList):</strong>  The class type for containing child entities. Default is StanzaList.</li>\n<li><strong>use_cache (bool):</strong>  Flag to determine if caching should be used. Default value is taken from USE_CACHE.</li>\n<li><strong>cached_properties_to_clear (list of str):</strong>  List of property names whose cache should be cleared when appropriate.</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.texts.texts.Text.__init__": {"fullname": "prosodic.texts.texts.Text.__init__", "modulename": "prosodic.texts.texts", "qualname": "Text.__init__", "kind": "function", "doc": "<p>Initializes an instance of the class.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text string. Default is an empty string.</li>\n<li><strong>fn (str):</strong>  A path or URL to a text file to read</li>\n<li><strong>lang (Optional[str]):</strong>  The language of the text. Default is DEFAULT_LANG.</li>\n<li><strong>parent (Optional[Entity]):</strong>  The parent entity. Default is None.</li>\n<li><strong>children (Optional[list]):</strong>  The list of child entities. Default is an empty list.</li>\n<li><strong>tokens_df (Optional[pd.DataFrame]):</strong>  The token dataframe. Default is None.</li>\n<li><strong>use_cache (bool):</strong>  Whether to use cache. Default is USE_CACHE.</li>\n<li><strong>force (bool):</strong>  Force parsing regardless of current state. Default is False.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If neither txt string, filename, nor token dataframe is provided.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;en&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">ents</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">tokens_df</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_cache</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.texts.texts.Text.sep": {"fullname": "prosodic.texts.texts.Text.sep", "modulename": "prosodic.texts.texts", "qualname": "Text.sep", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;&#x27;"}, "prosodic.texts.texts.Text.child_type": {"fullname": "prosodic.texts.texts.Text.child_type", "modulename": "prosodic.texts.texts", "qualname": "Text.child_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Stanza&#x27;"}, "prosodic.texts.texts.Text.prefix": {"fullname": "prosodic.texts.texts.Text.prefix", "modulename": "prosodic.texts.texts", "qualname": "Text.prefix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;text&#x27;"}, "prosodic.texts.texts.Text.parse_unit_attr": {"fullname": "prosodic.texts.texts.Text.parse_unit_attr", "modulename": "prosodic.texts.texts", "qualname": "Text.parse_unit_attr", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;lines&#x27;"}, "prosodic.texts.texts.Text.list_type": {"fullname": "prosodic.texts.texts.Text.list_type", "modulename": "prosodic.texts.texts", "qualname": "Text.list_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;StanzaList&#x27;"}, "prosodic.texts.texts.Text.use_cache": {"fullname": "prosodic.texts.texts.Text.use_cache", "modulename": "prosodic.texts.texts", "qualname": "Text.use_cache", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"fullname": "prosodic.texts.texts.Text.cached_properties_to_clear", "modulename": "prosodic.texts.texts", "qualname": "Text.cached_properties_to_clear", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;best_parses&#x27;, &#x27;all_parses&#x27;, &#x27;unbounded_parses&#x27;, &#x27;parse_stats&#x27;, &#x27;meter&#x27;]"}, "prosodic.texts.texts.Text.lang": {"fullname": "prosodic.texts.texts.Text.lang", "modulename": "prosodic.texts.texts", "qualname": "Text.lang", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.texts.texts.Text.parses_from_cache": {"fullname": "prosodic.texts.texts.Text.parses_from_cache", "modulename": "prosodic.texts.texts", "qualname": "Text.parses_from_cache", "kind": "function", "doc": "<p>Retrieve parses from cache.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>List[Any]: A list of cached parses.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.to_hash": {"fullname": "prosodic.texts.texts.Text.to_hash", "modulename": "prosodic.texts.texts", "qualname": "Text.to_hash", "kind": "function", "doc": "<p>Generate a hash string for the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: A hash string representation of the text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.to_json": {"fullname": "prosodic.texts.texts.Text.to_json", "modulename": "prosodic.texts.texts", "qualname": "Text.to_json", "kind": "function", "doc": "<p>Convert the text object to JSON format.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A JSON representation of the text object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.get_meter": {"fullname": "prosodic.texts.texts.Text.get_meter", "modulename": "prosodic.texts.texts", "qualname": "Text.get_meter", "kind": "function", "doc": "<p>Get or set the meter for the text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>meter (Optional[Any]):</strong>  A meter object to set. Default is None.</li>\n<li><strong>**meter_kwargs:</strong>  Additional keyword arguments for meter configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The current meter object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">meter</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">meter_kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.set_meter": {"fullname": "prosodic.texts.texts.Text.set_meter", "modulename": "prosodic.texts.texts", "qualname": "Text.set_meter", "kind": "function", "doc": "<p>Set the meter for the text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**meter_kwargs:</strong>  Keyword arguments for meter configuration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">meter_kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.meter": {"fullname": "prosodic.texts.texts.Text.meter", "modulename": "prosodic.texts.texts", "qualname": "Text.meter", "kind": "variable", "doc": "<p>Get the meter for the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The current meter object.</p>\n</blockquote>\n", "annotation": ": Any"}, "prosodic.texts.texts.Text.best_parse": {"fullname": "prosodic.texts.texts.Text.best_parse", "modulename": "prosodic.texts.texts", "qualname": "Text.best_parse", "kind": "variable", "doc": "<p>Get the best parse for the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The best parse object.</p>\n</blockquote>\n", "annotation": ": Any"}, "prosodic.texts.texts.Text.parseable_units": {"fullname": "prosodic.texts.texts.Text.parseable_units", "modulename": "prosodic.texts.texts", "qualname": "Text.parseable_units", "kind": "variable", "doc": "<p>Get the parseable units for the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The parseable units.</p>\n</blockquote>\n", "annotation": ": Any"}, "prosodic.texts.texts.Text.needs_parsing": {"fullname": "prosodic.texts.texts.Text.needs_parsing", "modulename": "prosodic.texts.texts", "qualname": "Text.needs_parsing", "kind": "function", "doc": "<p>Check if the text needs parsing.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>force (bool):</strong>  Force parsing regardless of current state. Default is False.</li>\n<li><strong>meter (Optional[Any]):</strong>  A meter object to compare against. Default is None.</li>\n<li><strong>**meter_kwargs:</strong>  Additional keyword arguments for meter configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if parsing is needed, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">meter</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">meter_kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.parse": {"fullname": "prosodic.texts.texts.Text.parse", "modulename": "prosodic.texts.texts", "qualname": "Text.parse", "kind": "function", "doc": "<p>Parse the text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**kwargs:</strong>  Keyword arguments for parsing configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The parsed result.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.render": {"fullname": "prosodic.texts.texts.Text.render", "modulename": "prosodic.texts.texts", "qualname": "Text.render", "kind": "function", "doc": "<p>Render the parsed text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>as_str (bool):</strong>  If True, return the result as a string. Default is False.</li>\n<li><strong>blockquote (bool):</strong>  If True, render as a blockquote. Default is False.</li>\n<li><strong>**meter_kwargs:</strong>  Additional keyword arguments for meter configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The rendered text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">blockquote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">meter_kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.reset_meter": {"fullname": "prosodic.texts.texts.Text.reset_meter", "modulename": "prosodic.texts.texts", "qualname": "Text.reset_meter", "kind": "function", "doc": "<p>Reset the meter with new configuration.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>**meter_kwargs:</strong>  Keyword arguments for meter configuration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">meter_kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.parse_iter": {"fullname": "prosodic.texts.texts.Text.parse_iter", "modulename": "prosodic.texts.texts", "qualname": "Text.parse_iter", "kind": "function", "doc": "<p>Parse the text iteratively.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>num_proc (int):</strong>  Number of processes to use for parallel processing. Default is DEFAULT_NUM_PROC.</li>\n<li><strong>progress (bool):</strong>  If True, show progress. Default is True.</li>\n<li><strong>force (bool):</strong>  Force parsing regardless of current state. Default is False.</li>\n<li><strong>meter (Optional[Any]):</strong>  A meter object to use. Default is None.</li>\n<li><strong>defaults (bool):</strong>  If True, use default meter configuration. Default is False.</li>\n<li><strong>**meter_kwargs:</strong>  Additional keyword arguments for meter configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The parsed result.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">num_proc</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">progress</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">meter</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">defaults</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">meter_kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.parses": {"fullname": "prosodic.texts.texts.Text.parses", "modulename": "prosodic.texts.texts", "qualname": "Text.parses", "kind": "variable", "doc": "<p>Get the parses for the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The parses object.</p>\n</blockquote>\n", "annotation": ": Any"}, "prosodic.texts.texts.Text.parse_stats": {"fullname": "prosodic.texts.texts.Text.parse_stats", "modulename": "prosodic.texts.texts", "qualname": "Text.parse_stats", "kind": "function", "doc": "<p>Get the parse statistics for the text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>norm (bool):</strong>  If True, normalize the statistics. Default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>pd.DataFrame: A DataFrame containing the parse statistics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">norm</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.to_html": {"fullname": "prosodic.texts.texts.Text.to_html", "modulename": "prosodic.texts.texts", "qualname": "Text.to_html", "kind": "function", "doc": "<p>Convert the parsed text to HTML format.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>as_str (bool):</strong>  If True, return the result as a string. Default is False.</li>\n<li><strong>blockquote (bool):</strong>  If True, render as a blockquote. Default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Any: The HTML representation of the parsed text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">blockquote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.get_rhyming_lines": {"fullname": "prosodic.texts.texts.Text.get_rhyming_lines", "modulename": "prosodic.texts.texts", "qualname": "Text.get_rhyming_lines", "kind": "function", "doc": "<p>Get rhyming lines from the text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>max_dist (int):</strong>  Maximum distance for rhyme detection. Default is RHYME_MAX_DIST.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[Any, Any]: A dictionary of rhyming lines.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">max_dist</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.texts.texts.Text.rhyming_lines": {"fullname": "prosodic.texts.texts.Text.rhyming_lines", "modulename": "prosodic.texts.texts", "qualname": "Text.rhyming_lines", "kind": "variable", "doc": "<p>Get the rhyming lines for the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[Any, Any]: A dictionary of rhyming lines.</p>\n</blockquote>\n", "annotation": ": Dict[Any, Any]"}, "prosodic.texts.texts.Text.num_lines": {"fullname": "prosodic.texts.texts.Text.num_lines", "modulename": "prosodic.texts.texts", "qualname": "Text.num_lines", "kind": "variable", "doc": "<p>Get the number of lines in the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The number of lines.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.texts.texts.Text.num_rhyming_lines": {"fullname": "prosodic.texts.texts.Text.num_rhyming_lines", "modulename": "prosodic.texts.texts", "qualname": "Text.num_rhyming_lines", "kind": "variable", "doc": "<p>Get the number of rhyming lines in the text.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: The number of rhyming lines.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.texts.texts.Text.is_rhyming": {"fullname": "prosodic.texts.texts.Text.is_rhyming", "modulename": "prosodic.texts.texts", "qualname": "Text.is_rhyming", "kind": "variable", "doc": "<p>Check if the text is rhyming.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: True if the text is rhyming, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.utils": {"fullname": "prosodic.utils", "modulename": "prosodic.utils", "kind": "module", "doc": "<p></p>\n"}, "prosodic.utils.SimpleCache": {"fullname": "prosodic.utils.SimpleCache", "modulename": "prosodic.utils", "qualname": "SimpleCache", "kind": "class", "doc": "<p>A simple file-based caching system.</p>\n\n<p>This class provides a dictionary-like interface for caching objects to disk.\nIt uses a two-level directory structure to organize cached files.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>root_dir (str):</strong>  The root directory for storing cached files.</li>\n</ul>\n"}, "prosodic.utils.SimpleCache.__init__": {"fullname": "prosodic.utils.SimpleCache.__init__", "modulename": "prosodic.utils", "qualname": "SimpleCache.__init__", "kind": "function", "doc": "<p>Initialize the SimpleCache.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>root_dir:</strong>  The root directory for storing cached files.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">root_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/Users/ryan/prosodic_data/data/cache&#39;</span></span>)</span>"}, "prosodic.utils.SimpleCache.root_dir": {"fullname": "prosodic.utils.SimpleCache.root_dir", "modulename": "prosodic.utils", "qualname": "SimpleCache.root_dir", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.utils.SimpleCache.get": {"fullname": "prosodic.utils.SimpleCache.get", "modulename": "prosodic.utils", "qualname": "SimpleCache.get", "kind": "function", "doc": "<p>Get an item from the cache with a default value.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>key:</strong>  The cache key.</li>\n<li><strong>default:</strong>  The default value to return if the key is not found.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The cached value or the default value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.retry_on_io_error": {"fullname": "prosodic.utils.retry_on_io_error", "modulename": "prosodic.utils", "qualname": "retry_on_io_error", "kind": "function", "doc": "<p>Decorator to retry a function on IOError.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>max_attempts:</strong>  Maximum number of retry attempts.</li>\n<li><strong>delay:</strong>  Delay between retry attempts in seconds.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A decorator function.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_attempts</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">delay</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.group_ents": {"fullname": "prosodic.utils.group_ents", "modulename": "prosodic.utils", "qualname": "group_ents", "kind": "function", "doc": "<p>Group entities based on a common feature.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>l:</strong>  List of entities to group.</li>\n<li><strong>feat:</strong>  The feature to group by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of grouped entities.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">feat</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.groupby": {"fullname": "prosodic.utils.groupby", "modulename": "prosodic.utils", "qualname": "groupby", "kind": "function", "doc": "<p>Group a DataFrame by specified columns.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>df:</strong>  The DataFrame to group.</li>\n<li><strong>groupby:</strong>  Column name(s) to group by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A grouped DataFrame.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If no valid grouping columns are found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">groupby</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"o\">.</span><span class=\"n\">generic</span><span class=\"o\">.</span><span class=\"n\">DataFrameGroupBy</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.get_txt": {"fullname": "prosodic.utils.get_txt", "modulename": "prosodic.utils", "qualname": "get_txt", "kind": "function", "doc": "<p>Get text content from a string, file, or URL.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  Text content or None.</li>\n<li><strong>fn:</strong>  Filename or URL or None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The text content.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.clean_text": {"fullname": "prosodic.utils.clean_text", "modulename": "prosodic.utils", "qualname": "clean_text", "kind": "function", "doc": "<p>Clean and normalize text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The input text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Cleaned and normalized text.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.get_attr_str": {"fullname": "prosodic.utils.get_attr_str", "modulename": "prosodic.utils", "qualname": "get_attr_str", "kind": "function", "doc": "<p>Generate a string representation of attributes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>attrs:</strong>  Dictionary of attributes.</li>\n<li><strong>sep:</strong>  Separator between attribute strings.</li>\n<li><strong>bad_keys:</strong>  List of keys to exclude.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A string representation of the attributes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">attrs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">sep</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;, &#39;</span>,</span><span class=\"param\">\t<span class=\"n\">bad_keys</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.safesum": {"fullname": "prosodic.utils.safesum", "modulename": "prosodic.utils", "qualname": "safesum", "kind": "function", "doc": "<p>Safely sum a list of numbers, ignoring non-numeric values.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>l:</strong>  List of numbers to sum.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The sum of the numeric values in the list.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.setindex": {"fullname": "prosodic.utils.setindex", "modulename": "prosodic.utils", "qualname": "setindex", "kind": "function", "doc": "<p>Set the index of a DataFrame to specified columns.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>df:</strong>  The input DataFrame.</li>\n<li><strong>cols:</strong>  List of column names to set as index.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The DataFrame with the new index set.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.get_stress": {"fullname": "prosodic.utils.get_stress", "modulename": "prosodic.utils", "qualname": "get_stress", "kind": "function", "doc": "<p>Get the stress level from an IPA string.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ipa:</strong>  The IPA string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The stress level ('S', 'P', or 'U').</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ipa</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.get_initial_whitespace": {"fullname": "prosodic.utils.get_initial_whitespace", "modulename": "prosodic.utils", "qualname": "get_initial_whitespace", "kind": "function", "doc": "<p>Get the initial whitespace from a string.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>xstr:</strong>  The input string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The initial whitespace.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xstr</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.unique": {"fullname": "prosodic.utils.unique", "modulename": "prosodic.utils", "qualname": "unique", "kind": "function", "doc": "<p>Get unique elements from a list while preserving order.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>l:</strong>  The input list.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of unique elements.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.hashstr": {"fullname": "prosodic.utils.hashstr", "modulename": "prosodic.utils", "qualname": "hashstr", "kind": "function", "doc": "<p>Generate a hash string from inputs.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>*inputs:</strong>  Input values to hash.</li>\n<li><strong>length:</strong>  Length of the output hash string.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A hash string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.read_json": {"fullname": "prosodic.utils.read_json", "modulename": "prosodic.utils", "qualname": "read_json", "kind": "function", "doc": "<p>Read a JSON file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn:</strong>  The filename.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The parsed JSON data as a dictionary.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.from_json": {"fullname": "prosodic.utils.from_json", "modulename": "prosodic.utils", "qualname": "from_json", "kind": "function", "doc": "<p>Create an object from JSON data.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>json_d:</strong>  JSON data or filename.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The created object.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If the JSON data doesn't contain a '_class' key.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">json_d</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.load": {"fullname": "prosodic.utils.load", "modulename": "prosodic.utils", "qualname": "load", "kind": "function", "doc": "<p>Load an object from a JSON file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn:</strong>  The filename.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The loaded object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.to_json": {"fullname": "prosodic.utils.to_json", "modulename": "prosodic.utils", "qualname": "to_json", "kind": "function", "doc": "<p>Convert an object to JSON and optionally save to a file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>obj:</strong>  The object to convert.</li>\n<li><strong>fn:</strong>  The filename to save to (optional).</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The JSON data if fn is None, otherwise None.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.ensure_dir": {"fullname": "prosodic.utils.ensure_dir", "modulename": "prosodic.utils", "qualname": "ensure_dir", "kind": "function", "doc": "<p>Ensure that the directory for a file exists.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>fn:</strong>  The filename.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.encode_cache": {"fullname": "prosodic.utils.encode_cache", "modulename": "prosodic.utils", "qualname": "encode_cache", "kind": "function", "doc": "<p>Encode an object for caching.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  The object to encode.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The encoded object as bytes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.decode_cache": {"fullname": "prosodic.utils.decode_cache", "modulename": "prosodic.utils", "qualname": "decode_cache", "kind": "function", "doc": "<p>Decode a cached object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  The encoded object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The decoded object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.to_html": {"fullname": "prosodic.utils.to_html", "modulename": "prosodic.utils", "qualname": "to_html", "kind": "function", "doc": "<p>Convert an object to HTML.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>html:</strong>  The object to convert.</li>\n<li><strong>as_str:</strong>  Whether to return as a string.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The HTML representation of the object.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">as_str</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.enable_caching": {"fullname": "prosodic.utils.enable_caching", "modulename": "prosodic.utils", "qualname": "enable_caching", "kind": "function", "doc": "<p>Enable caching.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.caching_is_enabled": {"fullname": "prosodic.utils.caching_is_enabled", "modulename": "prosodic.utils", "qualname": "caching_is_enabled", "kind": "function", "doc": "<p>Check if caching is enabled.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if caching is enabled, False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.disable_caching": {"fullname": "prosodic.utils.disable_caching", "modulename": "prosodic.utils", "qualname": "disable_caching", "kind": "function", "doc": "<p>Disable caching.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.caching_enabled": {"fullname": "prosodic.utils.caching_enabled", "modulename": "prosodic.utils", "qualname": "caching_enabled", "kind": "function", "doc": "<p>Context manager for temporarily enabling caching.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.caching_disabled": {"fullname": "prosodic.utils.caching_disabled", "modulename": "prosodic.utils", "qualname": "caching_disabled", "kind": "function", "doc": "<p>Context manager for temporarily disabling caching.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.logging_disabled": {"fullname": "prosodic.utils.logging_disabled", "modulename": "prosodic.utils", "qualname": "logging_disabled", "kind": "function", "doc": "<p>Context manager for temporarily disabling logging.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.logging_enabled": {"fullname": "prosodic.utils.logging_enabled", "modulename": "prosodic.utils", "qualname": "logging_enabled", "kind": "function", "doc": "<p>Context manager for temporarily enabling logging.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.force_int": {"fullname": "prosodic.utils.force_int", "modulename": "prosodic.utils", "qualname": "force_int", "kind": "function", "doc": "<p>Convert the input to an integer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>x:</strong>  The input value to be converted to an integer.</li>\n<li><strong>errors:</strong>  The value to be returned in case of an error. Defaults to 0.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The input value converted to an integer if successful, otherwise the specified error value.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">errors</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "prosodic.utils.tokenize_agnostic": {"fullname": "prosodic.utils.tokenize_agnostic", "modulename": "prosodic.utils", "qualname": "tokenize_agnostic", "kind": "function", "doc": "<p>Tokenize text in a language-agnostic way.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The input text.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A list of tokens.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.web": {"fullname": "prosodic.web", "modulename": "prosodic.web", "kind": "module", "doc": "<p></p>\n"}, "prosodic.web.app": {"fullname": "prosodic.web.app", "modulename": "prosodic.web.app", "kind": "module", "doc": "<p></p>\n"}, "prosodic.web.app.app": {"fullname": "prosodic.web.app.app", "modulename": "prosodic.web.app", "qualname": "app", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Flask &#x27;prosodic.web.app&#x27;&gt;"}, "prosodic.web.app.socketio": {"fullname": "prosodic.web.app.socketio", "modulename": "prosodic.web.app", "qualname": "socketio", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;flask_socketio.SocketIO object&gt;"}, "prosodic.web.app.linelim": {"fullname": "prosodic.web.app.linelim", "modulename": "prosodic.web.app", "qualname": "linelim", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000"}, "prosodic.web.app.get_text": {"fullname": "prosodic.web.app.get_text", "modulename": "prosodic.web.app", "qualname": "get_text", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.web.app.parse": {"fullname": "prosodic.web.app.parse", "modulename": "prosodic.web.app", "qualname": "parse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.web.app.index": {"fullname": "prosodic.web.app.index", "modulename": "prosodic.web.app", "qualname": "index", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.web.app.main": {"fullname": "prosodic.web.app.main", "modulename": "prosodic.web.app", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.web.app.jsonify": {"fullname": "prosodic.web.app.jsonify", "modulename": "prosodic.web.app", "qualname": "jsonify", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.web.app.unjsonify": {"fullname": "prosodic.web.app.unjsonify", "modulename": "prosodic.web.app", "qualname": "unjsonify", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "prosodic.words": {"fullname": "prosodic.words", "modulename": "prosodic.words", "kind": "module", "doc": "<p></p>\n"}, "prosodic.words.phonemes": {"fullname": "prosodic.words.phonemes", "modulename": "prosodic.words.phonemes", "kind": "module", "doc": "<p></p>\n"}, "prosodic.words.phonemes.PhonemeClass": {"fullname": "prosodic.words.phonemes.PhonemeClass", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass", "kind": "class", "doc": "<p>Represents a phoneme with various attributes.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>prefix (str):</strong>  The prefix for the phoneme class.</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.words.phonemes.PhonemeClass.__init__": {"fullname": "prosodic.words.phonemes.PhonemeClass.__init__", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.__init__", "kind": "function", "doc": "<p>Initialize a PhonemeClass instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text representation of the phoneme.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "prosodic.words.phonemes.PhonemeClass.prefix": {"fullname": "prosodic.words.phonemes.PhonemeClass.prefix", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;phon&#x27;"}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"fullname": "prosodic.words.phonemes.PhonemeClass.is_vowel", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.is_vowel", "kind": "variable", "doc": "<p>Determine if the phoneme is a vowel.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[bool]: True if vowel, False if consonant, None if undetermined.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.phonemes.PhonemeClass.to_json": {"fullname": "prosodic.words.phonemes.PhonemeClass.to_json", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.to_json", "kind": "function", "doc": "<p>Convert the phoneme to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary representation of the phoneme.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"fullname": "prosodic.words.phonemes.PhonemeClass.is_onset", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.is_onset", "kind": "variable", "doc": "<p>Check if the phoneme is part of the syllable onset.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[bool]: True if onset, False otherwise, None if not set.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"fullname": "prosodic.words.phonemes.PhonemeClass.is_rime", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.is_rime", "kind": "variable", "doc": "<p>Check if the phoneme is part of the syllable rime.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[bool]: True if rime, False otherwise, None if not set.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"fullname": "prosodic.words.phonemes.PhonemeClass.is_nucleus", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.is_nucleus", "kind": "variable", "doc": "<p>Check if the phoneme is the syllable nucleus.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[bool]: True if nucleus, False otherwise, None if not set.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"fullname": "prosodic.words.phonemes.PhonemeClass.is_coda", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeClass.is_coda", "kind": "variable", "doc": "<p>Check if the phoneme is part of the syllable coda.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Optional[bool]: True if coda, False otherwise, None if not set.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.phonemes.get_phoneme_featuretable": {"fullname": "prosodic.words.phonemes.get_phoneme_featuretable", "modulename": "prosodic.words.phonemes", "qualname": "get_phoneme_featuretable", "kind": "function", "doc": "<p>Get the phoneme feature table.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>panphon.FeatureTable: The feature table for phonemes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">panphon</span><span class=\"o\">.</span><span class=\"n\">featuretable</span><span class=\"o\">.</span><span class=\"n\">FeatureTable</span>:</span></span>", "funcdef": "def"}, "prosodic.words.phonemes.Phoneme": {"fullname": "prosodic.words.phonemes.Phoneme", "modulename": "prosodic.words.phonemes", "qualname": "Phoneme", "kind": "function", "doc": "<p>Create a Phoneme object from text.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text representation of the phoneme.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>PhonemeClass: A PhonemeClass instance representing the phoneme.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">phonemes</span><span class=\"o\">.</span><span class=\"n\">PhonemeClass</span>:</span></span>", "funcdef": "def"}, "prosodic.words.phonemes.FEATS_PANPHON": {"fullname": "prosodic.words.phonemes.FEATS_PANPHON", "modulename": "prosodic.words.phonemes", "qualname": "FEATS_PANPHON", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]", "default_value": "[&#x27;num&#x27;, &#x27;txt&#x27;, &#x27;syl&#x27;, &#x27;son&#x27;, &#x27;cons&#x27;, &#x27;cont&#x27;, &#x27;delrel&#x27;, &#x27;lat&#x27;, &#x27;nas&#x27;, &#x27;strid&#x27;, &#x27;voi&#x27;, &#x27;sg&#x27;, &#x27;cg&#x27;, &#x27;ant&#x27;, &#x27;cor&#x27;, &#x27;distr&#x27;, &#x27;lab&#x27;, &#x27;hi&#x27;, &#x27;lo&#x27;, &#x27;back&#x27;, &#x27;round&#x27;, &#x27;velaric&#x27;, &#x27;tense&#x27;, &#x27;long&#x27;, &#x27;hitone&#x27;, &#x27;hireg&#x27;]"}, "prosodic.words.phonemes.get_ipa_info": {"fullname": "prosodic.words.phonemes.get_ipa_info", "modulename": "prosodic.words.phonemes", "qualname": "get_ipa_info", "kind": "function", "doc": "<p>Get IPA information from a JSON file.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>Dict[str, Any]: A dictionary containing IPA information.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "prosodic.words.phonemes.PhonemeList": {"fullname": "prosodic.words.phonemes.PhonemeList", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeList", "kind": "class", "doc": "<p>A list of phonemes with additional functionality.</p>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.words.phonemes.PhonemeList.__init__": {"fullname": "prosodic.words.phonemes.PhonemeList.__init__", "modulename": "prosodic.words.phonemes", "qualname": "PhonemeList.__init__", "kind": "function", "doc": "<p>Initialize a PhonemeList instance.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>*args:</strong>  Variable length argument list.</li>\n<li><strong>**kwargs:</strong>  Arbitrary keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "prosodic.words.syllables": {"fullname": "prosodic.words.syllables", "modulename": "prosodic.words.syllables", "kind": "module", "doc": "<p></p>\n"}, "prosodic.words.syllables.Syllable": {"fullname": "prosodic.words.syllables.Syllable", "modulename": "prosodic.words.syllables", "qualname": "Syllable", "kind": "class", "doc": "<p>Represents a syllable in a word.</p>\n\n<h6 id=\"attributes\">Attributes:</h6>\n\n<ul>\n<li><strong>prefix (str):</strong>  Prefix for the syllable.</li>\n<li><strong>child_type (str):</strong>  Type of child entities (Phoneme).</li>\n<li><strong>list_type (str):</strong>  Type of list for child entities (PhonemeList).</li>\n</ul>\n", "bases": "prosodic.ents.Entity"}, "prosodic.words.syllables.Syllable.__init__": {"fullname": "prosodic.words.syllables.Syllable.__init__", "modulename": "prosodic.words.syllables", "qualname": "Syllable.__init__", "kind": "function", "doc": "<p>Initialize a Syllable object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt:</strong>  The text representation of the syllable.</li>\n<li><strong>ipa:</strong>  The IPA representation of the syllable.</li>\n<li><strong>parent:</strong>  The parent entity of the syllable.</li>\n<li><strong>children:</strong>  List of child entities (Phonemes).</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ipa</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "prosodic.words.syllables.Syllable.prefix": {"fullname": "prosodic.words.syllables.Syllable.prefix", "modulename": "prosodic.words.syllables", "qualname": "Syllable.prefix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;syll&#x27;"}, "prosodic.words.syllables.Syllable.child_type": {"fullname": "prosodic.words.syllables.Syllable.child_type", "modulename": "prosodic.words.syllables", "qualname": "Syllable.child_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Phoneme&#x27;"}, "prosodic.words.syllables.Syllable.list_type": {"fullname": "prosodic.words.syllables.Syllable.list_type", "modulename": "prosodic.words.syllables", "qualname": "Syllable.list_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;PhonemeList&#x27;"}, "prosodic.words.syllables.Syllable.to_json": {"fullname": "prosodic.words.syllables.Syllable.to_json", "modulename": "prosodic.words.syllables", "qualname": "Syllable.to_json", "kind": "function", "doc": "<p>Convert the syllable to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary representation of the syllable.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "prosodic.words.syllables.Syllable.stress": {"fullname": "prosodic.words.syllables.Syllable.stress", "modulename": "prosodic.words.syllables", "qualname": "Syllable.stress", "kind": "variable", "doc": "<p>Get the stress level of the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The stress level as a string.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.words.syllables.Syllable.attrs": {"fullname": "prosodic.words.syllables.Syllable.attrs", "modulename": "prosodic.words.syllables", "qualname": "Syllable.attrs", "kind": "variable", "doc": "<p>Get the attributes of the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A dictionary of syllable attributes.</p>\n</blockquote>\n", "annotation": ": dict"}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"fullname": "prosodic.words.syllables.Syllable.has_consonant_ending", "modulename": "prosodic.words.syllables", "qualname": "Syllable.has_consonant_ending", "kind": "variable", "doc": "<p>Check if the syllable ends with a consonant.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable ends with a consonant, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.words.syllables.Syllable.num_vowels": {"fullname": "prosodic.words.syllables.Syllable.num_vowels", "modulename": "prosodic.words.syllables", "qualname": "Syllable.num_vowels", "kind": "variable", "doc": "<p>Get the number of vowels in the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The number of vowels.</p>\n</blockquote>\n", "annotation": ": int"}, "prosodic.words.syllables.Syllable.has_dipthong": {"fullname": "prosodic.words.syllables.Syllable.has_dipthong", "modulename": "prosodic.words.syllables", "qualname": "Syllable.has_dipthong", "kind": "variable", "doc": "<p>Check if the syllable contains a diphthong.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable has a diphthong, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.words.syllables.Syllable.is_stressed": {"fullname": "prosodic.words.syllables.Syllable.is_stressed", "modulename": "prosodic.words.syllables", "qualname": "Syllable.is_stressed", "kind": "variable", "doc": "<p>Check if the syllable is stressed.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is stressed, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.words.syllables.Syllable.is_heavy": {"fullname": "prosodic.words.syllables.Syllable.is_heavy", "modulename": "prosodic.words.syllables", "qualname": "Syllable.is_heavy", "kind": "variable", "doc": "<p>Check if the syllable is heavy.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is heavy, False otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "prosodic.words.syllables.Syllable.is_strong": {"fullname": "prosodic.words.syllables.Syllable.is_strong", "modulename": "prosodic.words.syllables", "qualname": "Syllable.is_strong", "kind": "variable", "doc": "<p>Check if the syllable is strong.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is strong, False if weak, None if undetermined.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.syllables.Syllable.is_weak": {"fullname": "prosodic.words.syllables.Syllable.is_weak", "modulename": "prosodic.words.syllables", "qualname": "Syllable.is_weak", "kind": "variable", "doc": "<p>Check if the syllable is weak.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>True if the syllable is weak, False if strong, None if undetermined.</p>\n</blockquote>\n", "annotation": ": Optional[bool]"}, "prosodic.words.syllables.Syllable.onset": {"fullname": "prosodic.words.syllables.Syllable.onset", "modulename": "prosodic.words.syllables", "qualname": "Syllable.onset", "kind": "variable", "doc": "<p>Get the onset of the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A PhonemeList containing the onset phonemes.</p>\n</blockquote>\n", "annotation": ": prosodic.words.phonemes.PhonemeList"}, "prosodic.words.syllables.Syllable.rime": {"fullname": "prosodic.words.syllables.Syllable.rime", "modulename": "prosodic.words.syllables", "qualname": "Syllable.rime", "kind": "variable", "doc": "<p>Get the rime of the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A PhonemeList containing the rime phonemes.</p>\n</blockquote>\n", "annotation": ": prosodic.words.phonemes.PhonemeList"}, "prosodic.words.syllables.Syllable.nucleus": {"fullname": "prosodic.words.syllables.Syllable.nucleus", "modulename": "prosodic.words.syllables", "qualname": "Syllable.nucleus", "kind": "variable", "doc": "<p>Get the nucleus of the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A PhonemeList containing the nucleus phonemes.</p>\n</blockquote>\n", "annotation": ": prosodic.words.phonemes.PhonemeList"}, "prosodic.words.syllables.Syllable.coda": {"fullname": "prosodic.words.syllables.Syllable.coda", "modulename": "prosodic.words.syllables", "qualname": "Syllable.coda", "kind": "variable", "doc": "<p>Get the coda of the syllable.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>A PhonemeList containing the coda phonemes.</p>\n</blockquote>\n", "annotation": ": prosodic.words.phonemes.PhonemeList"}, "prosodic.words.syllables.Syllable.rime_distance": {"fullname": "prosodic.words.syllables.Syllable.rime_distance", "modulename": "prosodic.words.syllables", "qualname": "Syllable.rime_distance", "kind": "function", "doc": "<p>Calculate the rime distance between this syllable and another.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>syllable:</strong>  The syllable to compare with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>The rime distance as a float.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">syllable</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">syllables</span><span class=\"o\">.</span><span class=\"n\">Syllable</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "prosodic.words.syllables.SyllableList": {"fullname": "prosodic.words.syllables.SyllableList", "modulename": "prosodic.words.syllables", "qualname": "SyllableList", "kind": "class", "doc": "<p>A list of Syllable objects.</p>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.words.words": {"fullname": "prosodic.words.words", "modulename": "prosodic.words.words", "kind": "module", "doc": "<p></p>\n"}, "prosodic.words.words.SYLL_SEP": {"fullname": "prosodic.words.words.SYLL_SEP", "modulename": "prosodic.words.words", "qualname": "SYLL_SEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;.&#x27;"}, "prosodic.words.words.Word": {"fullname": "prosodic.words.words.Word", "modulename": "prosodic.words.words", "qualname": "Word", "kind": "function", "doc": "<p>Create a WordType object for the given token in the specified language.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>token (str):</strong>  The word token to create a WordType for.</li>\n<li><strong>lang (str, optional):</strong>  The language code. Defaults to DEFAULT_LANG.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>WordType: A WordType object for the given token.</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  If the specified language is not recognized.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;en&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordType</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordToken": {"fullname": "prosodic.words.words.WordToken", "modulename": "prosodic.words.words", "qualname": "WordToken", "kind": "class", "doc": "<p>Represents a word token in text.</p>\n", "bases": "prosodic.ents.Entity"}, "prosodic.words.words.WordToken.__init__": {"fullname": "prosodic.words.words.WordToken.__init__", "modulename": "prosodic.words.words", "qualname": "WordToken.__init__", "kind": "function", "doc": "<p>Initialize a WordToken object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text of the word token.</li>\n<li><strong>lang (str, optional):</strong>  The language code. Defaults to DEFAULT_LANG.</li>\n<li><strong>parent (Entity, optional):</strong>  The parent entity. Defaults to None.</li>\n<li><strong>children (List[WordType], optional):</strong>  List of child WordType objects. Defaults to [].</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">lang</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;en&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">ents</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.words.words.WordToken.child_type": {"fullname": "prosodic.words.words.WordToken.child_type", "modulename": "prosodic.words.words", "qualname": "WordToken.child_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;WordType&#x27;"}, "prosodic.words.words.WordToken.list_type": {"fullname": "prosodic.words.words.WordToken.list_type", "modulename": "prosodic.words.words", "qualname": "WordToken.list_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;WordTypeList&#x27;"}, "prosodic.words.words.WordToken.prefix": {"fullname": "prosodic.words.words.WordToken.prefix", "modulename": "prosodic.words.words", "qualname": "WordToken.prefix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;wordtoken&#x27;"}, "prosodic.words.words.WordToken.lang": {"fullname": "prosodic.words.words.WordToken.lang", "modulename": "prosodic.words.words", "qualname": "WordToken.lang", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.words.words.WordToken.word": {"fullname": "prosodic.words.words.WordToken.word", "modulename": "prosodic.words.words", "qualname": "WordToken.word", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.words.words.WordToken.to_json": {"fullname": "prosodic.words.words.WordToken.to_json", "modulename": "prosodic.words.words", "qualname": "WordToken.to_json", "kind": "function", "doc": "<p>Convert the WordToken to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary representation of the WordToken.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordType": {"fullname": "prosodic.words.words.WordType", "modulename": "prosodic.words.words", "qualname": "WordType", "kind": "class", "doc": "<p>Represents a word type (lexeme).</p>\n", "bases": "prosodic.ents.Entity"}, "prosodic.words.words.WordType.__init__": {"fullname": "prosodic.words.words.WordType.__init__", "modulename": "prosodic.words.words", "qualname": "WordType.__init__", "kind": "function", "doc": "<p>Initialize a WordType object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text of the word type.</li>\n<li><strong>children (List[WordForm]):</strong>  List of child WordForm objects.</li>\n<li><strong>parent (Entity, optional):</strong>  The parent entity. Defaults to None.</li>\n<li><strong>**kwargs:</strong>  Additional keyword arguments.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordForm</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">ents</span><span class=\"o\">.</span><span class=\"n\">Entity</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "prosodic.words.words.WordType.child_type": {"fullname": "prosodic.words.words.WordType.child_type", "modulename": "prosodic.words.words", "qualname": "WordType.child_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;WordForm&#x27;"}, "prosodic.words.words.WordType.list_type": {"fullname": "prosodic.words.words.WordType.list_type", "modulename": "prosodic.words.words", "qualname": "WordType.list_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;list&#x27;"}, "prosodic.words.words.WordType.prefix": {"fullname": "prosodic.words.words.WordType.prefix", "modulename": "prosodic.words.words", "qualname": "WordType.prefix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;word&#x27;"}, "prosodic.words.words.WordType.to_json": {"fullname": "prosodic.words.words.WordType.to_json", "modulename": "prosodic.words.words", "qualname": "WordType.to_json", "kind": "function", "doc": "<p>Convert the WordType to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary representation of the WordType.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordType.wtoken": {"fullname": "prosodic.words.words.WordType.wtoken", "modulename": "prosodic.words.words", "qualname": "WordType.wtoken", "kind": "variable", "doc": "<p></p>\n", "annotation": ": prosodic.words.words.WordToken"}, "prosodic.words.words.WordType.forms": {"fullname": "prosodic.words.words.WordType.forms", "modulename": "prosodic.words.words", "qualname": "WordType.forms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[prosodic.words.words.WordForm]"}, "prosodic.words.words.WordType.form": {"fullname": "prosodic.words.words.WordType.form", "modulename": "prosodic.words.words", "qualname": "WordType.form", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[prosodic.words.words.WordForm]"}, "prosodic.words.words.WordType.num_forms": {"fullname": "prosodic.words.words.WordType.num_forms", "modulename": "prosodic.words.words", "qualname": "WordType.num_forms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "prosodic.words.words.WordType.is_punc": {"fullname": "prosodic.words.words.WordType.is_punc", "modulename": "prosodic.words.words", "qualname": "WordType.is_punc", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[bool]"}, "prosodic.words.words.WordType.num_sylls": {"fullname": "prosodic.words.words.WordType.num_sylls", "modulename": "prosodic.words.words", "qualname": "WordType.num_sylls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]"}, "prosodic.words.words.WordType.num_stressed_sylls": {"fullname": "prosodic.words.words.WordType.num_stressed_sylls", "modulename": "prosodic.words.words", "qualname": "WordType.num_stressed_sylls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]"}, "prosodic.words.words.WordType.attrs": {"fullname": "prosodic.words.words.WordType.attrs", "modulename": "prosodic.words.words", "qualname": "WordType.attrs", "kind": "variable", "doc": "<p>Get the attributes of the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary of the entity's attributes.</p>\n</blockquote>\n", "annotation": ": dict"}, "prosodic.words.words.WordType.rime_distance": {"fullname": "prosodic.words.words.WordType.rime_distance", "modulename": "prosodic.words.words", "qualname": "WordType.rime_distance", "kind": "function", "doc": "<p>Calculate the rime distance between this word and another.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>word (WordType):</strong>  The word to compare with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The rime distance between the two words.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordType</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordForm": {"fullname": "prosodic.words.words.WordForm", "modulename": "prosodic.words.words", "qualname": "WordForm", "kind": "class", "doc": "<p>Represents a specific form of a word.</p>\n", "bases": "prosodic.ents.Entity"}, "prosodic.words.words.WordForm.__init__": {"fullname": "prosodic.words.words.WordForm.__init__", "modulename": "prosodic.words.words", "qualname": "WordForm.__init__", "kind": "function", "doc": "<p>Initialize a WordForm object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>txt (str):</strong>  The text of the word form.</li>\n<li><strong>sylls_ipa (Union[str, List[str]], optional):</strong>  IPA representation of syllables. Defaults to [].</li>\n<li><strong>sylls_text (Union[str, List[str]], optional):</strong>  Text representation of syllables. Defaults to [].</li>\n<li><strong>children (List[Syllable], optional):</strong>  List of child Syllable objects. Defaults to [].</li>\n<li><strong>syll_sep (str, optional):</strong>  Syllable separator. Defaults to \".\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sylls_ipa</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">sylls_text</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">children</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">ForwardRef</span><span class=\"p\">(</span><span class=\"s1\">&#39;Syllable&#39;</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">syll_sep</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.&#39;</span></span>)</span>"}, "prosodic.words.words.WordForm.prefix": {"fullname": "prosodic.words.words.WordForm.prefix", "modulename": "prosodic.words.words", "qualname": "WordForm.prefix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;wordform&#x27;"}, "prosodic.words.words.WordForm.child_type": {"fullname": "prosodic.words.words.WordForm.child_type", "modulename": "prosodic.words.words", "qualname": "WordForm.child_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;Syllable&#x27;"}, "prosodic.words.words.WordForm.list_type": {"fullname": "prosodic.words.words.WordForm.list_type", "modulename": "prosodic.words.words", "qualname": "WordForm.list_type", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;SyllableList&#x27;"}, "prosodic.words.words.WordForm.sylls_ipa": {"fullname": "prosodic.words.words.WordForm.sylls_ipa", "modulename": "prosodic.words.words", "qualname": "WordForm.sylls_ipa", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.words.words.WordForm.sylls_text": {"fullname": "prosodic.words.words.WordForm.sylls_text", "modulename": "prosodic.words.words", "qualname": "WordForm.sylls_text", "kind": "variable", "doc": "<p></p>\n"}, "prosodic.words.words.WordForm.to_json": {"fullname": "prosodic.words.words.WordForm.to_json", "modulename": "prosodic.words.words", "qualname": "WordForm.to_json", "kind": "function", "doc": "<p>Convert the WordForm to a JSON-serializable dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: A dictionary representation of the WordForm.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordForm.wtoken": {"fullname": "prosodic.words.words.WordForm.wtoken", "modulename": "prosodic.words.words", "qualname": "WordForm.wtoken", "kind": "variable", "doc": "<p></p>\n", "annotation": ": prosodic.words.words.WordToken"}, "prosodic.words.words.WordForm.syllables": {"fullname": "prosodic.words.words.WordForm.syllables", "modulename": "prosodic.words.words", "qualname": "WordForm.syllables", "kind": "variable", "doc": "<p>Get the list of syllable entities.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>SyllableList: A list of syllable entities.</p>\n</blockquote>\n", "annotation": ": List[ForwardRef(&#x27;Syllable&#x27;)]"}, "prosodic.words.words.WordForm.token_stress": {"fullname": "prosodic.words.words.WordForm.token_stress", "modulename": "prosodic.words.words", "qualname": "WordForm.token_stress", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "prosodic.words.words.WordForm.is_functionword": {"fullname": "prosodic.words.words.WordForm.is_functionword", "modulename": "prosodic.words.words", "qualname": "WordForm.is_functionword", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "prosodic.words.words.WordForm.num_sylls": {"fullname": "prosodic.words.words.WordForm.num_sylls", "modulename": "prosodic.words.words", "qualname": "WordForm.num_sylls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "prosodic.words.words.WordForm.num_stressed_sylls": {"fullname": "prosodic.words.words.WordForm.num_stressed_sylls", "modulename": "prosodic.words.words", "qualname": "WordForm.num_stressed_sylls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "prosodic.words.words.WordForm.key": {"fullname": "prosodic.words.words.WordForm.key", "modulename": "prosodic.words.words", "qualname": "WordForm.key", "kind": "variable", "doc": "<p>Generate a unique key for the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: A string key representing the entity's class and attributes.</p>\n</blockquote>\n", "annotation": ": str"}, "prosodic.words.words.WordForm.to_hash": {"fullname": "prosodic.words.words.WordForm.to_hash", "modulename": "prosodic.words.words", "qualname": "WordForm.to_hash", "kind": "function", "doc": "<p>Generate a hash representation of the entity.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>str: A hash string representing the entity's content and attributes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordForm.rime": {"fullname": "prosodic.words.words.WordForm.rime", "modulename": "prosodic.words.words", "qualname": "WordForm.rime", "kind": "variable", "doc": "<p>Get the rime of the word form.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>PhonemeList: The rime of the word form, or None if no rime can be determined.</p>\n</blockquote>\n", "annotation": ": Optional[ForwardRef(&#x27;PhonemeList&#x27;)]"}, "prosodic.words.words.WordForm.rime_distance": {"fullname": "prosodic.words.words.WordForm.rime_distance", "modulename": "prosodic.words.words", "qualname": "WordForm.rime_distance", "kind": "function", "doc": "<p>Calculate the rime distance between this word form and another.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>wordform (WordForm):</strong>  The word form to compare with.</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: The rime distance between the two word forms.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">wordform</span><span class=\"p\">:</span> <span class=\"n\">prosodic</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"o\">.</span><span class=\"n\">WordForm</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "prosodic.words.words.WordTypeList": {"fullname": "prosodic.words.words.WordTypeList", "modulename": "prosodic.words.words", "qualname": "WordTypeList", "kind": "class", "doc": "<p>A list of WordType objects.</p>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.words.words.WordFormList": {"fullname": "prosodic.words.words.WordFormList", "modulename": "prosodic.words.words", "qualname": "WordFormList", "kind": "class", "doc": "<p>A list of WordForm objects with additional properties and comparison methods.</p>\n", "bases": "prosodic.ents.EntityList"}, "prosodic.words.words.WordFormList.slots": {"fullname": "prosodic.words.words.WordFormList.slots", "modulename": "prosodic.words.words", "qualname": "WordFormList.slots", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[ForwardRef(&#x27;Syllable&#x27;)]"}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"fullname": "prosodic.words.words.WordFormList.num_stressed_sylls", "modulename": "prosodic.words.words", "qualname": "WordFormList.num_stressed_sylls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "prosodic.words.words.WordFormList.num_sylls": {"fullname": "prosodic.words.words.WordFormList.num_sylls", "modulename": "prosodic.words.words", "qualname": "WordFormList.num_sylls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "prosodic.words.words.WordFormList.first_syll": {"fullname": "prosodic.words.words.WordFormList.first_syll", "modulename": "prosodic.words.words", "qualname": "WordFormList.first_syll", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[ForwardRef(&#x27;Syllable&#x27;)]"}, "prosodic.words.words.WordFormList.sort_key": {"fullname": "prosodic.words.words.WordFormList.sort_key", "modulename": "prosodic.words.words", "qualname": "WordFormList.sort_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple"}, "prosodic.words.words.WordTokenList": {"fullname": "prosodic.words.words.WordTokenList", "modulename": "prosodic.words.words", "qualname": "WordTokenList", "kind": "class", "doc": "<p>A list of WordToken objects.</p>\n", "bases": "prosodic.ents.EntityList"}}, "docInfo": {"prosodic": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.cli": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.cli.cli": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 10}, "prosodic.cli.web": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 82}, "prosodic.cli.ipython": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 36}, "prosodic.ents": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 181}, "prosodic.ents.Entity.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 64}, "prosodic.ents.Entity.child_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.is_parseable": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.index_name": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.prefix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.list_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.cached_properties_to_clear": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.use_cache": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.sep": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.parent": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.children": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.Entity.to_hash": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 31}, "prosodic.ents.Entity.html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.key": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.ents.Entity.hash": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.to_json": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 95}, "prosodic.ents.Entity.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 64}, "prosodic.ents.Entity.render": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 52}, "prosodic.ents.Entity.from_json": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 51}, "prosodic.ents.Entity.attrs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.prefix_attrs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 54}, "prosodic.ents.Entity.txt": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.data": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.ents.Entity.l": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.ents.Entity.clear_cached_properties": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "prosodic.ents.Entity.inspect": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 59}, "prosodic.ents.Entity.ld": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "prosodic.ents.Entity.child_class": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.get_ld": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 85}, "prosodic.ents.Entity.get_df": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 53}, "prosodic.ents.Entity.df": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "prosodic.ents.Entity.get_parent": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 57}, "prosodic.ents.Entity.stanzas": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.ents.Entity.line_r": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.ents.Entity.word_r": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.ents.Entity.lines": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.ents.Entity.wordtokens": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.words": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.wordtypes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.wordforms": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.ents.Entity.wordforms_nopunc": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.ents.Entity.wordforms_all": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.ents.Entity.syllables": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.ents.Entity.phonemes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.ents.Entity.text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.stanza": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.line": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.wordtoken": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "prosodic.ents.Entity.wordtype": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "prosodic.ents.Entity.wordform": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "prosodic.ents.Entity.syllable": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.i": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "prosodic.ents.Entity.num": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 40}, "prosodic.ents.Entity.next": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.prev": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.ents.Entity.is_text": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "prosodic.ents.Entity.is_stanza": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "prosodic.ents.Entity.is_line": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "prosodic.ents.Entity.is_wordtoken": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "prosodic.ents.Entity.is_wordtype": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "prosodic.ents.Entity.is_wordform": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "prosodic.ents.Entity.is_syll": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "prosodic.ents.Entity.is_phon": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "prosodic.ents.Entity.children_from_cache": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 36}, "prosodic.ents.Entity.get_key": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 39}, "prosodic.ents.Entity.from_cache": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 74}, "prosodic.ents.Entity.get_cache": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 21}, "prosodic.ents.Entity.cache": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 67}, "prosodic.ents.EntityList": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "prosodic.ents.EntityList.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 50}, "prosodic.ents.EntityList.parent": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.EntityList.children": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.ents.EntityList.txt": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.imports": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_HERE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_REPO": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_PROSODIC": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_LANGS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_PHONS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_WEB": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_REPO_DATA": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_DICTS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_HOME": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_HOME_DATA": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.USE_CACHE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.USE_REDIS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.HASHSTR_LEN": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_NUM_PROC": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PATH_MTREE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DASHES": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.REPLACE_DASHES": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.TOKENIZER": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.SEPS_PHRASE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 48, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.SEP_STANZA": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.SEP_PARA": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.SEP_LINE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_LINE_LIM": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_PROCESSORS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_LANG": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.LOG_FORMAT": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 47, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.LOG_LEVEL": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_METER": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.METER_MAX_S": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.METER_MAX_W": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.ESPEAK_PATHS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 20, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DF_INDEX": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 108, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DF_COLS_RENAME": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 141, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.DF_BADCOLS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.LANGS": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.HTML_CSS": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 100, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.RHYME_MAX_DIST": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.sonnet": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 106, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.GROUPBY_STANZA": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.GROUPBY_LINE": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 18, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.GROUPBY_WORD": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 26, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.GROUPBY_SYLL": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 30, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.GLOBALS": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 7154, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.INITCLASSES": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 166, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.CHILDCLASSES": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 150, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.CHILDCLASSLISTS": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 97, "signature": 0, "bases": 0, "doc": 3}, "prosodic.imports.profile": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.lang": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.english.english.English": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.langs.finnish": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.dirself": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.stress2stroke": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.orth2phon": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 550, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.ipa2x": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 352, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish.Finnish": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.dirself": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.user_files": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 18, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.config_file": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 29, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 74, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 47, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 26, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 56, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 62, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_long": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Syllable": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Weight": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Stress": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_sonority": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_stress": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 491, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 248, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 26, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_text": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_weight": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "prosodic.langs.finnish.finnish_weight.make_weights": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.langs": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.cache_fn": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.lang_espeak": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.lang": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.use_cache": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.token2ipa": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.cached": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.phoneticize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.phonemizer": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.phonemize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.syllabify_ipa": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.syllabifier": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.syllabiphon": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.langs.langs.Language.syllabify": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "prosodic.langs.langs.fix_recasing": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.langs.langs.fix_num_sylls": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "prosodic.langs.langs.unstress": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.langs.stress": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.langs.langs.ensure_maybe_stressed": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "prosodic.langs.langs.ensure_unstressed": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "prosodic.langs.langs.get_espeak_error_msg": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.langs.langs.get_espeak_env": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 3}, "prosodic.langs.langs.set_espeak_env": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 3}, "prosodic.lib": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint.line": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataPoint.violations": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.data": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "prosodic.lib.lexconvert.Phonemes": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 131}, "prosodic.lib.lexconvert.LexFormats": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 768}, "prosodic.lib.lexconvert.mainopt_try": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "prosodic.lib.lexconvert.mainopt_trymac": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 22}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 25}, "prosodic.lib.lexconvert.mainopt_phones": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 112}, "prosodic.lib.lexconvert.mainopt_ruby": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 174}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "prosodic.lib.lexconvert.espeak_version_line": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.writeFormatHeader": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.mainopt_check_variants": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.festival_group_stress": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "prosodic.lib.lexconvert.mainopt_convert": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 38}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 171}, "prosodic.lib.lexconvert.mainopt_syllables": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 23}, "prosodic.lib.lexconvert.wordSeparator": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 27}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 21}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 135}, "prosodic.lib.lexconvert.Counter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "prosodic.lib.lexconvert.Counter.c": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.Counter.sc": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.other": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 21}, "prosodic.lib.lexconvert.consonants": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.mainVowels": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.consonant": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "prosodic.lib.lexconvert.vowel": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "prosodic.lib.lexconvert.opt_vowel": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 24}, "prosodic.lib.lexconvert.variant": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 14}, "prosodic.lib.lexconvert.ifset": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 31}, "prosodic.lib.lexconvert.speakjet": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "prosodic.lib.lexconvert.makeDic": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 23}, "prosodic.lib.lexconvert.makeVariantDic": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 82}, "prosodic.lib.lexconvert.getSetting": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 11}, "prosodic.lib.lexconvert.checkSetting": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 11}, "prosodic.lib.lexconvert.getBuf": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "prosodic.lib.lexconvert.make_dictionary": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 49}, "prosodic.lib.lexconvert.warnedAlready": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.convert": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 43}, "prosodic.lib.lexconvert.unicode_preprocess": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 26}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 31}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 69}, "prosodic.lib.lexconvert.parse_festival_dict": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 10}, "prosodic.lib.lexconvert.Message": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 8}, "prosodic.lib.lexconvert.read_user_lexicon": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 14}, "prosodic.lib.lexconvert.replHome": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 17}, "prosodic.lib.lexconvert.as_utf8": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.as_unicode": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.maybe_bytes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 13}, "prosodic.lib.lexconvert.as_printable": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.convert_user_lexicon": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 5}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 62}, "prosodic.lib.lexconvert.markup_inline_word": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 20}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "prosodic.lib.lexconvert.sylcount": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 49}, "prosodic.lib.lexconvert.hyphenate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 5}, "prosodic.lib.lexconvert.macSayCommand": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 90}, "prosodic.lib.lexconvert.stdin_is_terminal": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 23}, "prosodic.lib.lexconvert.getInputText": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 77}, "prosodic.lib.lexconvert.my_xreadlines": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 16}, "prosodic.lib.lexconvert.output_clauses": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 50}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 71}, "prosodic.lib.lexconvert.print_bbc_warnings": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 18}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 51}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60}, "prosodic.lib.lexconvert.bbcshortest": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 34}, "prosodic.lib.lexconvert.bbcKeystrokes": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 95}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 40}, "prosodic.lib.lexconvert.mainopt_version": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.main": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 31}, "prosodic.lib.lexconvert.catchSignals": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 37}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 51}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 55}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 23}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 53}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 69}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 37}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 8}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 20}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 19}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 19}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.stdout_width_unix": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.lexFormats": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 36943, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.chr": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.lexconvert.sorted": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 57}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.deptree.setup_module": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.DATE": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 23, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 57}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.test": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.metricaltree.test.test_parser": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity.codas": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 21, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.complexity.extract_features": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 18, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 111, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "prosodic.parsing": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.constraints": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.constraints.w_stress": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 61}, "prosodic.parsing.constraints.s_unstress": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 61}, "prosodic.parsing.constraints.unres_within": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 59}, "prosodic.parsing.constraints.foot_size": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 57}, "prosodic.parsing.constraints.unres_across": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 59}, "prosodic.parsing.constraints.w_peak": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 61}, "prosodic.parsing.constraints.s_trough": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 61}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 22, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.constraints.CONSTRAINTS": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 72, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 27, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.constraints.get_constraints": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 51}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 173, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.NUM_GOING": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 61, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.MTRDEFAULT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 61, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 119}, "prosodic.parsing.meter.Meter.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 229, "bases": 0, "doc": 108}, "prosodic.parsing.meter.Meter.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.constraints": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.categorical_constraints": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.max_s": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.max_w": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.resolve_optionality": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.exhaustive": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.meter.Meter.use_cache": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.meter.Meter.use_cache_lines": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.meter.Meter.use_cache_texts": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.meter.Meter.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 27}, "prosodic.parsing.meter.Meter.constraint_names": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"qualname": 4, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.meter.Meter.attrs": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.meter.Meter.get_pos_types": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 51}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 47}, "prosodic.parsing.meter.Meter.parse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 61}, "prosodic.parsing.meter.Meter.parse_iter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 143, "bases": 0, "doc": 98}, "prosodic.parsing.meter.Meter.parse_line": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 68}, "prosodic.parsing.meter.Meter.get_key": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 41}, "prosodic.parsing.meter.Meter.parses_from_cache": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 73}, "prosodic.parsing.meter.Meter.parse_line_fast": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 64}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 63}, "prosodic.parsing.meter.Meter.parse_text": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 61}, "prosodic.parsing.meter.Meter.parse_text_iter": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 176, "bases": 0, "doc": 122}, "prosodic.parsing.parselists": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parselists.ParseList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 98}, "prosodic.parsing.parselists.ParseList.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 46}, "prosodic.parsing.parselists.ParseList.index_name": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parselists.ParseList.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parselists.ParseList.show_bounded": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parselists.ParseList.is_scansions": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parselists.ParseList.line": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parselists.ParseList.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 69}, "prosodic.parsing.parselists.ParseList.num_parses": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parselists.ParseList.attrs": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "prosodic.parsing.parselists.ParseList.meter": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parselists.ParseList.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 48}, "prosodic.parsing.parselists.ParseList.all": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "prosodic.parsing.parselists.ParseList.best": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.parselists.ParseList.unbounded": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "prosodic.parsing.parselists.ParseList.bounded": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "prosodic.parsing.parselists.ParseList.best_parse": {"qualname": 3, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parselists.ParseList.num_bounded": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parselists.ParseList.num_all": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"qualname": 5, "fullname": 8, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.parselists.ParseList.parses": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "prosodic.parsing.parselists.ParseList.bound": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 45}, "prosodic.parsing.parselists.ParseList.rank": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 9}, "prosodic.parsing.parselists.ParseList.lines": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parselists.ParseList.stats_d": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 107, "bases": 0, "doc": 72}, "prosodic.parsing.parselists.ParseList.stats": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 75}, "prosodic.parsing.parselists.ParseList.df": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parselists.ParseList.df_norm": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parselists.ParseList.df_raw": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parselists.ParseList.get_df": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 48}, "prosodic.parsing.parselists.ParseList.df_syll": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.parsing.parselists.ParseList.scansions": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parselists.ParseList.num_lines": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parselists.ParseList.render": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 68}, "prosodic.parsing.parselists.ParseList.to_html": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 68}, "prosodic.parsing.parses": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 450}, "prosodic.parsing.parses.Parse.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 312, "bases": 0, "doc": 64}, "prosodic.parsing.parses.Parse.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.positions": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.positions_ls": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.line": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.parses.Parse.is_bounded": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.bounded_by": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.unmetrical": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.comparison_nums": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.comparison_parses": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.parse_num": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.total_score": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.pause_comparisons": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.parse_rank": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.children": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.parses.Parse.line_num": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "prosodic.parsing.parses.Parse.stanza_num": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "prosodic.parsing.parses.Parse.init": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "prosodic.parsing.parses.Parse.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 51}, "prosodic.parsing.parses.Parse.from_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 135, "bases": 0, "doc": 72}, "prosodic.parsing.parses.Parse.slots": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.is_complete": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.parses.Parse.extend": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 56}, "prosodic.parsing.parses.Parse.violset": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.parses.Parse.branch": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 24}, "prosodic.parsing.parses.Parse.sort_key": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.constraints": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parses.Parse.constraint_d": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"qualname": 4, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.parsing.parses.Parse.can_compare": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 70}, "prosodic.parsing.parses.Parse.txt": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.num_sylls": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.num_words": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parses.Parse.num_peaks": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.is_rising": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.parsing.parses.Parse.nary_feet": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "prosodic.parsing.parses.Parse.feet": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.foot_counts": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.foot_sizes": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parses.Parse.num_positions": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.foot_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.parsing.parses.Parse.is_iambic": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parses.Parse.is_trochaic": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parses.Parse.is_anapestic": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parses.Parse.is_dactylic": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.parses.Parse.average_position_size": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.attrs": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.parses.Parse.line_txt": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.parsing.parses.Parse.ambig": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.parsing.parses.Parse.constraint_viols": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parses.Parse.constraint_scores": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parses.Parse.score": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.parses.Parse.meter_str": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "prosodic.parsing.parses.Parse.meter_ints": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 47}, "prosodic.parsing.parses.Parse.stress_ints": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 49}, "prosodic.parsing.parses.Parse.stress_str": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "prosodic.parsing.parses.Parse.bounding_relation": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 48}, "prosodic.parsing.parses.Parse.bounds": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 52}, "prosodic.parsing.parses.Parse.html": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.parses.Parse.to_html": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 239, "bases": 0, "doc": 82}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "prosodic.parsing.parses.Parse.stats_d": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 47}, "prosodic.parsing.parses.Parse.get_df": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 52}, "prosodic.parsing.positions": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.positions.ParsePosition": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 69}, "prosodic.parsing.positions.ParsePosition.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 57}, "prosodic.parsing.positions.ParsePosition.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.positions.ParsePosition.viold": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.positions.ParsePosition.violset": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.positions.ParsePosition.slots": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.positions.ParsePosition.parse": {"qualname": 2, "fullname": 5, "annotation": 9, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.positions.ParsePosition.init": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 8}, "prosodic.parsing.positions.ParsePosition.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 27}, "prosodic.parsing.positions.ParsePosition.attrs": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.positions.ParsePosition.is_prom": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.parsing.positions.ParsePosition.txt": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.positions.ParsePosition.meter_str": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.positions.ParsePosition.num_slots": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.slots": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.slots.ParseSlot": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 58}, "prosodic.parsing.slots.ParseSlot.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 129, "bases": 0, "doc": 63}, "prosodic.parsing.slots.ParseSlot.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.slots.ParseSlot.unit": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.slots.ParseSlot.viold": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.slots.ParseSlot.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 27}, "prosodic.parsing.slots.ParseSlot.violset": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "prosodic.parsing.slots.ParseSlot.num_viols": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "prosodic.parsing.slots.ParseSlot.meter_val": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.slots.ParseSlot.is_prom": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.slots.ParseSlot.wordform": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.slots.ParseSlot.syll": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.slots.ParseSlot.is_strong": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.slots.ParseSlot.is_weak": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.slots.ParseSlot.score": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "prosodic.parsing.slots.ParseSlot.has_viol": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.parsing.slots.ParseSlot.txt": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.parsing.slots.ParseSlot.i": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "prosodic.parsing.slots.ParseSlot.attrs": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.parsing.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.utils.Bounding": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 81}, "prosodic.parsing.utils.Bounding.bounds": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.utils.Bounding.bounded": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.utils.Bounding.equal": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.utils.Bounding.unequal": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.parsing.utils.get_iambic_parse": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 57}, "prosodic.parsing.utils.split_scansion": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 40}, "prosodic.parsing.utils.get_possible_scansions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 68}, "prosodic.parsing.utils.getlenparse": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 43}, "prosodic.parsing.utils.iter_mpos": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 125, "bases": 0, "doc": 84}, "prosodic.prosodic": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.sents": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.sents.sents": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.sents.tokenizers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 45}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 48}, "prosodic.sents.tokenizers.tokenize_words_txt": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 39}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 47}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 344, "bases": 0, "doc": 100}, "prosodic.texts": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 132}, "prosodic.texts.lines.Line.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 143, "bases": 0, "doc": 118}, "prosodic.texts.lines.Line.line_sep": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.sep": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.child_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.is_parseable": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.list_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.use_cache": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.lines.Line.wordform_matrix": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.texts.lines.Line.get_wordform_matrix": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 52}, "prosodic.texts.lines.Line.match_wordforms": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 51}, "prosodic.texts.lines.Line.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 31}, "prosodic.texts.lines.Line.to_html": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 249, "bases": 0, "doc": 116}, "prosodic.texts.lines.Line.stats": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 59}, "prosodic.texts.lines.Line.stats_d": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 62}, "prosodic.texts.lines.Line.num_sylls": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.texts.lines.Line.rime_distance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 51}, "prosodic.texts.lines.LineList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "prosodic.texts.stanzas": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.stanzas.Stanza": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 121}, "prosodic.texts.stanzas.Stanza.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 143, "bases": 0, "doc": 118}, "prosodic.texts.stanzas.Stanza.sep": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.stanzas.Stanza.child_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.stanzas.Stanza.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.stanzas.Stanza.list_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.stanzas.Stanza.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 31}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 53}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "prosodic.texts.stanzas.StanzaList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "prosodic.texts.texts": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.NUMBUILT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 204}, "prosodic.texts.texts.Text.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 223, "bases": 0, "doc": 190}, "prosodic.texts.texts.Text.sep": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.child_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.prefix": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.parse_unit_attr": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.list_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.use_cache": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 21, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.lang": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.texts.texts.Text.parses_from_cache": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 23}, "prosodic.texts.texts.Text.to_hash": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "prosodic.texts.texts.Text.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 29}, "prosodic.texts.texts.Text.get_meter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 62}, "prosodic.texts.texts.Text.set_meter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 28}, "prosodic.texts.texts.Text.meter": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.texts.texts.Text.best_parse": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.texts.texts.Text.parseable_units": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.texts.texts.Text.needs_parsing": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 81}, "prosodic.texts.texts.Text.parse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 38}, "prosodic.texts.texts.Text.render": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 78}, "prosodic.texts.texts.Text.reset_meter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 28}, "prosodic.texts.texts.Text.parse_iter": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 128}, "prosodic.texts.texts.Text.parses": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "prosodic.texts.texts.Text.parse_stats": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 51}, "prosodic.texts.texts.Text.to_html": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 72}, "prosodic.texts.texts.Text.get_rhyming_lines": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 52}, "prosodic.texts.texts.Text.rhyming_lines": {"qualname": 3, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.texts.texts.Text.num_lines": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.texts.texts.Text.num_rhyming_lines": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.texts.texts.Text.is_rhyming": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "prosodic.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.utils.SimpleCache": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 58}, "prosodic.utils.SimpleCache.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 27}, "prosodic.utils.SimpleCache.root_dir": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.utils.SimpleCache.get": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 63}, "prosodic.utils.retry_on_io_error": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 54}, "prosodic.utils.group_ents": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 54}, "prosodic.utils.groupby": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 71}, "prosodic.utils.get_txt": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 53}, "prosodic.utils.clean_text": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 37}, "prosodic.utils.get_attr_str": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 63}, "prosodic.utils.safesum": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 50}, "prosodic.utils.setindex": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 59}, "prosodic.utils.get_stress": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 44}, "prosodic.utils.get_initial_whitespace": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 39}, "prosodic.utils.unique": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 43}, "prosodic.utils.hashstr": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 51}, "prosodic.utils.read_json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 39}, "prosodic.utils.from_json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 72}, "prosodic.utils.load": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 47}, "prosodic.utils.to_json": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 62}, "prosodic.utils.ensure_dir": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 26}, "prosodic.utils.encode_cache": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 40}, "prosodic.utils.decode_cache": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 36}, "prosodic.utils.to_html": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 63}, "prosodic.utils.enable_caching": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 5}, "prosodic.utils.caching_is_enabled": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 25}, "prosodic.utils.disable_caching": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 5}, "prosodic.utils.caching_enabled": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "prosodic.utils.caching_disabled": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "prosodic.utils.logging_disabled": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "prosodic.utils.logging_enabled": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "prosodic.utils.force_int": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 74}, "prosodic.utils.tokenize_agnostic": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 40}, "prosodic.web": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.web.app": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.web.app.app": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "prosodic.web.app.socketio": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "prosodic.web.app.linelim": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "prosodic.web.app.get_text": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.web.app.parse": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.web.app.index": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "prosodic.web.app.main": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "prosodic.web.app.jsonify": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.web.app.unjsonify": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "prosodic.words": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.phonemes": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.phonemes.PhonemeClass": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 30}, "prosodic.words.phonemes.PhonemeClass.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 37}, "prosodic.words.phonemes.PhonemeClass.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "prosodic.words.phonemes.PhonemeClass.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 29}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "prosodic.words.phonemes.get_phoneme_featuretable": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 25}, "prosodic.words.phonemes.Phoneme": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 56}, "prosodic.words.phonemes.FEATS_PANPHON": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 80, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.phonemes.get_ipa_info": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 27}, "prosodic.words.phonemes.PhonemeList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 10}, "prosodic.words.phonemes.PhonemeList.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 33}, "prosodic.words.syllables": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.syllables.Syllable": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 58}, "prosodic.words.syllables.Syllable.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 70}, "prosodic.words.syllables.Syllable.prefix": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.syllables.Syllable.child_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.syllables.Syllable.list_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.syllables.Syllable.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 27}, "prosodic.words.syllables.Syllable.stress": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "prosodic.words.syllables.Syllable.attrs": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.words.syllables.Syllable.num_vowels": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.words.syllables.Syllable.has_dipthong": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "prosodic.words.syllables.Syllable.is_stressed": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.words.syllables.Syllable.is_heavy": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.words.syllables.Syllable.is_strong": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.words.syllables.Syllable.is_weak": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.words.syllables.Syllable.onset": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.words.syllables.Syllable.rime": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.words.syllables.Syllable.nucleus": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.words.syllables.Syllable.coda": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.words.syllables.Syllable.rime_distance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 46}, "prosodic.words.syllables.SyllableList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "prosodic.words.words": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.SYLL_SEP": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.Word": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 92}, "prosodic.words.words.WordToken": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "prosodic.words.words.WordToken.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 85}, "prosodic.words.words.WordToken.child_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordToken.list_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordToken.prefix": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordToken.lang": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordToken.word": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordToken.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "prosodic.words.words.WordType": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "prosodic.words.words.WordType.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 65}, "prosodic.words.words.WordType.child_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.list_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.prefix": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "prosodic.words.words.WordType.wtoken": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.forms": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.form": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.num_forms": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.is_punc": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.num_sylls": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.num_stressed_sylls": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordType.attrs": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "prosodic.words.words.WordType.rime_distance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 50}, "prosodic.words.words.WordForm": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 10}, "prosodic.words.words.WordForm.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 141, "bases": 0, "doc": 95}, "prosodic.words.words.WordForm.prefix": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.child_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.list_type": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.sylls_ipa": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.sylls_text": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "prosodic.words.words.WordForm.wtoken": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.syllables": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "prosodic.words.words.WordForm.token_stress": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.is_functionword": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.num_sylls": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.num_stressed_sylls": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordForm.key": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "prosodic.words.words.WordForm.to_hash": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 31}, "prosodic.words.words.WordForm.rime": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "prosodic.words.words.WordForm.rime_distance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 53}, "prosodic.words.words.WordTypeList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}, "prosodic.words.words.WordFormList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 14}, "prosodic.words.words.WordFormList.slots": {"qualname": 2, "fullname": 5, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordFormList.num_sylls": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordFormList.first_syll": {"qualname": 3, "fullname": 6, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordFormList.sort_key": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "prosodic.words.words.WordTokenList": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 8}}, "length": 936, "save": true}, "index": {"qualname": {"root": {"3": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}}, "df": 1}}, "docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 27, "c": {"docs": {"prosodic.lib.lexconvert.Counter.c": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.cli.cli": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 3}, "n": {"docs": {"prosodic.utils.clean_text": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.child_class": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}}, "df": 9, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.children": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.EntityList.children": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.CHILDCLASSES": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.CHILDCLASSLISTS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.checkSetting": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {"prosodic.lib.lexconvert.chr": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}}, "df": 20, "d": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.langs.langs.Language.cached": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.enable_caching": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.disable_caching": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}}, "df": 11, "s": {"docs": {"prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}}, "df": 10}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.consonants": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}}, "df": 2}}, "l": {"docs": {"prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.is_complete": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.Counter.c": {"tf": 1}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1}}, "df": 3}}, "s": {"docs": {"prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}}, "df": 1}}, "v": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}}, "df": 1, "c": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}}, "df": 1}, "v": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.imports.PATH_WEB": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}}, "df": 6, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.word": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 1}}}}}}, "docs": {"prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordToken.prefix": {"tf": 1}, "prosodic.words.words.WordToken.lang": {"tf": 1}, "prosodic.words.words.WordToken.word": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}}, "df": 10, "s": {"docs": {"prosodic.ents.Entity.wordtokens": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordType.prefix": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.form": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}}, "df": 17, "s": {"docs": {"prosodic.ents.Entity.wordtypes": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordTypeList": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.ents.Entity.words": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.wordSeparator": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.prefix": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 24, "s": {"docs": {"prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 6}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.warnedAlready": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.get_initial_whitespace": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {"prosodic.ents.Entity.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}, "a": {"2": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}}, "df": 1}}, "docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}}, "df": 3}}, "n": {"docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 29, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.INITCLASSES": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}}, "df": 7}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.web.app.index": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}}, "df": 48}, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.ents.Entity.prefix": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.ents.Entity.sep": {"tf": 1}, "prosodic.ents.Entity.parent": {"tf": 1}, "prosodic.ents.Entity.children": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}}, "df": 69, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.ents.EntityList.parent": {"tf": 1}, "prosodic.ents.EntityList.children": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {"prosodic.utils.group_ents": {"tf": 1}}, "df": 1}}, "g": {"docs": {"prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.english.english.English": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.english.english.EnglishLanguage": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.encode_cache": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.enable_caching": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 2}}}}, "j": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter.exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}}, "df": 2}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding.equal": {"tf": 1}}, "df": 1}}}}}, "t": {"4": {"docs": {"prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}}, "df": 17, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 32, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1}}, "df": 2}}}}, "docs": {"prosodic.words.words.WordForm.token_stress": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 5, "r": {"docs": {"prosodic.imports.TOKENIZER": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.total_score": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}}, "df": 9}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.texts.texts.Text.prefix": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}, "prosodic.texts.texts.Text.lang": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}}, "df": 38, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.test.test_parser": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.constraints.s_trough": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.web.app.parse": {"tf": 1}}, "df": 114, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1}}, "df": 2}, "s": {"docs": {"prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}}, "df": 22}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}}, "df": 37}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}}, "df": 17}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.parent": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.EntityList.parent": {"tf": 1}}, "df": 3}}}, "a": {"docs": {"prosodic.imports.SEP_PARA": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.PATH_HERE": {"tf": 1}, "prosodic.imports.PATH_REPO": {"tf": 1}, "prosodic.imports.PATH_PROSODIC": {"tf": 1}, "prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.PATH_PHONS": {"tf": 1}, "prosodic.imports.PATH_WEB": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.PATH_DICTS": {"tf": 1}, "prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.PATH_MTREE": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}}, "df": 15, "s": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.ents.Entity.prefix": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.texts.Text.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.words.WordToken.prefix": {"tf": 1}, "prosodic.words.words.WordType.prefix": {"tf": 1}, "prosodic.words.words.WordForm.prefix": {"tf": 1}}, "df": 16}}}, "v": {"docs": {"prosodic.ents.Entity.prev": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.PATH_PROSODIC": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.profile": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}}, "df": 4}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.as_printable": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.is_phon": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.Language.phonemize": {"tf": 1}}, "df": 1, "r": {"docs": {"prosodic.langs.langs.Language.phonemizer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.Language.phoneticize": {"tf": 1}}, "df": 1}}}}}}, "s": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}}, "df": 1}}}}}}}, "docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2}}, "s": {"docs": {"prosodic.imports.PATH_PHONS": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.SEPS_PHRASE": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.constraints.w_peak": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.utils.get_possible_scansions": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.words.words.WordType.is_punc": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}}, "df": 1}}, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.num": {"tf": 1}, "prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}}, "df": 33, "s": {"docs": {"prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.NUMBUILT": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.next": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"prosodic.ents.Entity.l": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}}, "df": 33, "s": {"docs": {"prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}}, "df": 13}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}}, "df": 2}}, "m": {"docs": {"prosodic.web.app.linelim": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}}, "df": 1}}, "d": {"docs": {"prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.texts.texts.Text.lang": {"tf": 1}, "prosodic.words.words.WordToken.lang": {"tf": 1}}, "df": 9, "s": {"docs": {"prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.LANGS": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.Language": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1}, "prosodic.langs.langs.Language.cached": {"tf": 1}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1}, "prosodic.langs.langs.Language.phonemizer": {"tf": 1}, "prosodic.langs.langs.Language.phonemize": {"tf": 1}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.Language.syllabifier": {"tf": 1}, "prosodic.langs.langs.Language.syllabiphon": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}}, "df": 17}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.HASHSTR_LEN": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.LOG_LEVEL": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}}, "df": 5, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 19}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.LOG_LEVEL": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {"prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.load": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.imports.USE_REDIS": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}}, "df": 9, "r": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.texts.texts.Text.parseable_units": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}}, "df": 4}}}}, "x": {"docs": {"prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.unique": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.langs.unstress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding.unequal": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.web.app.unjsonify": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "f": {"8": {"docs": {"prosodic.lib.lexconvert.as_utf8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "s": {"docs": {"prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.ents.Entity.sep": {"tf": 1}, "prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.SEP_PARA": {"tf": 1}, "prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.words.words.SYLL_SEP": {"tf": 1}}, "df": 11, "s": {"docs": {"prosodic.imports.SEPS_PHRASE": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}}, "df": 13, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.utils.setindex": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.utils.safesum": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}}, "df": 15, "s": {"docs": {"prosodic.ents.Entity.stanzas": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.stanzas.StanzaList": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}}, "df": 12}}}, "r": {"docs": {"prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}}, "df": 1}}}}}}}, "docs": {"prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1}, "prosodic.langs.langs.stress": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}}, "df": 3}, "d": {"docs": {"prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}}, "df": 3, "l": {"docs": {"prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.words.words.SYLL_SEP": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}}, "df": 27, "s": {"docs": {"prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.syllables.SyllableList": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.langs.Language.syllabifier": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.langs.Language.syllabiphon": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}}, "df": 13}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 17}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.sorted": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.web.app.socketio": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 7, "s": {"docs": {"prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.speakjet": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {"prosodic.lib.lexconvert.Counter.sc": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}}, "df": 4}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}}, "df": 5}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}}, "df": 4, "h": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.HASHSTR_LEN": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.html": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_HERE": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.hyphenate": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.web.app.jsonify": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.PATH_REPO": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.REPLACE_DASHES": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.replHome": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.USE_REDIS": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.Text.reset_meter": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.langs.fix_recasing": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.RHYME_MAX_DIST": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}}, "df": 11}, "n": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 11, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}}, "df": 1, "m": {"docs": {"prosodic.words.words.WordType.form": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.finnish.finnish.Finnish": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}}, "df": 1}}, "d": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}}, "df": 1}}, "x": {"docs": {"prosodic.langs.langs.fix_recasing": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordFormList.first_syll": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.words.words.WordForm.is_functionword": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}}, "df": 10}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}}, "df": 10}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.web.app.app": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.as_utf8": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}, "prosodic.lib.lexconvert.as_printable": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.ambig": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.unres_across": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.ents.Entity.data": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.DataPoint": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.DataAggregator": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}}, "df": 10}}}}}}}}}}}, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DASHES": {"tf": 1}, "prosodic.imports.REPLACE_DASHES": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.DF_BADCOLS": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}}, "df": 11, "s": {"docs": {"prosodic.imports.PATH_DICTS": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.RHYME_MAX_DIST": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.disable_caching": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.langs.finnish.finnish.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}, "prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}}, "df": 11}}}}}, "p": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}}, "df": 17, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}}, "df": 9}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.decode_cache": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 34, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.getSetting": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.utils.getlenparse": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.meter.NUM_GOING": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_MTREE": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.RHYME_MAX_DIST": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 16}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}}, "df": 13}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 16}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}, "prosodic.parsing.meter.Meter.exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}}, "df": 42}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}}, "df": 23, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 24}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}}, "df": 1}}, "u": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}}, "df": 1}, "y": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.opt_vowel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.other": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_BADCOLS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.parses.Parse.branch": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.bound": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}}, "df": 6, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.variant": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "fullname": {"root": {"3": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}}, "df": 1}}, "docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 27, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic": {"tf": 1}, "prosodic.cli": {"tf": 1}, "prosodic.cli.cli": {"tf": 1}, "prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.ents": {"tf": 1}, "prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.ents.Entity.prefix": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.ents.Entity.sep": {"tf": 1}, "prosodic.ents.Entity.parent": {"tf": 1}, "prosodic.ents.Entity.children": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.ents.EntityList.parent": {"tf": 1}, "prosodic.ents.EntityList.children": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.imports": {"tf": 1}, "prosodic.imports.PATH_HERE": {"tf": 1}, "prosodic.imports.PATH_REPO": {"tf": 1}, "prosodic.imports.PATH_PROSODIC": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.PATH_PHONS": {"tf": 1}, "prosodic.imports.PATH_WEB": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.PATH_DICTS": {"tf": 1}, "prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.imports.USE_REDIS": {"tf": 1}, "prosodic.imports.HASHSTR_LEN": {"tf": 1}, "prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.imports.PATH_MTREE": {"tf": 1}, "prosodic.imports.DASHES": {"tf": 1}, "prosodic.imports.REPLACE_DASHES": {"tf": 1}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.imports.TOKENIZER": {"tf": 1}, "prosodic.imports.SEPS_PHRASE": {"tf": 1}, "prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.SEP_PARA": {"tf": 1}, "prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.LOG_LEVEL": {"tf": 1}, "prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.DF_BADCOLS": {"tf": 1}, "prosodic.imports.LANGS": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.RHYME_MAX_DIST": {"tf": 1}, "prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.imports.profile": {"tf": 1}, "prosodic.langs": {"tf": 1}, "prosodic.langs.english": {"tf": 1}, "prosodic.langs.english.english": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1}, "prosodic.langs.english.english.English": {"tf": 1}, "prosodic.langs.finnish": {"tf": 1}, "prosodic.langs.finnish.finnish": {"tf": 1}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}, "prosodic.langs.finnish.finnish.Finnish": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_functions": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_stress": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_text": {"tf": 1}, "prosodic.langs.finnish.finnish_weight": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.langs.langs": {"tf": 1}, "prosodic.langs.langs.Language": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1}, "prosodic.langs.langs.Language.cached": {"tf": 1}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1}, "prosodic.langs.langs.Language.phonemizer": {"tf": 1}, "prosodic.langs.langs.Language.phonemize": {"tf": 1}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.Language.syllabifier": {"tf": 1}, "prosodic.langs.langs.Language.syllabiphon": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.langs.langs.fix_recasing": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.langs.langs.unstress": {"tf": 1}, "prosodic.langs.langs.stress": {"tf": 1}, "prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.lib": {"tf": 1}, "prosodic.lib.MaxEnt": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}, "prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.Counter.c": {"tf": 1}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.warnedAlready": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.as_utf8": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.as_printable": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}, "prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.lib.lexconvert.chr": {"tf": 1}, "prosodic.lib.lexconvert.sorted": {"tf": 1}, "prosodic.lib.metricaltree": {"tf": 1}, "prosodic.lib.metricaltree.deptree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.test": {"tf": 1}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1}, "prosodic.lib.syllabiphon": {"tf": 1}, "prosodic.lib.syllabiphon.complexity": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}, "prosodic.parsing": {"tf": 1}, "prosodic.parsing.constraints": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter": {"tf": 1}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}, "prosodic.parsing.meter.Meter.exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1}, "prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.parsing.utils": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.prosodic": {"tf": 1.4142135623730951}, "prosodic.sents": {"tf": 1}, "prosodic.sents.sents": {"tf": 1}, "prosodic.sents.tokenizers": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts": {"tf": 1}, "prosodic.texts.lines": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts": {"tf": 1}, "prosodic.texts.texts.NUMBUILT": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.texts.texts.Text.prefix": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}, "prosodic.texts.texts.Text.lang": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.enable_caching": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.disable_caching": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.web": {"tf": 1}, "prosodic.web.app": {"tf": 1}, "prosodic.web.app.app": {"tf": 1}, "prosodic.web.app.socketio": {"tf": 1}, "prosodic.web.app.linelim": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.web.app.parse": {"tf": 1}, "prosodic.web.app.index": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}, "prosodic.web.app.jsonify": {"tf": 1}, "prosodic.web.app.unjsonify": {"tf": 1}, "prosodic.words": {"tf": 1}, "prosodic.words.phonemes": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words": {"tf": 1}, "prosodic.words.words.SYLL_SEP": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordToken.prefix": {"tf": 1}, "prosodic.words.words.WordToken.lang": {"tf": 1}, "prosodic.words.words.WordToken.word": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordType.prefix": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.form": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.prefix": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 936}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {"prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.profile": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}}, "df": 4}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}}, "df": 2}}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.ents.Entity.prefix": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.texts.Text.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.words.WordToken.prefix": {"tf": 1}, "prosodic.words.words.WordType.prefix": {"tf": 1}, "prosodic.words.words.WordForm.prefix": {"tf": 1}}, "df": 16}}}, "v": {"docs": {"prosodic.ents.Entity.prev": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.as_printable": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.web.app.parse": {"tf": 1}}, "df": 114, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1}}, "df": 2}, "s": {"docs": {"prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parses": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1}, "prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}}, "df": 72, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}}, "df": 22}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}}, "df": 37, "s": {"docs": {"prosodic.parsing.parselists": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}}, "df": 38}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}}, "df": 17}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing": {"tf": 1}, "prosodic.parsing.constraints": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter": {"tf": 1}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}, "prosodic.parsing.meter.Meter.exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1}, "prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.parsing.utils": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 203}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.parent": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.EntityList.parent": {"tf": 1}}, "df": 3}}}, "a": {"docs": {"prosodic.imports.SEP_PARA": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.PATH_HERE": {"tf": 1}, "prosodic.imports.PATH_REPO": {"tf": 1}, "prosodic.imports.PATH_PROSODIC": {"tf": 1}, "prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.PATH_PHONS": {"tf": 1}, "prosodic.imports.PATH_WEB": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.PATH_DICTS": {"tf": 1}, "prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.PATH_MTREE": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}}, "df": 15, "s": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.is_phon": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.words.phonemes": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 18}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.Language.phonemize": {"tf": 1}}, "df": 1, "r": {"docs": {"prosodic.langs.langs.Language.phonemizer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.Language.phoneticize": {"tf": 1}}, "df": 1}}}}}}, "s": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}}, "df": 1}}}}}}}, "docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2}}, "s": {"docs": {"prosodic.imports.PATH_PHONS": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.SEPS_PHRASE": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.constraints.w_peak": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.parsing.parses.Parse.positions": {"tf": 1}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.positions": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}}, "df": 21}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.utils.get_possible_scansions": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.words.words.WordType.is_punc": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"prosodic.lib.lexconvert.Counter.c": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.cli": {"tf": 1}, "prosodic.cli.cli": {"tf": 1.4142135623730951}, "prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 3}, "n": {"docs": {"prosodic.utils.clean_text": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.child_class": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}}, "df": 9, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.children": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.EntityList.children": {"tf": 1}, "prosodic.parsing.parses.Parse.children": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.CHILDCLASSES": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.CHILDCLASSLISTS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.checkSetting": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {"prosodic.lib.lexconvert.chr": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}}, "df": 20, "d": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.langs.langs.Language.cached": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.enable_caching": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.disable_caching": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}}, "df": 11, "s": {"docs": {"prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.parsing.constraints": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.get_constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}}, "df": 19}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.consonants": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}}, "df": 2}}, "l": {"docs": {"prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.syllabiphon.complexity": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.is_complete": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.Counter.c": {"tf": 1}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1}}, "df": 3}}, "s": {"docs": {"prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}}, "df": 1}}, "v": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}}, "df": 1, "c": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}}, "df": 1}, "v": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}}, "df": 1}}}, "w": {"docs": {"prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.imports.PATH_WEB": {"tf": 1}, "prosodic.web": {"tf": 1}, "prosodic.web.app": {"tf": 1}, "prosodic.web.app.app": {"tf": 1}, "prosodic.web.app.socketio": {"tf": 1}, "prosodic.web.app.linelim": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.web.app.parse": {"tf": 1}, "prosodic.web.app.index": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}, "prosodic.web.app.jsonify": {"tf": 1}, "prosodic.web.app.unjsonify": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_weight": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}}, "df": 8, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.word": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 1}}}}}}, "docs": {"prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordToken.prefix": {"tf": 1}, "prosodic.words.words.WordToken.lang": {"tf": 1}, "prosodic.words.words.WordToken.word": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}}, "df": 10, "s": {"docs": {"prosodic.ents.Entity.wordtokens": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordType.prefix": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.form": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}}, "df": 17, "s": {"docs": {"prosodic.ents.Entity.wordtypes": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordTypeList": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.ents.Entity.words": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.words": {"tf": 1}, "prosodic.words.phonemes": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words": {"tf": 1.4142135623730951}, "prosodic.words.words.SYLL_SEP": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.lang": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.wtoken": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.forms": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.form": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.num_forms": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.is_punc": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.num_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.attrs": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.wtoken": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.token_stress": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.key": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_hash": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordTypeList": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.slots": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1.4142135623730951}, "prosodic.words.words.WordTokenList": {"tf": 1.4142135623730951}}, "df": 97, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.wordSeparator": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.prefix": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 24, "s": {"docs": {"prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 6}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.warnedAlready": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.get_initial_whitespace": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {"prosodic.ents.Entity.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}, "a": {"2": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}}, "df": 1}}, "docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}}, "df": 3}}, "n": {"docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 29, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.INITCLASSES": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}}, "df": 7}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.web.app.index": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}}, "df": 48}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports": {"tf": 1}, "prosodic.imports.PATH_HERE": {"tf": 1}, "prosodic.imports.PATH_REPO": {"tf": 1}, "prosodic.imports.PATH_PROSODIC": {"tf": 1}, "prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.PATH_PHONS": {"tf": 1}, "prosodic.imports.PATH_WEB": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.PATH_DICTS": {"tf": 1}, "prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.imports.USE_REDIS": {"tf": 1}, "prosodic.imports.HASHSTR_LEN": {"tf": 1}, "prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.imports.PATH_MTREE": {"tf": 1}, "prosodic.imports.DASHES": {"tf": 1}, "prosodic.imports.REPLACE_DASHES": {"tf": 1}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.imports.TOKENIZER": {"tf": 1}, "prosodic.imports.SEPS_PHRASE": {"tf": 1}, "prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.SEP_PARA": {"tf": 1}, "prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.LOG_LEVEL": {"tf": 1}, "prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.DF_BADCOLS": {"tf": 1}, "prosodic.imports.LANGS": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.RHYME_MAX_DIST": {"tf": 1}, "prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.imports.profile": {"tf": 1}}, "df": 57}}}}}}, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents": {"tf": 1}, "prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.ents.Entity.prefix": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.ents.Entity.sep": {"tf": 1}, "prosodic.ents.Entity.parent": {"tf": 1}, "prosodic.ents.Entity.children": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.ents.EntityList.parent": {"tf": 1}, "prosodic.ents.EntityList.children": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}}, "df": 76}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.ents.Entity.prefix": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.ents.Entity.sep": {"tf": 1}, "prosodic.ents.Entity.parent": {"tf": 1}, "prosodic.ents.Entity.children": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}}, "df": 69, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.ents.EntityList.parent": {"tf": 1}, "prosodic.ents.EntityList.children": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}}, "df": 5}}}}}}}}, "g": {"docs": {"prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.english": {"tf": 1}, "prosodic.langs.english.english": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.English": {"tf": 1.7320508075688772}}, "df": 11, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.english.english.EnglishLanguage": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.encode_cache": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.enable_caching": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 2}}}}, "j": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter.exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}}, "df": 2}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding.equal": {"tf": 1}}, "df": 1}}}}}, "t": {"4": {"docs": {"prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}}, "df": 17, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 32, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"2": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1}}, "df": 2}}}}, "docs": {"prosodic.words.words.WordForm.token_stress": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 5, "r": {"docs": {"prosodic.imports.TOKENIZER": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.sents.tokenizers": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.total_score": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}}, "df": 9}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.langs.finnish.finnish_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.texts.texts.Text.prefix": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}, "prosodic.texts.texts.Text.lang": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}}, "df": 39, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.texts": {"tf": 1}, "prosodic.texts.lines": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts": {"tf": 1.4142135623730951}, "prosodic.texts.texts.NUMBUILT": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.sep": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.use_cache": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.lang": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_hash": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.set_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.best_parse": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1.4142135623730951}}, "df": 68}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.test": {"tf": 1}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1.4142135623730951}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.constraints.s_trough": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}}, "df": 1}}, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.num": {"tf": 1}, "prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}}, "df": 33, "s": {"docs": {"prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.NUMBUILT": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.next": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {"prosodic.ents.Entity.l": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}, "prosodic.words.words.WordType.list_type": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}}, "df": 33, "s": {"docs": {"prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.texts.lines": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}}, "df": 33}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}}, "df": 2}}, "m": {"docs": {"prosodic.web.app.linelim": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}}, "df": 1}, "b": {"docs": {"prosodic.lib": {"tf": 1}, "prosodic.lib.MaxEnt": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}, "prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.Counter.c": {"tf": 1}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.warnedAlready": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.as_utf8": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.as_printable": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}, "prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.lib.lexconvert.chr": {"tf": 1}, "prosodic.lib.lexconvert.sorted": {"tf": 1}, "prosodic.lib.metricaltree": {"tf": 1}, "prosodic.lib.metricaltree.deptree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.test": {"tf": 1}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1}, "prosodic.lib.syllabiphon": {"tf": 1}, "prosodic.lib.syllabiphon.complexity": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}}, "df": 245}}, "d": {"docs": {"prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.texts.texts.Text.lang": {"tf": 1}, "prosodic.words.words.WordToken.lang": {"tf": 1}}, "df": 9, "s": {"docs": {"prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.LANGS": {"tf": 1}, "prosodic.langs": {"tf": 1}, "prosodic.langs.english": {"tf": 1}, "prosodic.langs.english.english": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1}, "prosodic.langs.english.english.English": {"tf": 1}, "prosodic.langs.finnish": {"tf": 1}, "prosodic.langs.finnish.finnish": {"tf": 1}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}, "prosodic.langs.finnish.finnish.Finnish": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_functions": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_stress": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_text": {"tf": 1}, "prosodic.langs.finnish.finnish_weight": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.langs.langs": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.lang": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.use_cache": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.get": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.cached": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.phonemizer": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.phonemize": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.syllabifier": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.syllabiphon": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.syllabify": {"tf": 1.4142135623730951}, "prosodic.langs.langs.fix_recasing": {"tf": 1.4142135623730951}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1.4142135623730951}, "prosodic.langs.langs.unstress": {"tf": 1.4142135623730951}, "prosodic.langs.langs.stress": {"tf": 1.4142135623730951}, "prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1.4142135623730951}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1.4142135623730951}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1.4142135623730951}, "prosodic.langs.langs.get_espeak_env": {"tf": 1.4142135623730951}, "prosodic.langs.langs.set_espeak_env": {"tf": 1.4142135623730951}}, "df": 142}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.Language": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1}, "prosodic.langs.langs.Language.cached": {"tf": 1}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1}, "prosodic.langs.langs.Language.phonemizer": {"tf": 1}, "prosodic.langs.langs.Language.phonemize": {"tf": 1}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.Language.syllabifier": {"tf": 1}, "prosodic.langs.langs.Language.syllabiphon": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}}, "df": 17}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.HASHSTR_LEN": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.LOG_LEVEL": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.Counter.c": {"tf": 1}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.warnedAlready": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.as_utf8": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.as_printable": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}, "prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.lib.lexconvert.chr": {"tf": 1}, "prosodic.lib.lexconvert.sorted": {"tf": 1}}, "df": 99}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 19}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.LOG_LEVEL": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {"prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.load": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.positions_ls": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.imports.USE_REDIS": {"tf": 1}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}}, "df": 9, "r": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.texts.texts.Text.parseable_units": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}}, "df": 4}}}}, "x": {"docs": {"prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.unique": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.langs.unstress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.unmetrical": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding.unequal": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.web.app.unjsonify": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "f": {"8": {"docs": {"prosodic.lib.lexconvert.as_utf8": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.utils": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.utils": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.enable_caching": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.disable_caching": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 45}}}}}, "s": {"docs": {"prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.ents.Entity.sep": {"tf": 1}, "prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.SEP_PARA": {"tf": 1}, "prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.words.words.SYLL_SEP": {"tf": 1}}, "df": 11, "s": {"docs": {"prosodic.imports.SEPS_PHRASE": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}}, "df": 13, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.utils.setindex": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.sents": {"tf": 1}, "prosodic.sents.sents": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 23}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.utils.safesum": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}}, "df": 15, "s": {"docs": {"prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.texts.stanzas": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}}, "df": 13}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.stanzas.StanzaList": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}}, "df": 12}}}, "r": {"docs": {"prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}}, "df": 1}}}}}}}, "docs": {"prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.langs.langs.stress": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}}, "df": 3}, "d": {"docs": {"prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}}, "df": 3, "l": {"docs": {"prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.words.words.SYLL_SEP": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}}, "df": 27, "s": {"docs": {"prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.words.syllables": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}}, "df": 45}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.syllables.SyllableList": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1.4142135623730951}}, "df": 13}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.langs.Language.syllabifier": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.langs.Language.syllabiphon": {"tf": 1}, "prosodic.lib.syllabiphon": {"tf": 1}, "prosodic.lib.syllabiphon.complexity": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}}, "df": 20}}}}}}}, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}}, "df": 13}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 17}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"prosodic.langs.finnish.finnish_sonority": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.sorted": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.web.app.socketio": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 7, "s": {"docs": {"prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.speakjet": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {"prosodic.lib.lexconvert.Counter.sc": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.total_score": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}}, "df": 4}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}}, "df": 28}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}}, "df": 4, "h": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.HASHSTR_LEN": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.html": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_HERE": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.hyphenate": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.web.app.jsonify": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.PATH_REPO": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.REPLACE_DASHES": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.replHome": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.USE_REDIS": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.Text.reset_meter": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.langs.fix_recasing": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.RHYME_MAX_DIST": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}}, "df": 11}, "n": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 11, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}}, "df": 1, "m": {"docs": {"prosodic.words.words.WordType.form": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.finnish": {"tf": 1}, "prosodic.langs.finnish.finnish": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.Finnish": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_sonority": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_stress": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_text": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_weight": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1.4142135623730951}}, "df": 101, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}}, "df": 5}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}}, "df": 1}}, "d": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}}, "df": 1}}, "x": {"docs": {"prosodic.langs.langs.fix_recasing": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.words.WordFormList.first_syll": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_functions": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}}, "df": 31}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.words.words.WordForm.is_functionword": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}}, "df": 10}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_annotator": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}}, "df": 29}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}}, "df": 10}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.web.app": {"tf": 1}, "prosodic.web.app.app": {"tf": 1.4142135623730951}, "prosodic.web.app.socketio": {"tf": 1}, "prosodic.web.app.linelim": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.web.app.parse": {"tf": 1}, "prosodic.web.app.index": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}, "prosodic.web.app.jsonify": {"tf": 1}, "prosodic.web.app.unjsonify": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.as_utf8": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}, "prosodic.lib.lexconvert.as_printable": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.ambig": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.unres_across": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.ents.Entity.data": {"tf": 1}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.DataPoint": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.DataAggregator": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}}, "df": 10}}}}}}}}}}}, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DASHES": {"tf": 1}, "prosodic.imports.REPLACE_DASHES": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.DF_BADCOLS": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}}, "df": 11, "s": {"docs": {"prosodic.imports.PATH_DICTS": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.RHYME_MAX_DIST": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.disable_caching": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.langs.finnish.finnish.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}, "prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}}, "df": 11}}}}}, "p": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}}, "df": 28, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}}, "df": 17, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}}, "df": 9}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.decode_cache": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 34, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.getSetting": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.utils.getlenparse": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.meter.NUM_GOING": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_MTREE": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.RHYME_MAX_DIST": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 34, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 16}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}}, "df": 13}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}}, "df": 16}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1}, "prosodic.parsing.meter": {"tf": 1}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.exhaustive": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}}, "df": 45}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree": {"tf": 1}, "prosodic.lib.metricaltree.deptree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.test": {"tf": 1}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1}}, "df": 92, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 24}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}}, "df": 1}}, "u": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1}}, "df": 1}, "y": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.opt_vowel": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.other": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_BADCOLS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.parses.Parse.branch": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.bound": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}}, "df": 6}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}}, "df": 6, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.espeak_version_line": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.variant": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "annotation": {"root": {"docs": {"prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.form": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.slots": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 177, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}, "prosodic.texts.texts.Text.sep": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordForm.child_type": {"tf": 1}, "prosodic.words.words.WordForm.token_stress": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}}, "df": 35}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.positions.ParsePosition.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}}, "df": 3}}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1}}, "df": 26}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}}, "df": 3, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}}, "df": 14}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}}, "df": 4}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}}, "df": 13}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.words.words.WordType.form": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1}}, "df": 5}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.words.words.WordType.num_sylls": {"tf": 1}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1}}, "df": 5}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.words.WordType.is_punc": {"tf": 1}}, "df": 9}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.line": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.lines": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.positions.ParsePosition.slots": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.words.words.WordType.forms": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.constraints": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordFormList.slots": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.words.WordType.num_forms": {"tf": 1}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1}}, "df": 30}}}, "x": {"2": {"7": {"docs": {"prosodic.parsing.parselists.ParseList.meter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.slots": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1.4142135623730951}}, "df": 8}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parselists.ParseList.meter": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.violset": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}}, "df": 13}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 7}}}, "e": {"docs": {"prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}}, "df": 5, "s": {"docs": {"prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 5}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}}, "df": 4}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.positions.ParsePosition.parse": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.words.WordType.wtoken": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.forms": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.form": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.wtoken": {"tf": 1.4142135623730951}}, "df": 9}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.words.WordType.wtoken": {"tf": 1}, "prosodic.words.words.WordForm.wtoken": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.words.words.WordType.forms": {"tf": 1}, "prosodic.words.words.WordType.form": {"tf": 1}}, "df": 2}}}}}}}}}}, "default_value": {"root": {"0": {"4": {"docs": {"prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 8}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.916079783099616}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1}, "prosodic.texts.texts.NUMBUILT": {"tf": 1}}, "df": 15, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "1": {"0": {"0": {"0": {"docs": {"prosodic.web.app.linelim": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.583005244258363}}, "df": 3}, "1": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.344080432788601}}, "df": 2}, "2": {"8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.848857801796104}}, "df": 2}, "3": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.575836902790225}}, "df": 2, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"3": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}, "4": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.2828568570857}}, "df": 4}, "5": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.832159566199232}}, "df": 4}, "6": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.9498743710662}}, "df": 2}, "7": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.63014581273465}}, "df": 2}, "8": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.14889156509222}}, "df": 2}, "9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "9": {"1": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "5": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.529964086141668}}, "df": 2}, "docs": {"prosodic.imports.RHYME_MAX_DIST": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 13.638181696985855}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 31.192947920964443}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1}}, "df": 15, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "\\": {"docs": {}, "df": 0, "\\": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "\\": {"docs": {}, "df": 0, "\\": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "g": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "u": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "2": {"0": {"0": {"0": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "1": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"5": {"docs": {"prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"2": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.958260743101398}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1}}, "df": 3}, "1": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.661903789690601}}, "df": 2}, "2": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.44030650891055}}, "df": 2}, "3": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.12435565298214}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1}}, "df": 3}, "4": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.40175425099138}}, "df": 2}, "5": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.9498743710662}}, "df": 2}, "6": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.04987562112089}}, "df": 2}, "7": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.14889156509222}}, "df": 2}, "8": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.84523257866513}}, "df": 2}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}, "docs": {"prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1}, "prosodic.imports.METER_MAX_S": {"tf": 1}, "prosodic.imports.METER_MAX_W": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 23.108440016582687}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1}}, "df": 21, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "3": {"0": {"docs": {"prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.74734012447073}}, "df": 4}, "1": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.246950765959598}}, "df": 2}, "2": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.090536506409418}}, "df": 2}, "3": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.04987562112089}}, "df": 2}, "4": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.04987562112089}}, "df": 2}, "5": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.489125293076057}}, "df": 2}, "6": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.9498743710662}}, "df": 2}, "7": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.071247279470288}}, "df": 2}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}, "9": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.84523257866513}}, "df": 3}, "docs": {"prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 16.34013463836819}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1}}, "df": 6, ":": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "4": {"0": {"0": {"docs": {}, "df": 0, "/": {"8": {"0": {"0": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.409673645990857}}, "df": 2}, "1": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.746794344808963}}, "df": 2}, "2": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.61895003862225}}, "df": 2}, "3": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.04987562112089}}, "df": 2}, "4": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.848857801796104}}, "df": 2}, "5": {"docs": {"prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.746794344808963}}, "df": 2}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.898979485566356}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 15.362291495737216}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.242640687119285}}, "df": 1}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.242640687119285}}, "df": 1}, "docs": {"prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.866068747318506}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 2.23606797749979}}, "df": 5}, "5": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.242640687119285}}, "df": 1, "u": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.242640687119285}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.123105625617661}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.Counter.c": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6}}, "df": 2}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {"prosodic.imports.LOG_LEVEL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 13.076696830622021}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "6": {"4": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.045361017187261}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1.4142135623730951}}, "df": 3, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "7": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.083045973594572}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1.4142135623730951}}, "df": 3}, "8": {"docs": {"prosodic.lib.lexconvert.mainVowels": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.922847983320086}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "9": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.lib.lexconvert.consonants": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.488088481701515}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1.7320508075688772}}, "df": 4, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "docs": {"prosodic.cli.cli": {"tf": 1.4142135623730951}, "prosodic.cli.web": {"tf": 1.4142135623730951}, "prosodic.cli.ipython": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.child_type": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1}, "prosodic.ents.Entity.sep": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HERE": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_PROSODIC": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_PHONS": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_WEB": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_DICTS": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HOME": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_MTREE": {"tf": 1.4142135623730951}, "prosodic.imports.DASHES": {"tf": 2}, "prosodic.imports.TOKENIZER": {"tf": 1.4142135623730951}, "prosodic.imports.SEPS_PHRASE": {"tf": 3.605551275463989}, "prosodic.imports.SEP_STANZA": {"tf": 1.4142135623730951}, "prosodic.imports.SEP_PARA": {"tf": 1.4142135623730951}, "prosodic.imports.SEP_LINE": {"tf": 1.4142135623730951}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_LANG": {"tf": 1.4142135623730951}, "prosodic.imports.LOG_FORMAT": {"tf": 2.449489742783178}, "prosodic.imports.DEFAULT_METER": {"tf": 1.4142135623730951}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1}, "prosodic.imports.ESPEAK_PATHS": {"tf": 1.4142135623730951}, "prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 4}, "prosodic.imports.DF_BADCOLS": {"tf": 1.4142135623730951}, "prosodic.imports.LANGS": {"tf": 2}, "prosodic.imports.HTML_CSS": {"tf": 3.605551275463989}, "prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_LINE": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_WORD": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 29.68164415931166}, "prosodic.imports.INITCLASSES": {"tf": 3.872983346207417}, "prosodic.imports.CHILDCLASSES": {"tf": 3.7416573867739413}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 3}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 13.820274961085254}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 8.06225774829855}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 2}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 2}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 2}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 7.810249675906654}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2.8284271247461903}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.warnedAlready": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 72.38093671679029}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 3}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 3.7416573867739413}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 3.1622776601683795}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 3.1622776601683795}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.line_sep": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.sep": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.sep": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1.4142135623730951}, "prosodic.web.app.app": {"tf": 1.4142135623730951}, "prosodic.web.app.socketio": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.SYLL_SEP": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.list_type": {"tf": 1.4142135623730951}}, "df": 136, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.099504938362077}}, "df": 6, "t": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.imports.LOG_FORMAT": {"tf": 3.1622776601683795}, "prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 19.621416870348583}, "prosodic.imports.INITCLASSES": {"tf": 3.605551275463989}, "prosodic.imports.CHILDCLASSES": {"tf": 3.3166247903554}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.090536506409418}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 2.6457513110645907}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 2.23606797749979}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 2.23606797749979}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 2.23606797749979}, "prosodic.web.app.app": {"tf": 1}, "prosodic.web.app.socketio": {"tf": 1}}, "df": 18}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, ":": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "docs": {}, "df": 0}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 9.539392014169456}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 2.23606797749979}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 4.69041575982343}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.lines.Line.prefix": {"tf": 1}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1}}, "df": 13, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 2}, "prosodic.imports.GLOBALS": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}, "prosodic.words.words.WordType.list_type": {"tf": 1}}, "df": 4}, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, ":": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.3166247903554}}, "df": 1}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "b": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 3}}, "df": 2}}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 2}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.486832980505138}}, "df": 5, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 3, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.imports.LOG_FORMAT": {"tf": 3.1622776601683795}, "prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 19.672315572906}, "prosodic.imports.INITCLASSES": {"tf": 3.605551275463989}, "prosodic.imports.CHILDCLASSES": {"tf": 3.3166247903554}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.224972160321824}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 2.6457513110645907}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 2.23606797749979}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 2.23606797749979}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 2.23606797749979}, "prosodic.web.app.app": {"tf": 1}, "prosodic.web.app.socketio": {"tf": 1}}, "df": 19}, "n": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 5.0990195135927845}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"6": {"4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 4, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.cli.cli": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 13.2664991614216}, "prosodic.imports.INITCLASSES": {"tf": 3.4641016151377544}, "prosodic.imports.CHILDCLASSES": {"tf": 3.3166247903554}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.123105625617661}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, ":": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "f": {"4": {"3": {"8": {"3": {"8": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 2.449489742783178}, "prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 4}}, "df": 2, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.1622776601683795}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.14142842854285}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.196152422706632}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"1": {"0": {"0": {"2": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "v": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}}}}}, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "w": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 2}, "prosodic.imports.GLOBALS": {"tf": 5.291502622129181}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.295630140987}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 2}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.7320508075688772}}, "df": 11, "e": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.web.app.app": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"6": {"0": {"0": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}}, "df": 2}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "o": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.DF_BADCOLS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}, "prosodic.words.words.WordType.prefix": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.7320508075688772}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.7416573867739413}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.lines.Line.child_type": {"tf": 1}, "prosodic.words.words.WordToken.prefix": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.lines.Line.list_type": {"tf": 1}}, "df": 3}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.8284271247461903}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.words.words.WordToken.child_type": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.words.words.WordToken.list_type": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_BADCOLS": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.words.words.WordType.child_type": {"tf": 1}, "prosodic.words.words.WordForm.prefix": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 7.483314773547883}, "prosodic.imports.INITCLASSES": {"tf": 3}, "prosodic.imports.CHILDCLASSES": {"tf": 3.1622776601683795}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 2}}, "df": 6}}, "k": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.sonnet": {"tf": 2}, "prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 8}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}}}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2.8284271247461903}}, "df": 2}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, ":": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "[": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "u": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "y": {"docs": {}, "df": 0, "o": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "i": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 5.196152422706632}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 3.872983346207417}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 4}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.696938456699069}}, "df": 9, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}, "a": {"2": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 4.58257569495584}}, "df": 3}}, "n": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 7.615773105863909}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.649110640673518}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}}, "df": 4, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.1622776601683795}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.358898943540674}}, "df": 1, ":": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 1, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}}, "df": 1, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 4, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 7, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "o": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.385164807134504}}, "df": 6, "u": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 7, "o": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "u": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "y": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "u": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "\u00e4": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "\u00f6": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "f": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.477225575051661}}, "df": 1, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "@": {"3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 1, "a": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 1}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, ":": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "x": {"0": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "5": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "x": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "2": {"7": {"docs": {"prosodic.ents.Entity.child_type": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.sep": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HERE": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_PROSODIC": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_PHONS": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_WEB": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_DICTS": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HOME": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1.4142135623730951}, "prosodic.imports.PATH_MTREE": {"tf": 1.4142135623730951}, "prosodic.imports.DASHES": {"tf": 2.449489742783178}, "prosodic.imports.TOKENIZER": {"tf": 1.4142135623730951}, "prosodic.imports.SEPS_PHRASE": {"tf": 5.830951894845301}, "prosodic.imports.SEP_STANZA": {"tf": 1.4142135623730951}, "prosodic.imports.SEP_PARA": {"tf": 1.4142135623730951}, "prosodic.imports.SEP_LINE": {"tf": 1.4142135623730951}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 2}, "prosodic.imports.DEFAULT_LANG": {"tf": 1.4142135623730951}, "prosodic.imports.LOG_FORMAT": {"tf": 1.4142135623730951}, "prosodic.imports.DEFAULT_METER": {"tf": 1.4142135623730951}, "prosodic.imports.ESPEAK_PATHS": {"tf": 3.1622776601683795}, "prosodic.imports.DF_INDEX": {"tf": 7.211102550927978}, "prosodic.imports.DF_COLS_RENAME": {"tf": 7.483314773547883}, "prosodic.imports.DF_BADCOLS": {"tf": 2.449489742783178}, "prosodic.imports.LANGS": {"tf": 2}, "prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_LINE": {"tf": 2.8284271247461903}, "prosodic.imports.GROUPBY_WORD": {"tf": 3.4641016151377544}, "prosodic.imports.GROUPBY_SYLL": {"tf": 3.7416573867739413}, "prosodic.imports.GLOBALS": {"tf": 48.641546028061235}, "prosodic.imports.INITCLASSES": {"tf": 7.0710678118654755}, "prosodic.imports.CHILDCLASSES": {"tf": 6.782329983125268}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 5.477225575051661}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 2.23606797749979}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 16}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 14.142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 2.8284271247461903}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 4.242640687119285}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 6.928203230275509}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 2.449489742783178}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 5.477225575051661}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 4}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 6}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 6.244997998398398}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 2.8284271247461903}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 2.8284271247461903}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 2.449489742783178}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 2.449489742783178}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 10.954451150103322}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 10.954451150103322}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 2}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 4}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1.4142135623730951}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 118.0762465528101}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 3.7416573867739413}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 3.7416573867739413}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 6.557438524302}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.line_sep": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.sep": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.sep": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.child_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.prefix": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.list_type": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 3.1622776601683795}, "prosodic.web.app.app": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 7.211102550927978}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.SYLL_SEP": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.list_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.prefix": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.child_type": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.list_type": {"tf": 1.4142135623730951}}, "df": 123}, "docs": {}, "df": 0}, "8": {"0": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.324555320336759}}, "df": 5, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "]": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "c": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0}}}, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "b": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "5": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "docs": {}, "df": 0}}}, "9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "b": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "a": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "docs": {}, "df": 0}}}}}}}, "docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "b": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "b": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "c": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}, "docs": {}, "df": 0, "a": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "b": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}}, "b": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "a": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "b": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "9": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "e": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "b": {"8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}}, "e": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "b": {"4": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}}, "3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"0": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "8": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "f": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "7": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "8": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "b": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "a": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"7": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "6": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "6": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "f": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "9": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"1": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "3": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.832159566199232}}, "df": 6, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "y": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "t": {"docs": {"prosodic.ents.Entity.child_type": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1.7320508075688772}, "prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 4.358898943540674}, "prosodic.texts.texts.Text.prefix": {"tf": 1}}, "df": 8, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 4.358898943540674}, "prosodic.imports.INITCLASSES": {"tf": 2}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "]": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"2": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.REPLACE_DASHES": {"tf": 1}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.928203230275509}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1}}, "df": 7, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.lib.lexconvert.lexFormats": {"tf": 7.615773105863909}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}}, "df": 4, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}}, "df": 3, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "p": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 2, ":": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "t": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 2.8284271247461903}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.DF_BADCOLS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 4.358898943540674}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 2}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 10}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 2.449489742783178}, "prosodic.imports.GLOBALS": {"tf": 4.358898943540674}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 7.874007874011811}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.54983443527075}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 3}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "k": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.lexFormats": {"tf": 4.58257569495584}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "n": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.242640687119285}}, "df": 1, "v": {"docs": {"prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}}, "df": 2}}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}, "]": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "s": {"5": {"2": {"2": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 1}}, "f": {"4": {"3": {"8": {"3": {"8": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.486832980505138}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.is_parseable": {"tf": 1}, "prosodic.ents.Entity.use_cache": {"tf": 1}, "prosodic.imports.USE_CACHE": {"tf": 1}, "prosodic.imports.USE_REDIS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.langs.langs.Language.use_cache": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1}, "prosodic.texts.lines.Line.use_cache": {"tf": 1}}, "df": 13, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "u": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.1622776601683795}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 12.206555615733702}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 2.6457513110645907}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 2.23606797749979}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 2.23606797749979}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 2.23606797749979}}, "df": 10, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 3}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}}}, "i": {"docs": {"prosodic.imports.LANGS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.69041575982343}}, "df": 1}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.3166247903554}}, "df": 1}}}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1.7320508075688772}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.082762530298219}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}}, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 6.244997998398398}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.web.app.app": {"tf": 1}, "prosodic.web.app.socketio": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "r": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "n": {"docs": {"prosodic.imports.SEP_LINE": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 3.1622776601683795}, "prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 4}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.36931687685298}, "prosodic.texts.lines.Line.line_sep": {"tf": 1}, "prosodic.texts.lines.Line.sep": {"tf": 1}}, "df": 10, "o": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 2}}, "df": 3, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "e": {"docs": {"prosodic.ents.Entity.index_name": {"tf": 1}, "prosodic.ents.Entity.list_type": {"tf": 1}, "prosodic.imports.HASHSTR_LEN": {"tf": 1}, "prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1}, "prosodic.langs.langs.Language.lang": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1}, "prosodic.texts.texts.Text.use_cache": {"tf": 1}}, "df": 15}}, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.SEP_STANZA": {"tf": 1}, "prosodic.imports.SEP_PARA": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2}}, "df": 4, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 3}, "prosodic.imports.DF_COLS_RENAME": {"tf": 3}, "prosodic.imports.DF_BADCOLS": {"tf": 1}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 2}, "prosodic.imports.GROUPBY_WORD": {"tf": 2.449489742783178}, "prosodic.imports.GROUPBY_SYLL": {"tf": 2.6457513110645907}, "prosodic.imports.GLOBALS": {"tf": 6.48074069840786}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 1}, "docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6}}, "df": 1}, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.872983346207417}}, "df": 1}, "*": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "e": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 3.605551275463989}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 2.6457513110645907}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 2}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 4}, "prosodic.lib.lexconvert.lexFormats": {"tf": 15.264337522473747}}, "df": 7, "n": {"docs": {"prosodic.imports.DEFAULT_LANG": {"tf": 1}, "prosodic.imports.LANGS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 6, "t": {"docs": {"prosodic.ents.Entity.prefix": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.898979485566356}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "g": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 4}}, "df": 4, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "v": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 2}}}, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.830951894845301}}, "df": 6, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 3}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6.708203932499369}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.1622776601683795}}, "df": 4, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "u": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}, "i": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.916079783099616}}, "df": 6}, "u": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "]": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "docs": {}, "df": 0}}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "]": {"0": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "\u00e4": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "\u00f6": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.744562646538029}}, "df": 1, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "@": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "\\": {"docs": {}, "df": 0, "\\": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"9": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "u": {"3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2.8284271247461903}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.071247279470288}}, "df": 9, "s": {"docs": {"prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 2, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 2, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.PATH_HERE": {"tf": 1}, "prosodic.imports.PATH_PROSODIC": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 3, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.PATH_LANGS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.PATH_PHONS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.PATH_WEB": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.imports.PATH_REPO_DATA": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.PATH_DICTS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_MTREE": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"3": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "{": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}, "x": {"8": {"6": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 3.7416573867739413}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 2}, "prosodic.imports.GLOBALS": {"tf": 4.69041575982343}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 2}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.4142135623730951}}, "df": 8}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}, "u": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.3166247903554}}, "df": 4}, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2.23606797749979}}, "df": 5, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.7320508075688772}}, "df": 5, "u": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6.244997998398398}}, "df": 1}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.385164807134504}}, "df": 1}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.1622776601683795}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 1}, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.3166247903554}}, "df": 1}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.695359714832659}}, "df": 6, "w": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.PATH_REPO": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 2.449489742783178}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.7320508075688772}, "prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 4.795831523312719}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.HTML_CSS": {"tf": 2.23606797749979}, "prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1}}, "df": 6, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.imports.INITCLASSES": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1.7320508075688772}}, "df": 6, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 4.47213595499958}, "prosodic.imports.INITCLASSES": {"tf": 2}, "prosodic.imports.CHILDCLASSES": {"tf": 1.7320508075688772}}, "df": 3}}}}, "a": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.196152422706632}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1}}, "df": 6, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 4}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSES": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "]": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 8.888194417315589}, "prosodic.imports.INITCLASSES": {"tf": 3.4641016151377544}, "prosodic.imports.CHILDCLASSES": {"tf": 3.3166247903554}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 2.6457513110645907}, "prosodic.web.app.app": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 6.164414002968976}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 2, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"1": {"1": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"3": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 2.449489742783178}}, "df": 2, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.8284271247461903}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}}, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "]": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 8}}, "df": 5, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.PATH_PHONS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3}}, "df": 2}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.477225575051661}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "v": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "d": {"6": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.874342087037917}}, "df": 5, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {"prosodic.imports.PATH_HOME": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2}}, "df": 2, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.imports.PATH_HOME_DATA": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DEFAULT_METER": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.4641016151377544}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1.7320508075688772}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1.7320508075688772}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "\u2019": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.sonnet": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.744562646538029}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"1": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}}, "df": 1, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.0990195135927845}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6.708203932499369}}, "df": 1}, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.58257569495584}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "[": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "]": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"prosodic.imports.TOKENIZER": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 5.196152422706632}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 13.076696830622021}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 2}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 4}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1}, "prosodic.texts.texts.Text.child_type": {"tf": 1}}, "df": 12, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}}, "df": 4}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.texts.texts.Text.list_type": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"2": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "docs": {"prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 4.358898943540674}, "prosodic.lib.lexconvert.lexFormats": {"tf": 4.58257569495584}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 2}, "prosodic.imports.GLOBALS": {"tf": 2}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GROUPBY_LINE": {"tf": 1}, "prosodic.imports.GROUPBY_WORD": {"tf": 1}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 6}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}}, "df": 1}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.warnedAlready": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 16.401219466856727}}, "df": 1}}}}}}, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 2}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.14142842854285}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "g": {"docs": {"prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "l": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.7320508075688772}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.8284271247461903}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3}, "prosodic.imports.INITCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSES": {"tf": 1.4142135623730951}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.child_type": {"tf": 1}}, "df": 7, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 2}}, "df": 5}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1}, "prosodic.words.words.WordForm.list_type": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}}, "df": 2}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.8284271247461903}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 5, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.1622776601683795}}, "df": 1, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.0990195135927845}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.211102550927978}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 3}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.web.app.socketio": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.imports.INITCLASSES": {"tf": 1}, "prosodic.imports.CHILDCLASSES": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}, "t": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "%": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}, "x": {"0": {"5": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "]": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5}}, "df": 5, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.SEPS_PHRASE": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.6457513110645907}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 12.36931687685298}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 6}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "v": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}, "q": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.486832980505138}}, "df": 5, "m": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 3.605551275463989}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.7320508075688772}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1.4142135623730951}, "prosodic.imports.DF_COLS_RENAME": {"tf": 2.449489742783178}, "prosodic.imports.GLOBALS": {"tf": 2.8284271247461903}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 3.605551275463989}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 6.4031242374328485}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.1104335791443}}, "df": 6, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, ":": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.LOG_FORMAT": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"2": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}}, "x": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.358898943540674}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 2}}, "t": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "o": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "[": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "]": {"0": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}}}}}, "o": {"3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 2.6457513110645907}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 2}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.66287829861518}}, "df": 7, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 1, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.ESPEAK_PATHS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.LANGS": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 4.123105625617661}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1}, "prosodic.web.app.socketio": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1.4142135623730951}, "prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 5, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"5": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "docs": {}, "df": 0}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 2}}, "df": 3, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "]": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1}}, "df": 1}}}}}, "\u2019": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.196152422706632}}, "df": 2, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.5677643628300215}}, "df": 4, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 3.872983346207417}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.244997998398398}}, "df": 6, "o": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "u": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "u": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5}}, "df": 7, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "o": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.5677643628300215}}, "df": 1}, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.211102550927978}}, "df": 1}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "docs": {}, "df": 0}}}, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11.357816691600547}}, "df": 5, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "k": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3.4641016151377544}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4}}, "df": 1}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}, "o": {"2": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "b": {"6": {"4": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "docs": {}, "df": 0}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 45.45327270945405}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "u": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 3}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 7}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}}, "df": 1}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}}}}, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "v": {"4": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 10.488088481701515}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.DF_INDEX": {"tf": 1}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}}, "df": 3, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "r": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.937253933193772}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.58257569495584}}, "df": 1}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3}}, "df": 1}, "4": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.imports.sonnet": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}}, "df": 1}}}, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}}}}, "a": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "3": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "4": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.lexFormats": {"tf": 14.106735979665885}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.DF_COLS_RENAME": {"tf": 1.4142135623730951}, "prosodic.imports.GLOBALS": {"tf": 3.3166247903554}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"prosodic.imports.sonnet": {"tf": 1.7320508075688772}, "prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.lexFormats": {"tf": 2.6457513110645907}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 1}}}}}, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "\\": {"docs": {}, "df": 0, "\\": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.449489742783178}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.4142135623730951}}, "df": 2}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 11.958260743101398}}, "df": 1, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.69041575982343}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.605551275463989}}, "df": 1}}}}}}, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.744562646538029}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6.557438524302}}, "df": 1, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "a": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.6332495807108}}, "df": 4}, "i": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.324555320336759}}, "df": 6, "o": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "u": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.872983346207417}}, "df": 1}}, "u": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 5.196152422706632}}, "df": 7, "o": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.3484692283495345}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}, "{": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 5.830951894845301}}, "df": 1, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.8284271247461903}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 7.483314773547883}}, "df": 1, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 4.242640687119285}}, "df": 1}, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6}}, "df": 1}, "p": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "p": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}, "prosodic.web.app.app": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 3.7416573867739413}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.449489742783178}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}}}}, "docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"9": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "a": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "x": {"8": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}}, "docs": {}, "df": 0}}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"prosodic.imports.HTML_CSS": {"tf": 1}, "prosodic.imports.GLOBALS": {"tf": 4.69041575982343}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 3.4641016151377544}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 3}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 2.449489742783178}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 6.928203230275509}}, "df": 11, "y": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 4}, "i": {"3": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}}}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {"prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 7, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}, "\\": {"docs": {}, "df": 0, "\\": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "\u00f6": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "e": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 2, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "\u00e4": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1}}, "df": 1}}, "o": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "u": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1, "r": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "\\": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "\\": {"docs": {}, "df": 0, "\\": {"1": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1, "y": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}, "z": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 11}}, "df": 5, "i": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 6.48074069840786}}, "df": 1, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "u": {"docs": {}, "df": 0, "n": {"5": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "[": {"1": {"2": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"prosodic.imports.GLOBALS": {"tf": 2.23606797749979}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 2}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1}, "prosodic.lib.lexconvert.lexFormats": {"tf": 9.9498743710662}}, "df": 5, "e": {"0": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.imports.GLOBALS": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1}}, "df": 1}}}}}}}, "a": {"2": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 2.23606797749979}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "v": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}, "r": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}, "l": {"docs": {"prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1}}, "df": 1}, "@": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "x": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {"prosodic.lib.lexconvert.lexFormats": {"tf": 1}}, "df": 1}}}}, "signature": {"root": {"0": {"6": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}, "docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}}, "df": 6}, "1": {"0": {"0": {"0": {"0": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 6, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1, "m": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "2": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}}, "df": 4}, "3": {"9": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1.4142135623730951}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1.4142135623730951}, "prosodic.langs.langs.get_espeak_env": {"tf": 3.7416573867739413}, "prosodic.langs.langs.set_espeak_env": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.ifset": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 2}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 2.449489742783178}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 3.1622776601683795}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 2.449489742783178}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 6.164414002968976}, "prosodic.texts.lines.Line.__init__": {"tf": 2}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 2}, "prosodic.texts.texts.Text.__init__": {"tf": 2.449489742783178}, "prosodic.utils.SimpleCache.__init__": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 2}}, "df": 28}, "docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 2}, "4": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 2}, "5": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}, "6": {"4": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}, "docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "9": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"prosodic.ents.Entity.__init__": {"tf": 6.557438524302}, "prosodic.ents.Entity.to_hash": {"tf": 3.1622776601683795}, "prosodic.ents.Entity.to_json": {"tf": 6.324555320336759}, "prosodic.ents.Entity.save": {"tf": 4.47213595499958}, "prosodic.ents.Entity.render": {"tf": 4.242640687119285}, "prosodic.ents.Entity.from_json": {"tf": 3.1622776601683795}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 3.1622776601683795}, "prosodic.ents.Entity.inspect": {"tf": 5.830951894845301}, "prosodic.ents.Entity.get_ld": {"tf": 5.830951894845301}, "prosodic.ents.Entity.get_df": {"tf": 4}, "prosodic.ents.Entity.get_parent": {"tf": 4.242640687119285}, "prosodic.ents.Entity.children_from_cache": {"tf": 3.1622776601683795}, "prosodic.ents.Entity.get_key": {"tf": 3.7416573867739413}, "prosodic.ents.Entity.from_cache": {"tf": 5.830951894845301}, "prosodic.ents.Entity.get_cache": {"tf": 3.1622776601683795}, "prosodic.ents.Entity.cache": {"tf": 6.48074069840786}, "prosodic.ents.EntityList.__init__": {"tf": 5.196152422706632}, "prosodic.imports.profile": {"tf": 3.1622776601683795}, "prosodic.langs.english.english.English": {"tf": 2.6457513110645907}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish.Finnish": {"tf": 2.6457513110645907}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 4.242640687119285}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 2.6457513110645907}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 2.8284271247461903}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 4.242640687119285}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 4.242640687119285}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 3.7416573867739413}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 3.1622776601683795}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 3.1622776601683795}, "prosodic.langs.langs.Language.get": {"tf": 3.7416573867739413}, "prosodic.langs.langs.Language.phoneticize": {"tf": 3.7416573867739413}, "prosodic.langs.langs.Language.phonemize": {"tf": 3.7416573867739413}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 3.7416573867739413}, "prosodic.langs.langs.Language.syllabify": {"tf": 4.69041575982343}, "prosodic.langs.langs.fix_recasing": {"tf": 3.7416573867739413}, "prosodic.langs.langs.fix_num_sylls": {"tf": 5}, "prosodic.langs.langs.unstress": {"tf": 3.1622776601683795}, "prosodic.langs.langs.stress": {"tf": 4.242640687119285}, "prosodic.langs.langs.ensure_maybe_stressed": {"tf": 3.1622776601683795}, "prosodic.langs.langs.ensure_unstressed": {"tf": 3.1622776601683795}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 3.1622776601683795}, "prosodic.langs.langs.get_espeak_env": {"tf": 8.426149773176359}, "prosodic.langs.langs.set_espeak_env": {"tf": 7}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 4.47213595499958}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 5.916079783099616}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 2.8284271247461903}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 6.855654600401044}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 3.7416573867739413}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 3.1622776601683795}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 3.7416573867739413}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.Phonemes": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.other": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.consonant": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.vowel": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.variant": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.ifset": {"tf": 4.898979485566356}, "prosodic.lib.lexconvert.speakjet": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.makeDic": {"tf": 4.69041575982343}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 4.69041575982343}, "prosodic.lib.lexconvert.getSetting": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.checkSetting": {"tf": 4.898979485566356}, "prosodic.lib.lexconvert.getBuf": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.convert": {"tf": 4.242640687119285}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 4.58257569495584}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.replHome": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.as_utf8": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.as_unicode": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.as_printable": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 4.242640687119285}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.sylcount": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.hyphenate": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.getInputText": {"tf": 4.69041575982343}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.output_clauses": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.main": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.catchSignals": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 4.898979485566356}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 4.358898943540674}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 4.242640687119285}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 5.0990195135927845}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.stdout_width_unix": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.chr": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.sorted": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 4.898979485566356}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 3.7416573867739413}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 3.7416573867739413}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 3.7416573867739413}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 3.7416573867739413}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 3.7416573867739413}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 8.54400374531753}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.deptree.setup_module": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 4}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 7.416198487095663}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 6.6332495807108}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 5.0990195135927845}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 3.7416573867739413}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 3.1622776601683795}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 4.242640687119285}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 3.4641016151377544}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 4.69041575982343}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 5.477225575051661}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 2.6457513110645907}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 3.1622776601683795}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 3.1622776601683795}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 3.1622776601683795}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 3.1622776601683795}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 8.426149773176359}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 9.591663046625438}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 3.7416573867739413}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 3.7416573867739413}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 3.7416573867739413}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 3.7416573867739413}, "prosodic.parsing.constraints.w_stress": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.s_unstress": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.unres_within": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.foot_size": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.unres_across": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.w_peak": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.s_trough": {"tf": 3.1622776601683795}, "prosodic.parsing.constraints.get_constraints": {"tf": 3.1622776601683795}, "prosodic.parsing.meter.Meter.__init__": {"tf": 13.416407864998739}, "prosodic.parsing.meter.Meter.to_json": {"tf": 4.69041575982343}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 6}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 7.3484692283495345}, "prosodic.parsing.meter.Meter.parse": {"tf": 8.888194417315589}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 10.770329614269007}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 8.48528137423857}, "prosodic.parsing.meter.Meter.get_key": {"tf": 5.656854249492381}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 8.888194417315589}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 7.810249675906654}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 8.12403840463596}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 8}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 12}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 7.615773105863909}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 9.273618495495704}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 6.4031242374328485}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 6.164414002968976}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 9.433981132056603}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 9.797958971132712}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 6.6332495807108}, "prosodic.parsing.parselists.ParseList.render": {"tf": 7.745966692414834}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 7.745966692414834}, "prosodic.parsing.parses.Parse.__init__": {"tf": 15.84297951775486}, "prosodic.parsing.parses.Parse.init": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.to_json": {"tf": 6.4031242374328485}, "prosodic.parsing.parses.Parse.from_json": {"tf": 10.488088481701515}, "prosodic.parsing.parses.Parse.extend": {"tf": 6.082762530298219}, "prosodic.parsing.parses.Parse.branch": {"tf": 5.385164807134504}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 6.782329983125268}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 6.782329983125268}, "prosodic.parsing.parses.Parse.bounds": {"tf": 5.656854249492381}, "prosodic.parsing.parses.Parse.to_html": {"tf": 11.661903789690601}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 6.4031242374328485}, "prosodic.parsing.parses.Parse.get_df": {"tf": 6}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 7.937253933193772}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 10.488088481701515}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 4.69041575982343}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 4.58257569495584}, "prosodic.parsing.utils.split_scansion": {"tf": 4.58257569495584}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 8.06225774829855}, "prosodic.parsing.utils.getlenparse": {"tf": 4.58257569495584}, "prosodic.parsing.utils.iter_mpos": {"tf": 10.099504938362077}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 4.69041575982343}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 5.5677643628300215}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 4.58257569495584}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 5.291502622129181}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 16.583123951777}, "prosodic.texts.lines.Line.__init__": {"tf": 10.862780491200215}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 5.5677643628300215}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 5}, "prosodic.texts.lines.Line.to_json": {"tf": 4.69041575982343}, "prosodic.texts.lines.Line.to_html": {"tf": 12.083045973594572}, "prosodic.texts.lines.Line.stats": {"tf": 6.782329983125268}, "prosodic.texts.lines.Line.stats_d": {"tf": 6.6332495807108}, "prosodic.texts.lines.Line.rime_distance": {"tf": 5.656854249492381}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 4.242640687119285}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 10.862780491200215}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 4.69041575982343}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 6}, "prosodic.texts.texts.Text.__init__": {"tf": 13.527749258468683}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 4.123105625617661}, "prosodic.texts.texts.Text.to_hash": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.to_json": {"tf": 4.69041575982343}, "prosodic.texts.texts.Text.get_meter": {"tf": 6.082762530298219}, "prosodic.texts.texts.Text.set_meter": {"tf": 4.242640687119285}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 7.416198487095663}, "prosodic.texts.texts.Text.parse": {"tf": 4.242640687119285}, "prosodic.texts.texts.Text.render": {"tf": 7.0710678118654755}, "prosodic.texts.texts.Text.reset_meter": {"tf": 4.242640687119285}, "prosodic.texts.texts.Text.parse_iter": {"tf": 10}, "prosodic.texts.texts.Text.parse_stats": {"tf": 6.164414002968976}, "prosodic.texts.texts.Text.to_html": {"tf": 6.324555320336759}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 6}, "prosodic.utils.SimpleCache.__init__": {"tf": 4.47213595499958}, "prosodic.utils.SimpleCache.get": {"tf": 5.830951894845301}, "prosodic.utils.retry_on_io_error": {"tf": 6}, "prosodic.utils.group_ents": {"tf": 6.082762530298219}, "prosodic.utils.groupby": {"tf": 8.18535277187245}, "prosodic.utils.get_txt": {"tf": 5.830951894845301}, "prosodic.utils.clean_text": {"tf": 4}, "prosodic.utils.get_attr_str": {"tf": 8.18535277187245}, "prosodic.utils.safesum": {"tf": 6.244997998398398}, "prosodic.utils.setindex": {"tf": 7.874007874011811}, "prosodic.utils.get_stress": {"tf": 4}, "prosodic.utils.get_initial_whitespace": {"tf": 4}, "prosodic.utils.unique": {"tf": 5.0990195135927845}, "prosodic.utils.hashstr": {"tf": 5.656854249492381}, "prosodic.utils.read_json": {"tf": 5.0990195135927845}, "prosodic.utils.from_json": {"tf": 6.6332495807108}, "prosodic.utils.load": {"tf": 5.0990195135927845}, "prosodic.utils.to_json": {"tf": 6.928203230275509}, "prosodic.utils.ensure_dir": {"tf": 4}, "prosodic.utils.encode_cache": {"tf": 4}, "prosodic.utils.decode_cache": {"tf": 4}, "prosodic.utils.to_html": {"tf": 7.937253933193772}, "prosodic.utils.enable_caching": {"tf": 3}, "prosodic.utils.caching_is_enabled": {"tf": 3}, "prosodic.utils.disable_caching": {"tf": 3}, "prosodic.utils.caching_enabled": {"tf": 3.7416573867739413}, "prosodic.utils.caching_disabled": {"tf": 3.7416573867739413}, "prosodic.utils.logging_disabled": {"tf": 3.7416573867739413}, "prosodic.utils.logging_enabled": {"tf": 3.7416573867739413}, "prosodic.utils.force_int": {"tf": 5.477225575051661}, "prosodic.utils.tokenize_agnostic": {"tf": 4.58257569495584}, "prosodic.web.app.get_text": {"tf": 3.1622776601683795}, "prosodic.web.app.parse": {"tf": 3.1622776601683795}, "prosodic.web.app.index": {"tf": 2.6457513110645907}, "prosodic.web.app.main": {"tf": 6}, "prosodic.web.app.jsonify": {"tf": 3.1622776601683795}, "prosodic.web.app.unjsonify": {"tf": 3.1622776601683795}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 4.69041575982343}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 4.69041575982343}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 4.123105625617661}, "prosodic.words.phonemes.Phoneme": {"tf": 6.164414002968976}, "prosodic.words.phonemes.get_ipa_info": {"tf": 4.358898943540674}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 4.898979485566356}, "prosodic.words.syllables.Syllable.__init__": {"tf": 9.219544457292887}, "prosodic.words.syllables.Syllable.to_json": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 5.656854249492381}, "prosodic.words.words.Word": {"tf": 6.6332495807108}, "prosodic.words.words.WordToken.__init__": {"tf": 9.899494936611665}, "prosodic.words.words.WordToken.to_json": {"tf": 3.4641016151377544}, "prosodic.words.words.WordType.__init__": {"tf": 8.602325267042627}, "prosodic.words.words.WordType.to_json": {"tf": 3.4641016151377544}, "prosodic.words.words.WordType.rime_distance": {"tf": 5.656854249492381}, "prosodic.words.words.WordForm.__init__": {"tf": 10.770329614269007}, "prosodic.words.words.WordForm.to_json": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.to_hash": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.rime_distance": {"tf": 5.656854249492381}}, "df": 390, "t": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.web.app.get_text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 20}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.langs.langs.stress": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}}, "df": 27}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2.449489742783178}, "prosodic.texts.lines.Line.to_html": {"tf": 2.449489742783178}}, "df": 3, "s": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1.7320508075688772}}, "df": 2, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1}, "prosodic.langs.langs.Language.phonemize": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.langs.langs.fix_recasing": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}}, "df": 7, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 2}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 2}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 2}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}}, "df": 14}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.sorted": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.as_utf8": {"tf": 1}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.as_printable": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 11, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 2}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.7320508075688772}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 2.449489742783178}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1.4142135623730951}, "prosodic.utils.get_txt": {"tf": 1.7320508075688772}, "prosodic.utils.clean_text": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 2}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1.4142135623730951}, "prosodic.utils.get_initial_whitespace": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1.4142135623730951}, "prosodic.utils.from_json": {"tf": 1.4142135623730951}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1.7320508075688772}, "prosodic.utils.tokenize_agnostic": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 2.449489742783178}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 73, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 11}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 5, "s": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 2}, "prosodic.texts.lines.Line.to_html": {"tf": 2}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}, "prosodic.langs.langs.Language.get": {"tf": 1}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1}, "prosodic.langs.langs.Language.phonemize": {"tf": 1}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 169}}, "p": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}}, "df": 8, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 17}}}}}, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1}}, "df": 1, "l": {"docs": {"prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 5}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.speakjet": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 13}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1.4142135623730951}, "prosodic.utils.setindex": {"tf": 1.4142135623730951}}, "df": 11}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2, ":": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "f": {"4": {"3": {"8": {"3": {"8": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "s": {"docs": {"prosodic.utils.setindex": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 12}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}}, "df": 17, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2.23606797749979}, "prosodic.texts.lines.Line.to_html": {"tf": 2.23606797749979}}, "df": 9, "s": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}}, "df": 7}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}}, "df": 15}}}}, "a": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 2}}, "df": 4, "s": {"docs": {"prosodic.langs.langs.get_espeak_error_msg": {"tf": 1}, "prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1.4142135623730951}, "prosodic.utils.setindex": {"tf": 1.4142135623730951}}, "df": 12}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.words.phonemes.Phoneme": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.langs.stress": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 2}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 2}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 30}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {"prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}}, "df": 8}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.web.app.main": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 3.1622776601683795}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 3.1622776601683795}}, "df": 4, "o": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.lexconvert.sorted": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.__init__": {"tf": 2.6457513110645907}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.enable_caching": {"tf": 1}, "prosodic.utils.disable_caching": {"tf": 1}, "prosodic.web.app.main": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 55, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.langs.langs.Language.syllabify": {"tf": 1}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.hyphenate": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.get_constraints": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}}, "df": 1}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 3}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.web.app.main": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 41}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"prosodic.utils.get_attr_str": {"tf": 1}}, "df": 1}}}}, "f": {"4": {"3": {"8": {"3": {"8": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}}, "df": 1, "n": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 10, "s": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.utils.to_html": {"tf": 1}}, "df": 62}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 8}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}}, "df": 2}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 6}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.imports.profile": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 2}, "prosodic.parsing.meter.Meter.__init__": {"tf": 2.23606797749979}}, "df": 2}}}}, "s": {"docs": {"prosodic.parsing.constraints.get_constraints": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1.4142135623730951}}, "df": 11}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.utils.group_ents": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {"prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}}, "df": 11}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 1.4142135623730951}, "prosodic.utils.group_ents": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.unique": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1.7320508075688772}, "prosodic.utils.load": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1.7320508075688772}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.7320508075688772}}, "df": 58}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 7}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.utils.get_attr_str": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1.7320508075688772}}, "df": 1}, "v": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 33, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.web.app.parse": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1.4142135623730951}}, "df": 11, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.groupby": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.web.app.main": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 2}}, "f": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}}, "df": 5}}, "i": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 16, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.utils.hashstr": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.7320508075688772}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1.4142135623730951}}, "df": 18}}, "p": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}, "prosodic.langs.langs.unstress": {"tf": 1}, "prosodic.langs.langs.stress": {"tf": 1}, "prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 8}}, "s": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 8}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1}}, "df": 1}}}}}, "x": {"3": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "p": {"docs": {"prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "w": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}}, "df": 11, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}}, "df": 15, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"1": {"docs": {"prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}}, "df": 1}, "2": {"docs": {"prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1}}, "df": 1}, "docs": {"prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 2}, ":": {"6": {"0": {"0": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {"prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1}}, "df": 3}}, "r": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}}, "df": 6}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.__init__": {"tf": 2.6457513110645907}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 2.23606797749979}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 29, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.speakjet": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 3}}}}}}, "k": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 2, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"5": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "docs": {}, "df": 0}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}}, "df": 3}, "r": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1}}, "df": 26}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2, "d": {"docs": {"prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1}, "prosodic.langs.langs.fix_recasing": {"tf": 1}, "prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1}, "prosodic.lib.lexconvert.sorted": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}}, "df": 10, "i": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 2}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 2}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1.7320508075688772}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.unique": {"tf": 1.4142135623730951}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.7320508075688772}}, "df": 40}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}}, "e": {"docs": {"prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1.4142135623730951}}, "df": 18, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}}, "df": 13}}}, "b": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, ":": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1}}, "df": 7}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "2": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}, "docs": {}, "df": 0}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.utils.hashstr": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 2}, "prosodic.parsing.meter.Meter.__init__": {"tf": 2.23606797749979}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}}, "df": 29}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}}, "df": 5}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.get_attr_str": {"tf": 1}}, "df": 1}}}, "u": {"docs": {"prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.langs.langs.fix_num_sylls": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1.4142135623730951}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 14}}, "t": {"docs": {"prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}}}}}}, "x": {"8": {"6": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {"prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 2, "r": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "f": {"8": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.langs.langs.get_espeak_env": {"tf": 1}, "prosodic.langs.langs.set_espeak_env": {"tf": 1}}, "df": 2}}, "z": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.utils.groupby": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 2}, "prosodic.parsing.meter.Meter.__init__": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 4}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.groupby": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.parses.Parse.__init__": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"prosodic.lib.lexconvert.chr": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.web.app.jsonify": {"tf": 1}, "prosodic.web.app.unjsonify": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.utils.get_initial_whitespace": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {"prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"2": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.web.app.main": {"tf": 1}}, "df": 1}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.EntityList": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 18}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.langs.english.english.EnglishLanguage": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 23}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.langs.english.english.EnglishLanguage": {"tf": 1.4142135623730951}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1.4142135623730951}}, "df": 2}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.langs.english.english.EnglishLanguage": {"tf": 1}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"prosodic.cli.web": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.utils.force_int": {"tf": 1}}, "df": 4}, "1": {"0": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}, "1": {"5": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}, "7": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"7": {"docs": {"prosodic.cli.web": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}, "6": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}, "9": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}, "docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 3}, "2": {"0": {"0": {"7": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}}, "df": 2, "/": {"3": {"docs": {"prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "3": {"0": {"1": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}}, "df": 2}, "4": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}, "6": {"5": {"0": {"2": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}, "8": {"1": {"8": {"1": {"docs": {"prosodic.cli.web": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1}, "docs": {"prosodic": {"tf": 1.7320508075688772}, "prosodic.cli": {"tf": 1.7320508075688772}, "prosodic.cli.cli": {"tf": 1.7320508075688772}, "prosodic.cli.web": {"tf": 5.916079783099616}, "prosodic.cli.ipython": {"tf": 3.7416573867739413}, "prosodic.ents": {"tf": 1.7320508075688772}, "prosodic.ents.Entity": {"tf": 7.745966692414834}, "prosodic.ents.Entity.__init__": {"tf": 5.656854249492381}, "prosodic.ents.Entity.child_type": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_parseable": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.index_name": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.prefix": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.list_type": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.cached_properties_to_clear": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.use_cache": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.sep": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.parent": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.children": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.to_hash": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.html": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.key": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.hash": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.to_json": {"tf": 6.4031242374328485}, "prosodic.ents.Entity.save": {"tf": 5.385164807134504}, "prosodic.ents.Entity.render": {"tf": 4.898979485566356}, "prosodic.ents.Entity.from_json": {"tf": 4.898979485566356}, "prosodic.ents.Entity.attrs": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.prefix_attrs": {"tf": 4.898979485566356}, "prosodic.ents.Entity.txt": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.data": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.l": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.inspect": {"tf": 5.196152422706632}, "prosodic.ents.Entity.ld": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.child_class": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.get_ld": {"tf": 6}, "prosodic.ents.Entity.get_df": {"tf": 4.795831523312719}, "prosodic.ents.Entity.df": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.get_parent": {"tf": 4.898979485566356}, "prosodic.ents.Entity.stanzas": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.line_r": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.word_r": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.lines": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordtokens": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.words": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordtypes": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordforms": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordforms_all": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.syllables": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.phonemes": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.text": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.stanza": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.line": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordtoken": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordtype": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.wordform": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.syllable": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.i": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.num": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.next": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.prev": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_text": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_stanza": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_line": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_wordtoken": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_wordtype": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_wordform": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_syll": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.is_phon": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.children_from_cache": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.get_key": {"tf": 4.795831523312719}, "prosodic.ents.Entity.from_cache": {"tf": 5.830951894845301}, "prosodic.ents.Entity.get_cache": {"tf": 3.4641016151377544}, "prosodic.ents.Entity.cache": {"tf": 5.477225575051661}, "prosodic.ents.EntityList": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.__init__": {"tf": 5.0990195135927845}, "prosodic.ents.EntityList.parent": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.children": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.txt": {"tf": 3.4641016151377544}, "prosodic.imports": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_HERE": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_REPO": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_PROSODIC": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_LANGS": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_PHONS": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_WEB": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_REPO_DATA": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_DICTS": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_HOME": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_HOME_DATA": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_HOME_DATA_CACHE": {"tf": 1.7320508075688772}, "prosodic.imports.USE_CACHE": {"tf": 1.7320508075688772}, "prosodic.imports.USE_REDIS": {"tf": 1.7320508075688772}, "prosodic.imports.HASHSTR_LEN": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_NUM_PROC": {"tf": 1.7320508075688772}, "prosodic.imports.PATH_MTREE": {"tf": 1.7320508075688772}, "prosodic.imports.DASHES": {"tf": 1.7320508075688772}, "prosodic.imports.REPLACE_DASHES": {"tf": 1.7320508075688772}, "prosodic.imports.PSTRESS_THRESH_DEFAULT": {"tf": 1.7320508075688772}, "prosodic.imports.TOKENIZER": {"tf": 1.7320508075688772}, "prosodic.imports.SEPS_PHRASE": {"tf": 1.7320508075688772}, "prosodic.imports.SEP_STANZA": {"tf": 1.7320508075688772}, "prosodic.imports.SEP_PARA": {"tf": 1.7320508075688772}, "prosodic.imports.SEP_LINE": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_PARSE_MAXSEC": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_LINE_LIM": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_PROCESSORS": {"tf": 1.7320508075688772}, "prosodic.imports.MAX_SYLL_IN_PARSE_UNIT": {"tf": 1.7320508075688772}, "prosodic.imports.MIN_SYLL_IN_PARSE_UNIT": {"tf": 1.7320508075688772}, "prosodic.imports.MIN_WORDS_IN_PHRASE": {"tf": 1.7320508075688772}, "prosodic.imports.MAX_WORDS_IN_PHRASE": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_LANG": {"tf": 1.7320508075688772}, "prosodic.imports.LOG_FORMAT": {"tf": 1.7320508075688772}, "prosodic.imports.LOG_LEVEL": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_METER": {"tf": 1.7320508075688772}, "prosodic.imports.METER_MAX_S": {"tf": 1.7320508075688772}, "prosodic.imports.METER_MAX_W": {"tf": 1.7320508075688772}, "prosodic.imports.METER_RESOLVE_OPTIONALITY": {"tf": 1.7320508075688772}, "prosodic.imports.DEFAULT_CATEGORICAL_CONSTRAINTS": {"tf": 1.7320508075688772}, "prosodic.imports.ESPEAK_PATHS": {"tf": 1.7320508075688772}, "prosodic.imports.DF_INDEX": {"tf": 1.7320508075688772}, "prosodic.imports.DF_COLS_RENAME": {"tf": 1.7320508075688772}, "prosodic.imports.DF_BADCOLS": {"tf": 1.7320508075688772}, "prosodic.imports.LANGS": {"tf": 1.7320508075688772}, "prosodic.imports.HTML_CSS": {"tf": 1.7320508075688772}, "prosodic.imports.RHYME_MAX_DIST": {"tf": 1.7320508075688772}, "prosodic.imports.sonnet": {"tf": 1.7320508075688772}, "prosodic.imports.GROUPBY_STANZA": {"tf": 1.7320508075688772}, "prosodic.imports.GROUPBY_LINE": {"tf": 1.7320508075688772}, "prosodic.imports.GROUPBY_WORD": {"tf": 1.7320508075688772}, "prosodic.imports.GROUPBY_SYLL": {"tf": 1.7320508075688772}, "prosodic.imports.GLOBALS": {"tf": 1.7320508075688772}, "prosodic.imports.INITCLASSES": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSES": {"tf": 1.7320508075688772}, "prosodic.imports.CHILDCLASSLISTS": {"tf": 1.7320508075688772}, "prosodic.imports.profile": {"tf": 1.7320508075688772}, "prosodic.langs": {"tf": 1.7320508075688772}, "prosodic.langs.english": {"tf": 1.7320508075688772}, "prosodic.langs.english.english": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.pronunciation_dictionary_filename": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.lang_espeak": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.lang": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.cache_fn": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.path_maybestressed": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.path_unstressed": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.EnglishLanguage.token2ipa": {"tf": 1.7320508075688772}, "prosodic.langs.english.english.English": {"tf": 1.7320508075688772}, "prosodic.langs.finnish": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.dirself": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.stress2stroke": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.orth2phon": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.ipa2x": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.FinnishLanguage": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.FinnishLanguage.pronunciation_dictionary_filename": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.FinnishLanguage.lang": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.FinnishLanguage.cache_fn": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.FinnishLanguage.get": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish.Finnish": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.PRESYLL": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.INITIAL": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.SUFFIX": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.COMPOUND": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.dirself": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.user_files": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.config_file": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.initial_compounds": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.suffixes": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.compound_dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.initialize_list": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.initialize_dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.initialize_dict_from_file": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.initialize_config": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.__init__": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.word": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.syllables": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.split_sylls": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.weights": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.sonorities": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.stresses": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.Annotation.join": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.split_initial_compounds": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.split_suffix": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.split_preannotated_compounds": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.ORTHOGRAPHIC_COMPOUND_MARKER": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_annotator.make_annotation": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.SYLLABLE_SEPARATOR": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.CLUSTERS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.CLUSTER_LENGTHS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.VOWELS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.DIPHTHONGS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.CONSONANTS": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.SON_HIGH": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.SON_LOW": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_vowel": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_consonant": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_cluster": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_diphthong": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_long": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Syllable": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Syllable.onset": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Syllable.nucleus": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Syllable.coda": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Weight": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Weight.CV": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Weight.CVC": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Weight.CVV": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Weight.dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_heavy": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.is_heavier": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Stress": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Stress.none": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Stress.primary": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Stress.secondary": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.Stress.dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_functions.split_syllable": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_sonority": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_sonority.get_sonority": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_sonority.make_sonorities": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_stress": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_stress.stress_dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_stress.make_stresses": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.initialize_dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.initialize_dict_from_file": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.pre_sep_dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.initialize_presyllabified": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.vowel_seq_dict": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.VOWEL_SEQUENCES": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.locate_long": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.is_inseparable_vowels": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.consonantal_onset": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.apply_3c": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.t4_final_v": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.t4_diphthongs": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.apply_t4": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.separate_vowels": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.make_syllables": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.introduce_splits": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.onset_lengths": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_syllables.make_splits": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_text": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_weight": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_weight.syll_weight": {"tf": 1.7320508075688772}, "prosodic.langs.finnish.finnish_weight.make_weights": {"tf": 1.7320508075688772}, "prosodic.langs.langs": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.pronunciation_dictionary_filename_sep": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.cache_fn": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.lang_espeak": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.lang": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.use_cache": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.get": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.token2ipa": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.cached": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.phoneticize": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.phonemizer": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.phonemize": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.syllabify_ipa": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.syllabifier": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.syllabiphon": {"tf": 1.7320508075688772}, "prosodic.langs.langs.Language.syllabify": {"tf": 1.7320508075688772}, "prosodic.langs.langs.fix_recasing": {"tf": 1.7320508075688772}, "prosodic.langs.langs.fix_num_sylls": {"tf": 1.7320508075688772}, "prosodic.langs.langs.unstress": {"tf": 1.7320508075688772}, "prosodic.langs.langs.stress": {"tf": 1.7320508075688772}, "prosodic.langs.langs.ensure_maybe_stressed": {"tf": 1.7320508075688772}, "prosodic.langs.langs.ensure_unstressed": {"tf": 1.7320508075688772}, "prosodic.langs.langs.get_espeak_error_msg": {"tf": 1.7320508075688772}, "prosodic.langs.langs.get_espeak_env": {"tf": 1.7320508075688772}, "prosodic.langs.langs.set_espeak_env": {"tf": 1.7320508075688772}, "prosodic.lib": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint.line": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint.scansion": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint.scansion_str": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint.frequency": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataPoint.violations": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.meter": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.lang": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.has_selected": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.is_tab_formatted": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.constraints": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.lines": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.data": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.DataAggregator.convert_to_table": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.constraints": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.lines": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.mu": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.sigma": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.weights": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.train": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.report": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.generate_save_string": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_gradient_quotient_term": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty_gradient": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_objective": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_probabilities": {"tf": 1.7320508075688772}, "prosodic.lib.MaxEnt.MaxEntAnalyzer.calculate_overfit_penalty": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Phonemes": {"tf": 3}, "prosodic.lib.lexconvert.LexFormats": {"tf": 7.0710678118654755}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 3}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.espeak_version_line": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.writeFormatHeader_called": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_check_variants": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_check_for_similar_formats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 3}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 3}, "prosodic.lib.lexconvert.Counter": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Counter.c": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.Counter.sc": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.other": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.consonants": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainVowels": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.consonant": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.vowel": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.variant": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.ifset": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.speakjet": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeDic": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.getSetting": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getBuf": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.warnedAlready": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.convert": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.unicode_to_ascii_braille": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Message": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.replHome": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.as_utf8": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.as_unicode": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.as_printable": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.sylcount": {"tf": 2}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 2}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_version": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.main": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.instances": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.voice": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.filename": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.textToAvoid": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.restoreDic": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.close": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.stdout_width_unix": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.lexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.chr": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.sorted": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminal": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.category": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependency": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.preterminals": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.categories": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.dependencies": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_label": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_category": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_dep": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.set_deps": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.to_tuples": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.contract": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.fromstring": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 5}, "prosodic.lib.metricaltree.deptree.DependencyTree.copy": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.model_path": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.java_options": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.raw_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTreeParser.tagged_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.setup_module": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.DATE": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MODELS_VERSION": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.EJML_VERSION": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.DIR_ROOT": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.sylcmu": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.INFO_DO_NOT_STORE": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.set_paths": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.sent_splitter": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.parse_worker": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.return_parser": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.pause_splitter": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.pause_splitter_tokens": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.split_sentences_from_tokens": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.seg": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nseg": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsyll": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.lstresses": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.pstresses": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.stresses": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.nsylls": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_lstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_pstress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_stress": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.set_label": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 5}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguity": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.ambiguate": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.max_stress_disambiguate": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.min_stress_disambiguate": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.copy": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.deptreeParser": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_raw_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sent": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.dep_tagged_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_raw_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.lex_tagged_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_raw_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.phr_tagged_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.get_stats": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_raw_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTreeParser.stats_tagged_parse_sents": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.test": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.test.test_parser": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity.onsetless_syls": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity.complex_onsets": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity.codas": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity.complex_codas": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity.FEATURES": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.complexity.extract_features": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.ENG_CONFL": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.ft": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.son": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.confl": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.find_boundaries": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_seg": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.parse_syl": {"tf": 1.7320508075688772}, "prosodic.lib.syllabiphon.syllabify.Syllabify.syl_parse": {"tf": 1.7320508075688772}, "prosodic.parsing": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.w_stress": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.s_unstress": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.unres_within": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.foot_size": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.unres_across": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.w_peak": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.s_trough": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS_NAMES": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.CONSTRAINTS": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.DEFAULT_CONSTRAINTS": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.get_constraints": {"tf": 4.898979485566356}, "prosodic.parsing.constraints.CONSTRAINT_DESCS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.NUM_GOING": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.DEFAULT_METER_KWARGS": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.MTRDEFAULT": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter": {"tf": 6.928203230275509}, "prosodic.parsing.meter.Meter.__init__": {"tf": 7.0710678118654755}, "prosodic.parsing.meter.Meter.prefix": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.constraints": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.categorical_constraints": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.max_s": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.max_w": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.resolve_optionality": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.exhaustive": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.to_json": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.attrs": {"tf": 3.4641016151377544}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 4.898979485566356}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 4.898979485566356}, "prosodic.parsing.meter.Meter.parse": {"tf": 5.385164807134504}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 6.782329983125268}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 5.916079783099616}, "prosodic.parsing.meter.Meter.get_key": {"tf": 4.898979485566356}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 5.477225575051661}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 5.477225575051661}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 5.477225575051661}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 5.196152422706632}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 7.280109889280518}, "prosodic.parsing.parselists": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList": {"tf": 6.244997998398398}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 4.898979485566356}, "prosodic.parsing.parselists.ParseList.index_name": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.prefix": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.show_bounded": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.is_scansions": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.line": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 5.744562646538029}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 4.795831523312719}, "prosodic.parsing.parselists.ParseList.all": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.best": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 4.795831523312719}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 6.164414002968976}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 6.164414002968976}, "prosodic.parsing.parselists.ParseList.df": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 5.291502622129181}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 3.4641016151377544}, "prosodic.parsing.parselists.ParseList.render": {"tf": 5.385164807134504}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 5.385164807134504}, "prosodic.parsing.parses": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse": {"tf": 14.071247279470288}, "prosodic.parsing.parses.Parse.__init__": {"tf": 5.656854249492381}, "prosodic.parsing.parses.Parse.prefix": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.positions": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.positions_ls": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.line": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_bounded": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.bounded_by": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.unmetrical": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.comparison_nums": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.comparison_parses": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.parse_num": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.total_score": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.pause_comparisons": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.parse_rank": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.num_slots_positioned": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.children": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.line_num": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.init": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.to_json": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.from_json": {"tf": 5.477225575051661}, "prosodic.parsing.parses.Parse.slots": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.extend": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.violset": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.branch": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.constraints": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 5.477225575051661}, "prosodic.parsing.parses.Parse.txt": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.num_words": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.feet": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.attrs": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.ambig": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.score": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.bounds": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.html": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.to_html": {"tf": 6}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 4.898979485566356}, "prosodic.parsing.parses.Parse.get_df": {"tf": 5.291502622129181}, "prosodic.parsing.positions": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition": {"tf": 5.5677643628300215}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 5.385164807134504}, "prosodic.parsing.positions.ParsePosition.prefix": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.viold": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.violset": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.slots": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.parse": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 3.4641016151377544}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 3.4641016151377544}, "prosodic.parsing.slots": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot": {"tf": 5.196152422706632}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 5.830951894845301}, "prosodic.parsing.slots.ParseSlot.prefix": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot.unit": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot.viold": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 3.4641016151377544}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 3.4641016151377544}, "prosodic.parsing.utils": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.Bounding": {"tf": 5.744562646538029}, "prosodic.parsing.utils.Bounding.bounds": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.Bounding.bounded": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.Bounding.equal": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.Bounding.unequal": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 4.898979485566356}, "prosodic.parsing.utils.split_scansion": {"tf": 4.795831523312719}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 5.744562646538029}, "prosodic.parsing.utils.getlenparse": {"tf": 4.795831523312719}, "prosodic.parsing.utils.iter_mpos": {"tf": 6.557438524302}, "prosodic.prosodic": {"tf": 1.7320508075688772}, "prosodic.sents": {"tf": 1.7320508075688772}, "prosodic.sents.sents": {"tf": 1.7320508075688772}, "prosodic.sents.tokenizers": {"tf": 1.7320508075688772}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 4.795831523312719}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 5.291502622129181}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 4.795831523312719}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 4.795831523312719}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 7.280109889280518}, "prosodic.texts": {"tf": 1.7320508075688772}, "prosodic.texts.lines": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line": {"tf": 4.358898943540674}, "prosodic.texts.lines.Line.__init__": {"tf": 7.416198487095663}, "prosodic.texts.lines.Line.line_sep": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.sep": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.child_type": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.is_parseable": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.prefix": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.list_type": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.use_cache": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 3.4641016151377544}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 4.898979485566356}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 4.898979485566356}, "prosodic.texts.lines.Line.to_json": {"tf": 3.4641016151377544}, "prosodic.texts.lines.Line.to_html": {"tf": 6.855654600401044}, "prosodic.texts.lines.Line.stats": {"tf": 5.385164807134504}, "prosodic.texts.lines.Line.stats_d": {"tf": 5.385164807134504}, "prosodic.texts.lines.Line.num_sylls": {"tf": 3.4641016151377544}, "prosodic.texts.lines.Line.rime_distance": {"tf": 4.898979485566356}, "prosodic.texts.lines.LineList": {"tf": 1.7320508075688772}, "prosodic.texts.lines.LineList.get_rhyming_lines": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza": {"tf": 6}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 7.416198487095663}, "prosodic.texts.stanzas.Stanza.sep": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.child_type": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.prefix": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.list_type": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 3.4641016151377544}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 4.898979485566356}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 3.4641016151377544}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 3.4641016151377544}, "prosodic.texts.stanzas.StanzaList": {"tf": 1.7320508075688772}, "prosodic.texts.texts": {"tf": 1.7320508075688772}, "prosodic.texts.texts.NUMBUILT": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text": {"tf": 7.3484692283495345}, "prosodic.texts.texts.Text.__init__": {"tf": 8.94427190999916}, "prosodic.texts.texts.Text.sep": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.child_type": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.prefix": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_unit_attr": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.list_type": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.use_cache": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.cached_properties_to_clear": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.lang": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.to_hash": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.to_json": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.get_meter": {"tf": 5.385164807134504}, "prosodic.texts.texts.Text.set_meter": {"tf": 3.7416573867739413}, "prosodic.texts.texts.Text.meter": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.best_parse": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.parseable_units": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 5.916079783099616}, "prosodic.texts.texts.Text.parse": {"tf": 4.795831523312719}, "prosodic.texts.texts.Text.render": {"tf": 5.916079783099616}, "prosodic.texts.texts.Text.reset_meter": {"tf": 3.7416573867739413}, "prosodic.texts.texts.Text.parse_iter": {"tf": 7.280109889280518}, "prosodic.texts.texts.Text.parses": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.parse_stats": {"tf": 4.898979485566356}, "prosodic.texts.texts.Text.to_html": {"tf": 5.477225575051661}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 4.898979485566356}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.num_lines": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 3.4641016151377544}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 3.4641016151377544}, "prosodic.utils": {"tf": 1.7320508075688772}, "prosodic.utils.SimpleCache": {"tf": 4.242640687119285}, "prosodic.utils.SimpleCache.__init__": {"tf": 3.7416573867739413}, "prosodic.utils.SimpleCache.root_dir": {"tf": 1.7320508075688772}, "prosodic.utils.SimpleCache.get": {"tf": 5.291502622129181}, "prosodic.utils.retry_on_io_error": {"tf": 5.291502622129181}, "prosodic.utils.group_ents": {"tf": 5.291502622129181}, "prosodic.utils.groupby": {"tf": 6.244997998398398}, "prosodic.utils.get_txt": {"tf": 5.291502622129181}, "prosodic.utils.clean_text": {"tf": 4.795831523312719}, "prosodic.utils.get_attr_str": {"tf": 5.744562646538029}, "prosodic.utils.safesum": {"tf": 4.795831523312719}, "prosodic.utils.setindex": {"tf": 5.291502622129181}, "prosodic.utils.get_stress": {"tf": 4.795831523312719}, "prosodic.utils.get_initial_whitespace": {"tf": 4.795831523312719}, "prosodic.utils.unique": {"tf": 4.795831523312719}, "prosodic.utils.hashstr": {"tf": 5.291502622129181}, "prosodic.utils.read_json": {"tf": 4.795831523312719}, "prosodic.utils.from_json": {"tf": 6.244997998398398}, "prosodic.utils.load": {"tf": 5.291502622129181}, "prosodic.utils.to_json": {"tf": 5.291502622129181}, "prosodic.utils.ensure_dir": {"tf": 3.7416573867739413}, "prosodic.utils.encode_cache": {"tf": 4.795831523312719}, "prosodic.utils.decode_cache": {"tf": 4.795831523312719}, "prosodic.utils.to_html": {"tf": 5.744562646538029}, "prosodic.utils.enable_caching": {"tf": 1.7320508075688772}, "prosodic.utils.caching_is_enabled": {"tf": 3.4641016151377544}, "prosodic.utils.disable_caching": {"tf": 1.7320508075688772}, "prosodic.utils.caching_enabled": {"tf": 1.7320508075688772}, "prosodic.utils.caching_disabled": {"tf": 1.7320508075688772}, "prosodic.utils.logging_disabled": {"tf": 1.7320508075688772}, "prosodic.utils.logging_enabled": {"tf": 1.7320508075688772}, "prosodic.utils.force_int": {"tf": 5.291502622129181}, "prosodic.utils.tokenize_agnostic": {"tf": 4.795831523312719}, "prosodic.web": {"tf": 1.7320508075688772}, "prosodic.web.app": {"tf": 1.7320508075688772}, "prosodic.web.app.app": {"tf": 1.7320508075688772}, "prosodic.web.app.socketio": {"tf": 1.7320508075688772}, "prosodic.web.app.linelim": {"tf": 1.7320508075688772}, "prosodic.web.app.get_text": {"tf": 1.7320508075688772}, "prosodic.web.app.parse": {"tf": 1.7320508075688772}, "prosodic.web.app.index": {"tf": 1.7320508075688772}, "prosodic.web.app.main": {"tf": 1.7320508075688772}, "prosodic.web.app.jsonify": {"tf": 1.7320508075688772}, "prosodic.web.app.unjsonify": {"tf": 1.7320508075688772}, "prosodic.words": {"tf": 1.7320508075688772}, "prosodic.words.phonemes": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass": {"tf": 3.872983346207417}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 4.47213595499958}, "prosodic.words.phonemes.PhonemeClass.prefix": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.Phoneme": {"tf": 5.385164807134504}, "prosodic.words.phonemes.FEATS_PANPHON": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.get_ipa_info": {"tf": 3.4641016151377544}, "prosodic.words.phonemes.PhonemeList": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 4.358898943540674}, "prosodic.words.syllables": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable": {"tf": 5.196152422706632}, "prosodic.words.syllables.Syllable.__init__": {"tf": 5.830951894845301}, "prosodic.words.syllables.Syllable.prefix": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.child_type": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.list_type": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.to_json": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.stress": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.attrs": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.onset": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.rime": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.coda": {"tf": 3.4641016151377544}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 4.795831523312719}, "prosodic.words.syllables.SyllableList": {"tf": 1.7320508075688772}, "prosodic.words.words": {"tf": 1.7320508075688772}, "prosodic.words.words.SYLL_SEP": {"tf": 1.7320508075688772}, "prosodic.words.words.Word": {"tf": 6.4031242374328485}, "prosodic.words.words.WordToken": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.__init__": {"tf": 6.244997998398398}, "prosodic.words.words.WordToken.child_type": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.list_type": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.prefix": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.lang": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.word": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.to_json": {"tf": 3.4641016151377544}, "prosodic.words.words.WordType": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.__init__": {"tf": 5.656854249492381}, "prosodic.words.words.WordType.child_type": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.list_type": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.prefix": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.to_json": {"tf": 3.4641016151377544}, "prosodic.words.words.WordType.wtoken": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.forms": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.form": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.num_forms": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.is_punc": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.num_sylls": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.num_stressed_sylls": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.attrs": {"tf": 3.4641016151377544}, "prosodic.words.words.WordType.rime_distance": {"tf": 4.898979485566356}, "prosodic.words.words.WordForm": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.__init__": {"tf": 6.48074069840786}, "prosodic.words.words.WordForm.prefix": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.child_type": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.list_type": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.sylls_ipa": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.sylls_text": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.to_json": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.wtoken": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.syllables": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.token_stress": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.is_functionword": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.num_sylls": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.num_stressed_sylls": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.key": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.to_hash": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.rime": {"tf": 3.4641016151377544}, "prosodic.words.words.WordForm.rime_distance": {"tf": 4.898979485566356}, "prosodic.words.words.WordTypeList": {"tf": 1.7320508075688772}, "prosodic.words.words.WordFormList": {"tf": 1.7320508075688772}, "prosodic.words.words.WordFormList.slots": {"tf": 1.7320508075688772}, "prosodic.words.words.WordFormList.num_stressed_sylls": {"tf": 1.7320508075688772}, "prosodic.words.words.WordFormList.num_sylls": {"tf": 1.7320508075688772}, "prosodic.words.words.WordFormList.first_syll": {"tf": 1.7320508075688772}, "prosodic.words.words.WordFormList.sort_key": {"tf": 1.7320508075688772}, "prosodic.words.words.WordTokenList": {"tf": 1.7320508075688772}}, "df": 936, "m": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.cli": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 4}}}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 8}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 4, "u": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}}, "df": 3}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.texts.lines.Line.match_wordforms": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.web": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.clear_cached_properties": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "t": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2.8284271247461903}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_meter": {"tf": 2.449489742783178}, "prosodic.texts.texts.Text.set_meter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 2}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_iter": {"tf": 2.23606797749979}}, "df": 24, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}}, "df": 7}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}}, "df": 10}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.violset": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}}, "df": 1}}, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 5}}}, "n": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 8}}}}, "c": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 10, "s": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.is_complete": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 9, "d": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 2}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.utils.to_html": {"tf": 1.4142135623730951}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 35, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1.4142135623730951}}, "df": 4}}, "s": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}}, "df": 24}}}, "s": {"docs": {"prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.txt": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 10}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": null}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.get_constraints": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.violset": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 16, "s": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}}, "df": 8}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.coda": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}, "y": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.foot_counts": {"tf": 1.7320508075688772}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.utils.groupby": {"tf": 1.4142135623730951}, "prosodic.utils.setindex": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"prosodic.utils.setindex": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.cli.cli": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 2}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}}, "df": 16}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.clean_text": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.child_class": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 22, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 23}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 43, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 2}, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 16, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.children_from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.from_cache": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.get_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1.4142135623730951}}, "df": 12, "d": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}}, "df": 13}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.enable_caching": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1.4142135623730951}, "prosodic.utils.disable_caching": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}}, "df": 14}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}, "r": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 1}}, "s": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}, "prosodic.utils.force_int": {"tf": 1}}, "df": 15, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}}, "df": 12, "d": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}}, "df": 2}}}, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}}, "df": 12, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1.7320508075688772}, "prosodic.utils.groupby": {"tf": 1.7320508075688772}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.groupby": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 11}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 153, "s": {"docs": {"prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}}, "o": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}, "z": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}, "t": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.ents.Entity": {"tf": 2.449489742783178}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.605551275463989}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text": {"tf": 2.23606797749979}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.set_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.key": {"tf": 1}}, "df": 118, "m": {"docs": {"prosodic.ents.Entity.wordforms": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_all": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordform": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}}, "df": 10, "a": {"docs": {}, "df": 0, "t": {"1": {"docs": {"prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}}, "df": 1}, "2": {"docs": {"prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 2}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.872983346207417}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 2}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 2}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}}, "df": 21, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 2}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.cache": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}}, "df": 10}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 19}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 56}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1.4142135623730951}, "prosodic.utils.retry_on_io_error": {"tf": 1.4142135623730951}}, "df": 13, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}}, "df": 9}}}}}, "s": {"docs": {"prosodic.parsing.constraints.get_constraints": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 46, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.clear_cached_properties": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.replHome": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 21, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 15}}}}, "s": {"docs": {"prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 5}}, "e": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 8, "r": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.utils.group_ents": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.group_ents": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1.4142135623730951}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}, "prosodic.utils.from_json": {"tf": 1}}, "df": 11, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.cli": {"tf": 1}, "prosodic.cli.web": {"tf": 2.23606797749979}, "prosodic.ents.Entity": {"tf": 2}, "prosodic.ents.Entity.__init__": {"tf": 2}, "prosodic.ents.Entity.to_hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.html": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.key": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 2.449489742783178}, "prosodic.ents.Entity.save": {"tf": 2}, "prosodic.ents.Entity.render": {"tf": 2}, "prosodic.ents.Entity.from_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.attrs": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.txt": {"tf": 2}, "prosodic.ents.Entity.data": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.l": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.inspect": {"tf": 2}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.child_class": {"tf": 2}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 2}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.syllable": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 2}, "prosodic.ents.Entity.num": {"tf": 2}, "prosodic.ents.Entity.next": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prev": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_syll": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_phon": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.children_from_cache": {"tf": 2.23606797749979}, "prosodic.ents.Entity.get_key": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.from_cache": {"tf": 2.449489742783178}, "prosodic.ents.Entity.get_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 2.23606797749979}, "prosodic.ents.EntityList.__init__": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList.txt": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Phonemes": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.LexFormats": {"tf": 5.744562646538029}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 2}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 2}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 2}, "prosodic.lib.lexconvert.main": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 2}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 2}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse": {"tf": 4.58257569495584}, "prosodic.parsing.parses.Parse.__init__": {"tf": 2}, "prosodic.parsing.parses.Parse.line": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.from_json": {"tf": 2}, "prosodic.parsing.parses.Parse.slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.txt": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 2}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1.7320508075688772}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 2.23606797749979}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 2.23606797749979}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 2}, "prosodic.texts.lines.Line.__init__": {"tf": 2.23606797749979}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 2.449489742783178}, "prosodic.texts.lines.Line.stats": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.rime_distance": {"tf": 2}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 2.23606797749979}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 2.449489742783178}, "prosodic.texts.texts.Text.__init__": {"tf": 2.6457513110645907}, "prosodic.texts.texts.Text.to_hash": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.set_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.meter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.best_parse": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_stats": {"tf": 2}, "prosodic.texts.texts.Text.to_html": {"tf": 2}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_lines": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 2.449489742783178}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1.7320508075688772}, "prosodic.utils.setindex": {"tf": 2}, "prosodic.utils.get_stress": {"tf": 1.7320508075688772}, "prosodic.utils.get_initial_whitespace": {"tf": 1.7320508075688772}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1.4142135623730951}, "prosodic.utils.from_json": {"tf": 1.4142135623730951}, "prosodic.utils.load": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1.7320508075688772}, "prosodic.utils.ensure_dir": {"tf": 1.4142135623730951}, "prosodic.utils.encode_cache": {"tf": 1.4142135623730951}, "prosodic.utils.decode_cache": {"tf": 1.4142135623730951}, "prosodic.utils.to_html": {"tf": 1.7320508075688772}, "prosodic.utils.force_int": {"tf": 2.23606797749979}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.Phoneme": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 2.449489742783178}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.stress": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.onset": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.rime": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.coda": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1.7320508075688772}, "prosodic.words.words.Word": {"tf": 2.449489742783178}, "prosodic.words.words.WordToken.__init__": {"tf": 2}, "prosodic.words.words.WordToken.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.attrs": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.rime_distance": {"tf": 2}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_hash": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime": {"tf": 2}, "prosodic.words.words.WordForm.rime_distance": {"tf": 2}}, "df": 334, "n": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 10}, "m": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 4}}, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.cli.ipython": {"tf": 1}, "prosodic.ents.Entity": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 3.7416573867739413}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 74}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.7320508075688772}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 19}, "n": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"prosodic.cli.web": {"tf": 2.449489742783178}, "prosodic.ents.Entity": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.save": {"tf": 2.6457513110645907}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.LexFormats": {"tf": 5.656854249492381}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 2}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 2}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 2}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 2.8284271247461903}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1.4142135623730951}, "prosodic.utils.groupby": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.to_json": {"tf": 2.23606797749979}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1.7320508075688772}, "prosodic.utils.force_int": {"tf": 2.449489742783178}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 2}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 142, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.wordtokens": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.words": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 2}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 5, "r": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 1}, "d": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 2}}, "o": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parselists.ParseList.num_all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.score": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.getlenparse": {"tf": 1.4142135623730951}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 62}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 2.449489742783178}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 2.449489742783178}}, "df": 2}}, "y": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.txt": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.text": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_text": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 2}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 2}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 2.6457513110645907}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.to_hash": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.utils.get_txt": {"tf": 1.7320508075688772}, "prosodic.utils.clean_text": {"tf": 1.7320508075688772}, "prosodic.utils.tokenize_agnostic": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.7320508075688772}}, "df": 66, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 4}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 2.449489742783178}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 2}, "prosodic.ents.Entity.wordtypes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtype": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 2}, "prosodic.texts.stanzas.Stanza": {"tf": 2}, "prosodic.texts.texts.Text": {"tf": 2}, "prosodic.words.syllables.Syllable": {"tf": 2}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 19, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 20}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}, "n": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1.7320508075688772}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 2}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.key": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.word_r": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_syll": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_phon": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.EntityList": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.LexFormats": {"tf": 4}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 2}, "prosodic.lib.lexconvert.convert": {"tf": 2}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.split_scansion": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 2}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 2.23606797749979}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1.7320508075688772}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1.4142135623730951}, "prosodic.utils.group_ents": {"tf": 1.4142135623730951}, "prosodic.utils.groupby": {"tf": 1.4142135623730951}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1.4142135623730951}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1.4142135623730951}, "prosodic.utils.read_json": {"tf": 1.4142135623730951}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.Phoneme": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_hash": {"tf": 1.4142135623730951}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 252, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.cli": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 6}}}}}}, "x": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.set_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1.4142135623730951}, "prosodic.utils.load": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1.4142135623730951}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.Phoneme": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 125}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 3}}, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 15}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {"prosodic.parsing.parses.Parse.nary_feet": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 41}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.force_int": {"tf": 2}}, "df": 31, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "d": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.utils.clean_text": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 54}, "y": {"docs": {"prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 36, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 7}}}}}}, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 2.23606797749979}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 2}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.to_html": {"tf": 1.7320508075688772}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}}, "df": 37, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.from_json": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.ents.Entity.data": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.attrs": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 32}}}}}}, "s": {"docs": {"prosodic.utils.get_attr_str": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.html": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}}, "df": 7}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.average_position_size": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.wordforms_all": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}}, "df": 18, "o": {"docs": {}, "df": 0, "w": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}, "s": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 3}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 8}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}}, "df": 7, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.parses.Parse.ambig": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1.7320508075688772}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 34, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.ents.Entity.stanzas": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.stanza": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_stanza": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 2}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 14, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 2}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 2}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1.7320508075688772}}, "df": 6}}}}}}, "e": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity": {"tf": 2}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 2.23606797749979}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 2}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 2.23606797749979}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.7320508075688772}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 55, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.split_scansion": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.to_hash": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1.4142135623730951}, "prosodic.utils.get_stress": {"tf": 1.4142135623730951}, "prosodic.utils.get_initial_whitespace": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1.7320508075688772}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 39, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1.4142135623730951}, "prosodic.utils.get_stress": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.stress": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 12}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.cli.web": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 2}, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 11}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 15, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}}, "df": 29, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 6, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}, "s": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 3}}, "e": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.convert_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 14, "m": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "s": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}, "d": {"docs": {"prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 7}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Counter": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.replHome": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}, "s": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"prosodic.utils.safesum": {"tf": 1.7320508075688772}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.syllable": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_syll": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 2}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1.7320508075688772}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}}, "df": 37, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.sylcount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.hyphenate": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 17}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 12}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}}, "df": 6}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 6}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 2.449489742783178}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}}, "df": 8}}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.festival_group_stress": {"tf": 1}, "prosodic.lib.lexconvert.speakjet": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 13}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 2}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.7320508075688772}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.speakjet": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity.next": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prev": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 6, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.other": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.sort_key": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.sort_key": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.split_scansion": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.score": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "p": {"docs": {"prosodic.utils.get_stress": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1.4142135623730951}, "prosodic.ents.Entity": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 4}, "d": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}}, "df": 5, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "c": {"docs": {"prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "e": {"docs": {"prosodic.cli.ipython": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}}, "df": 11}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.prev": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.unique": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.cli.web": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1.7320508075688772}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 24, "s": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.getlenparse": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.iter_mpos": {"tf": 2.23606797749979}}, "df": 17}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1}}, "df": 1}}}, "m": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_phon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable": {"tf": 1}}, "df": 22, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}}, "df": 28}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 8}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "s": {"2": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 4.47213595499958}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 2}, "prosodic.parsing.parses.Parse.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.bounds": {"tf": 2.6457513110645907}, "prosodic.parsing.parses.Parse.html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1.4142135623730951}}, "df": 68, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1.4142135623730951}}, "df": 4}}}}, "d": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.utils.read_json": {"tf": 1}}, "df": 9}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}}, "df": 31}}}}, "s": {"docs": {"prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.branch": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses": {"tf": 1.4142135623730951}}, "df": 31, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 14}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 2}, "prosodic.ents.Entity.text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.syllable": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}}, "df": 27}}}, "t": {"docs": {"prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}, "a": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 3}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.stress_ints": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.get_key": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 2}, "s": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 3, "d": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 6, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.parses.Parse.num_peaks": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {"prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}}, "df": 3}}, "w": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 6, "e": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 2}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 8, "b": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1.4142135623730951}}, "df": 12}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.cli.ipython": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 45, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtokens": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.words": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtypes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_all": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordform": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 2}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.7320508075688772}}, "df": 46, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 2}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}}, "df": 26, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordFormList": {"tf": 1}}, "df": 8, "s": {"docs": {"prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.words.words.Word": {"tf": 2}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordTypeList": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.wordtypes": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}}, "df": 2}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}}, "df": 29}}}}, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.utils.get_iambic_parse": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.get_initial_whitespace": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 2}}, "y": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 5, "s": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 1}, "y": {"docs": {"prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 5, "s": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.utils.split_scansion": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.cli.web": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {"prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.replHome": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}}, "df": 7, "h": {"docs": {"prosodic.ents.Entity.to_hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.hash": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_hash": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 2}, "prosodic.words.words.WordForm.to_hash": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.get_key": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 3}}, "d": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.html": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 2}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 2}, "prosodic.parsing.parses.Parse.html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 2.23606797749979}, "prosodic.texts.lines.Line.to_html": {"tf": 2}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.utils.to_html": {"tf": 1.7320508075688772}}, "df": 10}}, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 2}}, "x": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.cli.web": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}}, "df": 51, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2.449489742783178}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parselists.ParseList.bound": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 2, "d": {"docs": {"prosodic.ents.Entity.num": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"prosodic.utils.get_attr_str": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.3166247903554}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.utils.force_int": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 25, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}}, "df": 19}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}}, "df": 5}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parselists.ParseList.best": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.best_parse": {"tf": 1.4142135623730951}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 2}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.branch": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "y": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1.4142135623730951}}, "df": 28, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1.4142135623730951}, "prosodic.utils.encode_cache": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 11}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}, "d": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 4.242640687119285}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 2.6457513110645907}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 2}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 2.449489742783178}, "prosodic.texts.texts.Text.__init__": {"tf": 2.8284271247461903}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 2.6457513110645907}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 2}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 30, "s": {"docs": {"prosodic.cli.web": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 2}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 2}}, "df": 18}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.cli.web": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}}, "df": 3, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 2}, "s": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.decode_cache": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.utils.decode_cache": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1.7320508075688772}, "prosodic.utils.to_json": {"tf": 1}}, "df": 16, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.get_df": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.df": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.7320508075688772}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1.4142135623730951}, "prosodic.utils.groupby": {"tf": 1.7320508075688772}, "prosodic.utils.setindex": {"tf": 1.7320508075688772}}, "df": 17}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 2}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats_d": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.to_json": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1.4142135623730951}}, "df": 52}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "t": {"docs": {"prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.disable_caching": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.caching_disabled": {"tf": 1}, "prosodic.utils.logging_disabled": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}}, "df": 1, "n": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {"prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}}, "df": 5}}, "i": {"docs": {"prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 3, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 2}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.slots": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}}, "df": 74, "t": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 2}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}}, "df": 27, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.SimpleCache": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"prosodic.parsing.parses.Parse.meter_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 18}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.num": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1.7320508075688772}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}}, "df": 7}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.utils.SimpleCache.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 18, "s": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}}, "df": 4, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}}, "df": 8}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1.7320508075688772}, "prosodic.utils.tokenize_agnostic": {"tf": 1}}, "df": 16, "s": {"docs": {"prosodic.utils.hashstr": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 3}}}}}}}, "f": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_syll": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_phon": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.replHome": {"tf": 1}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 2}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 2}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1.4142135623730951}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 2}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 2}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 2}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 131}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.ipython": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1.4142135623730951}, "prosodic.utils.get_stress": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 9}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.cli.ipython": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 28, "s": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 2}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}}, "df": 2}}, "e": {"docs": {"prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_syll": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.is_phon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.605551275463989}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 2}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.maybe_bytes": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 2.449489742783178}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 2.8284271247461903}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 2}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 2.6457513110645907}, "prosodic.texts.texts.Text.__init__": {"tf": 2.8284271247461903}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 2.23606797749979}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 1}}, "df": 92, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.opt_vowel": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.safesum": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1.4142135623730951}}, "df": 2, "u": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2.449489742783178}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}}, "df": 4, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 2.449489742783178}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 2}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1.4142135623730951}}, "df": 37, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.utils.safesum": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 9, "n": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}}, "df": 6, "e": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.6457513110645907}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 51}}, "t": {"docs": {"prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}}, "df": 39, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 4, "m": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}}, "df": 5, "d": {"docs": {"prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1.4142135623730951}, "prosodic.utils.clean_text": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.parsing.constraints.get_constraints": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.next": {"tf": 1.4142135623730951}}, "df": 1}}, "w": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1.4142135623730951}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.markup_bbcMicro_word": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 5}}}}}}, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 3, "s": {"docs": {"prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.cli.web": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getBuf": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}}, "df": 19, "s": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.cli.ipython": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1}, "prosodic.ents.Entity.txt": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1}, "prosodic.ents.Entity.child_class": {"tf": 1}, "prosodic.ents.Entity.get_ld": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.Entity.df": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.stanzas": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.ents.Entity.wordtokens": {"tf": 1}, "prosodic.ents.Entity.words": {"tf": 1}, "prosodic.ents.Entity.wordtypes": {"tf": 1}, "prosodic.ents.Entity.wordforms": {"tf": 1}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1}, "prosodic.ents.Entity.wordforms_all": {"tf": 1}, "prosodic.ents.Entity.syllables": {"tf": 1}, "prosodic.ents.Entity.phonemes": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.get_cache": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1}, "prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.wordform": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.syll": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.parseable_units": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.texts.texts.Text.parse_stats": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1}, "prosodic.utils.clean_text": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.get_initial_whitespace": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.get_phoneme_featuretable": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1}, "prosodic.words.words.WordType.rime_distance": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1}}, "df": 297}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_df": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"prosodic.utils.retry_on_io_error": {"tf": 1.7320508075688772}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.key": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 24}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1.4142135623730951}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}}, "df": 46}}}}}, "s": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.utils.Bounding": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1}, "prosodic.words.words.WordToken": {"tf": 1}, "prosodic.words.words.WordType": {"tf": 1}, "prosodic.words.words.WordForm": {"tf": 1}}, "df": 14}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.to_html": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.Text.reset_meter": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_html": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.words.words.Word": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 2}, "d": {"docs": {"prosodic.parsing.parses.Parse.can_compare": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.read_json": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.wordSeparator": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "m": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.word_r": {"tf": 1.4142135623730951}}, "df": 2}}}, "k": {"docs": {"prosodic.parsing.parselists.ParseList.rank": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 2}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}}, "df": 8}}}}, "w": {"docs": {"prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.rime": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.rime_distance": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.rime": {"tf": 1.7320508075688772}, "prosodic.words.words.WordForm.rime_distance": {"tf": 1.4142135623730951}}, "df": 7}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "o": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}}, "df": 19, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1}, "prosodic.parsing.parselists.ParseList.bounded": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.onset": {"tf": 1.4142135623730951}}, "df": 2}}}}, "f": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.__init__": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_hash": {"tf": 1}, "prosodic.ents.Entity.html": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.attrs": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.txt": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.child_class": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.stanzas": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.lines": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtokens": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.words": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtypes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_all": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.syllables": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.phonemes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.num": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.children_from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.LexFormats": {"tf": 3.7416573867739413}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.wordSeparator": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.setMultiple": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 2}, "prosodic.parsing.meter.Meter.__init__": {"tf": 2}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1}, "prosodic.parsing.meter.Meter.constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.categorical_constraint_names": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_bounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_all_with_combos": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.prefix_attrs": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_norm": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_raw": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 4.123105625617661}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.violset": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraint_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_stressed_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_sylls": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_words": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_peaks": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_counts": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.num_positions": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}, "prosodic.parsing.parses.Parse.average_position_size": {"tf": 1}, "prosodic.parsing.parses.Parse.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}, "prosodic.parsing.parses.Parse.constraint_scores": {"tf": 1}, "prosodic.parsing.parses.Parse.score": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_str": {"tf": 1}, "prosodic.parsing.parses.Parse.meter_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_ints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.stress_str": {"tf": 1}, "prosodic.parsing.parses.Parse.html": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 2.449489742783178}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_scores": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.meter_str": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.num_slots": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.constraint_scores": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.txt": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 2.23606797749979}, "prosodic.parsing.utils.getlenparse": {"tf": 1.7320508075688772}, "prosodic.parsing.utils.iter_mpos": {"tf": 2.449489742783178}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.7320508075688772}, "prosodic.texts.lines.Line.__init__": {"tf": 2}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1.4142135623730951}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 2}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 2.449489742783178}, "prosodic.texts.texts.Text.__init__": {"tf": 2}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.texts.texts.Text.to_hash": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_html": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1}, "prosodic.texts.texts.Text.num_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.utils.retry_on_io_error": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 2}, "prosodic.utils.safesum": {"tf": 1.7320508075688772}, "prosodic.utils.setindex": {"tf": 1.4142135623730951}, "prosodic.utils.unique": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 2}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.syllables.Syllable.stress": {"tf": 1}, "prosodic.words.syllables.Syllable.attrs": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.onset": {"tf": 1}, "prosodic.words.syllables.Syllable.rime": {"tf": 1}, "prosodic.words.syllables.Syllable.nucleus": {"tf": 1}, "prosodic.words.syllables.Syllable.coda": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordType.attrs": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 2}, "prosodic.words.words.WordForm.to_json": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_hash": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1.4142135623730951}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 238, "f": {"docs": {"prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.from_json": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.get_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.attrs": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.meter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.parses": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1.7320508075688772}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.get_meter": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.meter": {"tf": 1}, "prosodic.texts.texts.Text.best_parse": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.texts.texts.Text.parses": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1.4142135623730951}, "prosodic.utils.load": {"tf": 1.4142135623730951}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.utils.encode_cache": {"tf": 1.7320508075688772}, "prosodic.utils.decode_cache": {"tf": 1.7320508075688772}, "prosodic.utils.to_html": {"tf": 1.7320508075688772}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 51, "s": {"docs": {"prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1.4142135623730951}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 15}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 2}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1.7320508075688772}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 2}}, "df": 23, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}}, "df": 3}}}, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parselists.ParseList": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 2.449489742783178}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1}, "prosodic.parsing.parses.Parse.stanza_num": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.to_json": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.from_json": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.parsing.parses.Parse.stats_d": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.texts.Text.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"1": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.utils.hashstr": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {"prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}}, "df": 1}}, "r": {"docs": {"prosodic.ents.Entity.render": {"tf": 1}, "prosodic.ents.Entity.get_parent": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.ents.Entity.text": {"tf": 1}, "prosodic.ents.Entity.stanza": {"tf": 1}, "prosodic.ents.Entity.line": {"tf": 1}, "prosodic.ents.Entity.wordtoken": {"tf": 1}, "prosodic.ents.Entity.wordtype": {"tf": 1}, "prosodic.ents.Entity.wordform": {"tf": 1}, "prosodic.ents.Entity.syllable": {"tf": 1}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.next": {"tf": 1}, "prosodic.ents.Entity.prev": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.Entity.from_cache": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.constraints.get_constraints": {"tf": 2}, "prosodic.parsing.meter.Meter.parse": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.best": {"tf": 1}, "prosodic.parsing.parselists.ParseList.best_parse": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.line": {"tf": 1}, "prosodic.parsing.parses.Parse.extend": {"tf": 1}, "prosodic.parsing.parses.Parse.ambig": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 2}, "prosodic.utils.get_stress": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.words.words.WordForm.rime": {"tf": 1}}, "df": 55, "i": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.SimpleCache": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.utils.unique": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.bounding_relation": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 7, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.is_text": {"tf": 1}, "prosodic.ents.Entity.is_stanza": {"tf": 1}, "prosodic.ents.Entity.is_line": {"tf": 1}, "prosodic.ents.Entity.is_wordtoken": {"tf": 1}, "prosodic.ents.Entity.is_wordtype": {"tf": 1}, "prosodic.ents.Entity.is_wordform": {"tf": 1}, "prosodic.ents.Entity.is_syll": {"tf": 1}, "prosodic.ents.Entity.is_phon": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1}, "prosodic.parsing.parses.Parse.is_complete": {"tf": 1}, "prosodic.parsing.parses.Parse.can_compare": {"tf": 1}, "prosodic.parsing.parses.Parse.is_iambic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_trochaic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_anapestic": {"tf": 1}, "prosodic.parsing.parses.Parse.is_dactylic": {"tf": 1}, "prosodic.parsing.parses.Parse.bounds": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_prom": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_stressed": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_heavy": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_strong": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.is_weak": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.is_rhyming": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1}, "prosodic.utils.caching_is_enabled": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_onset": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_rime": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_nucleus": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_coda": {"tf": 1}, "prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1}, "prosodic.words.syllables.Syllable.has_dipthong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_stressed": {"tf": 1}, "prosodic.words.syllables.Syllable.is_heavy": {"tf": 1}}, "df": 43}}}}, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}}, "df": 4}, "x": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}}}}}}, "k": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 1}}, "e": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.sylcount": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}}, "df": 12, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.cli.web": {"tf": 1}, "prosodic.utils.enable_caching": {"tf": 1}}, "df": 2, "d": {"docs": {"prosodic.parsing.meter.Meter.use_cache": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.use_cache_texts": {"tf": 1.4142135623730951}, "prosodic.utils.caching_is_enabled": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.caching_enabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity": {"tf": 2.23606797749979}, "prosodic.ents.Entity.__init__": {"tf": 2.23606797749979}, "prosodic.ents.Entity.to_hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.html": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.key": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.hash": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.render": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.from_json": {"tf": 2}, "prosodic.ents.Entity.attrs": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.prefix_attrs": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.txt": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_ld": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.df": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.get_parent": {"tf": 2}, "prosodic.ents.Entity.line_r": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.word_r": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.text": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.stanza": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.line": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtoken": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtype": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordform": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.syllable": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.num": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.next": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.prev": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_text": {"tf": 2}, "prosodic.ents.Entity.is_stanza": {"tf": 2}, "prosodic.ents.Entity.is_line": {"tf": 2}, "prosodic.ents.Entity.is_wordtoken": {"tf": 2}, "prosodic.ents.Entity.is_wordtype": {"tf": 2}, "prosodic.ents.Entity.is_wordform": {"tf": 2}, "prosodic.ents.Entity.is_syll": {"tf": 2}, "prosodic.ents.Entity.is_phon": {"tf": 2}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1.7320508075688772}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 2.23606797749979}, "prosodic.parsing.parses.Parse.line": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.WordType.attrs": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.key": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.to_hash": {"tf": 1.4142135623730951}}, "df": 62, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.ents.EntityList.txt": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.data": {"tf": 1}, "prosodic.ents.Entity.l": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.child_class": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.stanzas": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.lines": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtokens": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.words": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtypes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_all": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.syllables": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.phonemes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.children_from_cache": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1.7320508075688772}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}}, "df": 29}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.6457513110645907}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.words.syllables.Syllable.has_consonant_ending": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 6}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.utils.ensure_dir": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.groupby": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1}}, "df": 9, "s": {"docs": {"prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.ents.Entity.word_r": {"tf": 1}, "prosodic.lib.lexconvert.Phonemes": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.utils.ensure_dir": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.Message": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse.extend": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.meter.Meter": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.stdin_is_terminal": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.parsing.parses.Parse.nary_feet": {"tf": 1}, "prosodic.parsing.parses.Parse.foot_type": {"tf": 1}}, "df": 7}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 2}}}}}}}, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.utils.unique": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 2}, "prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.convert_system_festival_dictionary_to_espeak": {"tf": 1}}, "df": 9}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.449489742783178}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}}, "df": 15}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}}, "df": 6}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.wordSeparator": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.texts.texts.Text": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.speakPhones": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {"prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.constraints.w_stress": {"tf": 1}, "prosodic.parsing.constraints.s_unstress": {"tf": 1}, "prosodic.parsing.constraints.unres_within": {"tf": 1}, "prosodic.parsing.constraints.foot_size": {"tf": 1}, "prosodic.parsing.constraints.unres_across": {"tf": 1}, "prosodic.parsing.constraints.w_peak": {"tf": 1}, "prosodic.parsing.constraints.s_trough": {"tf": 1}}, "df": 7}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"prosodic.lib.lexconvert.macSayCommand": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.main": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.utils.force_int": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1}, "prosodic.utils.unique": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.cli.ipython": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.words.words.Word": {"tf": 1.4142135623730951}, "prosodic.words.words.WordToken.__init__": {"tf": 1.4142135623730951}}, "df": 5, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.words.Word": {"tf": 1.7320508075688772}, "prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.line_r": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.lines": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.line": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.is_line": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.parsing.meter.Meter.use_cache_lines": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.get_key": {"tf": 2}, "prosodic.parsing.meter.Meter.parses_from_cache": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 2.23606797749979}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.line": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 3.4641016151377544}, "prosodic.parsing.parses.Parse.line": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.line_num": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.from_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.line_txt": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 2.449489742783178}, "prosodic.texts.lines.Line.__init__": {"tf": 2}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.lines.Line.num_sylls": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 2.23606797749979}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 44, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.ents.Entity.line_r": {"tf": 1}, "prosodic.lib.lexconvert.getInputText": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.parsing.meter.Meter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.num_lines": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line": {"tf": 1}, "prosodic.texts.lines.Line.rime_distance": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.get_rhyming_lines": {"tf": 1.7320508075688772}, "prosodic.texts.stanzas.Stanza.num_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.is_rhyming": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.texts.texts.Text.get_rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.rhyming_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_lines": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.num_rhyming_lines": {"tf": 1.4142135623730951}}, "df": 20}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity.lines": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.ents.Entity": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.__init__": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.data": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.l": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.ld": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.get_ld": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.stanzas": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.lines": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtokens": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.words": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordtypes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.wordforms_nopunc": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.wordforms_all": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.syllables": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.phonemes": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.i": {"tf": 1}, "prosodic.ents.Entity.num": {"tf": 1}, "prosodic.ents.Entity.children_from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1.4142135623730951}, "prosodic.ents.EntityList.txt": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.parseIntoWordsAndClauses": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.convert": {"tf": 2}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}, "prosodic.parsing.constraints.w_stress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.foot_size": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.w_peak": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.get_constraints": {"tf": 1.7320508075688772}, "prosodic.parsing.meter.Meter": {"tf": 2}, "prosodic.parsing.meter.Meter.__init__": {"tf": 2}, "prosodic.parsing.meter.Meter.get_pos_types": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 2.8284271247461903}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}, "prosodic.parsing.parses.Parse.constraints": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.feet": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.i": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.parsing.utils.split_scansion": {"tf": 1}, "prosodic.parsing.utils.get_possible_scansions": {"tf": 1}, "prosodic.parsing.utils.getlenparse": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1.4142135623730951}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_words_txt": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.lines.LineList": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1.4142135623730951}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.stanzas.StanzaList": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.__init__": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}, "prosodic.utils.group_ents": {"tf": 1.4142135623730951}, "prosodic.utils.get_attr_str": {"tf": 1}, "prosodic.utils.safesum": {"tf": 1.7320508075688772}, "prosodic.utils.setindex": {"tf": 1}, "prosodic.utils.unique": {"tf": 1.7320508075688772}, "prosodic.utils.tokenize_agnostic": {"tf": 1}, "prosodic.words.phonemes.PhonemeList": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.syllables.SyllableList": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1}, "prosodic.words.words.WordForm.syllables": {"tf": 1.4142135623730951}, "prosodic.words.words.WordTypeList": {"tf": 1}, "prosodic.words.words.WordFormList": {"tf": 1}, "prosodic.words.words.WordTokenList": {"tf": 1}}, "df": 97, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.output_clauses": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}}, "df": 1}}, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.parsing.meter.Meter.get_wordform_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.branch": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.slots": {"tf": 1}, "prosodic.parsing.parses.Parse.wordtoken2slots": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.parsing.parses.Parse.constraints": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parses.Parse.feet": {"tf": 1}, "prosodic.parsing.utils.get_iambic_parse": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.words.WordForm.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.foot_sizes": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.get_wordform_matrix": {"tf": 1}, "prosodic.texts.lines.Line.match_wordforms": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.parses_from_cache": {"tf": 1}}, "df": 6}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.words.WordToken.__init__": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.ents.Entity.inspect": {"tf": 1}, "prosodic.parsing.parselists.ParseList.df_syll": {"tf": 1.4142135623730951}, "prosodic.utils.SimpleCache": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1.4142135623730951}, "prosodic.words.syllables.Syllable.stress": {"tf": 1.4142135623730951}}, "df": 5}}}, "x": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 3.1622776601683795}, "prosodic.lib.lexconvert.read_user_lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_try": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2.8284271247461903}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.get_macuk_lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_prepDefaultLex": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allWords": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.check_redef": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 16, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.getSetting": {"tf": 1}, "prosodic.lib.lexconvert.checkSetting": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.words.words.WordType": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.getlenparse": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 5}}}}}, "d": {"docs": {"prosodic.ents.Entity.get_df": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.bbcMicro_partPhonemeCount": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.sents.tokenizers.get_sent_tokenizer": {"tf": 1}, "prosodic.utils.load": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.load": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.utils.logging_disabled": {"tf": 1}, "prosodic.utils.logging_enabled": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"prosodic.lib.lexconvert.convert": {"tf": 1}}, "df": 1}}, "v": {"0": {"docs": {"prosodic.lib.lexconvert": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 2}}, "df": 4, "s": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.markup_doubleTalk_word": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.ifset": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"prosodic.lib.lexconvert.make_dictionary": {"tf": 1}}, "df": 1}, "y": {"docs": {"prosodic.lib.lexconvert.sylcount": {"tf": 1}}, "df": 1}}, "l": {"docs": {"prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.hash": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.set": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.meter_val": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 2}, "prosodic.utils.force_int": {"tf": 2}}, "df": 8, "s": {"docs": {"prosodic.utils.safesum": {"tf": 1.4142135623730951}, "prosodic.utils.hashstr": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.utils.groupby": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"prosodic.lib.lexconvert.Phonemes": {"tf": 1}, "prosodic.words.syllables.Syllable.num_vowels": {"tf": 1.4142135623730951}}, "df": 2}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {"prosodic.lib.lexconvert.variant": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 4, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.foot_size": {"tf": 1}}, "df": 1}, "d": {"docs": {"prosodic.parsing.positions.ParsePosition.constraint_set": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.score": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 5, "s": {"docs": {"prosodic.parsing.parses.Parse.violset": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.constraint_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition": {"tf": 1.4142135623730951}, "prosodic.parsing.positions.ParsePosition.init": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.constraint_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.num_viols": {"tf": 1.4142135623730951}, "prosodic.parsing.slots.ParseSlot.has_viol": {"tf": 1.4142135623730951}, "prosodic.parsing.utils.Bounding": {"tf": 1}}, "df": 9}}}}}}, "d": {"docs": {"prosodic.parsing.positions.ParsePosition": {"tf": 1}, "prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.parsing.positions.ParsePosition": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 2, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"0": {"2": {"docs": {}, "df": 0, "c": {"8": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"0": {"2": {"7": {"9": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"0": {"2": {"6": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "u": {"0": {"3": {"2": {"9": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}, "prosodic.utils.get_stress": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.Counter": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 1.4142135623730951}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}, "prosodic.texts.texts.Text.__init__": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1.7320508075688772}}, "df": 16, "d": {"docs": {"prosodic.ents.Entity": {"tf": 2}, "prosodic.lib.lexconvert.LexFormats": {"tf": 2.23606797749979}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.other": {"tf": 1}, "prosodic.lib.lexconvert.consonant": {"tf": 1}, "prosodic.lib.lexconvert.vowel": {"tf": 1}, "prosodic.lib.lexconvert.opt_vowel": {"tf": 1}, "prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.ifset": {"tf": 1}, "prosodic.lib.lexconvert.makeDic": {"tf": 1}, "prosodic.lib.lexconvert.espeak_probably_right_already": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}, "prosodic.lib.metricaltree.deptree.DependencyTree.convert": {"tf": 1}, "prosodic.lib.metricaltree.metricaltree.MetricalTree.convert": {"tf": 1}, "prosodic.parsing.parselists.ParseList": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.texts.lines.Line": {"tf": 2}, "prosodic.texts.stanzas.Stanza": {"tf": 1.7320508075688772}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}}, "df": 22}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 3}, "s": {"docs": {"prosodic.lib.lexconvert.mainopt_syllables": {"tf": 1}, "prosodic.lib.lexconvert.make_dictionary": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.utils.SimpleCache": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.lib.lexconvert.markup_inline_word": {"tf": 1}, "prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_fast": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line_exhaustive": {"tf": 1}}, "df": 9}}}, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.allPh": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.ents.Entity.key": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.lines": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.scansions": {"tf": 1.4142135623730951}, "prosodic.utils.unique": {"tf": 1.4142135623730951}, "prosodic.words.words.WordForm.key": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}, "prosodic.lib.lexconvert.ascii_braille_to_unicode": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.parsing.parselists.ParseList.render": {"tf": 1}, "prosodic.parsing.parselists.ParseList.to_html": {"tf": 1}, "prosodic.parsing.parses.Parse": {"tf": 1}, "prosodic.parsing.parses.Parse.to_html": {"tf": 1}, "prosodic.words.words.WordForm.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "t": {"docs": {"prosodic.parsing.slots.ParseSlot": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.texts.texts.Text": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"prosodic.texts.texts.Text.parseable_units": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.constraints.unres_within": {"tf": 1.4142135623730951}, "prosodic.parsing.constraints.unres_across": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.parsing.constraints.s_trough": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.constraints.s_unstress": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.usable_words": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}, "prosodic.lib.lexconvert.unicode_preprocess": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.utils.Bounding": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.is_rising": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.is_vowel": {"tf": 1}, "prosodic.words.syllables.Syllable.is_strong": {"tf": 1}, "prosodic.words.syllables.Syllable.is_weak": {"tf": 1}}, "df": 4}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parselists.ParseList.num_parses": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.num_unbounded": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.bound": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.parsing.parses.Parse": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {"prosodic.ents.Entity.clear_cached_properties": {"tf": 1}, "prosodic.lib.lexconvert.LexFormats": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.writeFormatHeader": {"tf": 1}, "prosodic.lib.lexconvert.catchSignals": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.readWithLex": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1, "d": {"docs": {"prosodic.ents.Entity.cache": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {"prosodic.lib.lexconvert.mainopt_try": {"tf": 1}}, "df": 1}}, "k": {"docs": {"prosodic.lib.lexconvert.mainopt_trymac_uk": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}}, "df": 2}, "r": {"docs": {}, "df": 0, "l": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.utils.get_txt": {"tf": 1.4142135623730951}}, "df": 3}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.lib.lexconvert.output_clauses": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.ents.Entity": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.save": {"tf": 1.7320508075688772}, "prosodic.ents.Entity.from_json": {"tf": 1.4142135623730951}, "prosodic.parsing.meter.Meter.to_json": {"tf": 1.4142135623730951}, "prosodic.parsing.parselists.ParseList.from_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parselists.ParseList.to_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.to_json": {"tf": 1.7320508075688772}, "prosodic.parsing.parses.Parse.from_json": {"tf": 2}, "prosodic.parsing.positions.ParsePosition.to_json": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.to_json": {"tf": 1}, "prosodic.texts.lines.Line.to_json": {"tf": 1}, "prosodic.texts.stanzas.Stanza": {"tf": 1}, "prosodic.texts.stanzas.Stanza.to_json": {"tf": 1}, "prosodic.texts.texts.Text.to_json": {"tf": 1.4142135623730951}, "prosodic.utils.read_json": {"tf": 1.4142135623730951}, "prosodic.utils.from_json": {"tf": 2}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_json": {"tf": 1.4142135623730951}, "prosodic.words.phonemes.PhonemeClass.to_json": {"tf": 1}, "prosodic.words.phonemes.get_ipa_info": {"tf": 1}, "prosodic.words.syllables.Syllable.to_json": {"tf": 1}, "prosodic.words.words.WordToken.to_json": {"tf": 1}, "prosodic.words.words.WordType.to_json": {"tf": 1}, "prosodic.words.words.WordForm.to_json": {"tf": 1}}, "df": 24}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.variant": {"tf": 1}, "prosodic.lib.lexconvert.bbc_appendDefaultLex": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 4}}}}, "k": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.__init__": {"tf": 1}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.save": {"tf": 1}, "prosodic.ents.Entity.get_df": {"tf": 1}, "prosodic.ents.EntityList.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parses.Parse.__init__": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 39}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.ents.Entity.key": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.to_json": {"tf": 1}, "prosodic.ents.Entity.get_key": {"tf": 2}, "prosodic.ents.Entity.from_cache": {"tf": 1.4142135623730951}, "prosodic.ents.Entity.cache": {"tf": 2}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}, "prosodic.parsing.meter.Meter.get_key": {"tf": 1.4142135623730951}, "prosodic.parsing.parses.Parse.sort_key": {"tf": 1}, "prosodic.utils.SimpleCache.get": {"tf": 1.7320508075688772}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.words.words.WordForm.key": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 1}, "prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.violset": {"tf": 1}, "prosodic.utils.get_attr_str": {"tf": 1.4142135623730951}}, "df": 4, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"prosodic.lib.lexconvert.bbcshortest": {"tf": 1}}, "df": 1, "s": {"docs": {"prosodic.lib.lexconvert.write_bbcmicro_phones": {"tf": 1}, "prosodic.lib.lexconvert.bbcshortest": {"tf": 1}, "prosodic.lib.lexconvert.bbcKeystrokes": {"tf": 2}, "prosodic.lib.lexconvert.print_bbclex_instructions": {"tf": 1}}, "df": 4}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.parsing.meter.Meter.__init__": {"tf": 1}, "prosodic.parsing.meter.Meter.parse": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_line": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.parselists.ParseList.__init__": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats_d": {"tf": 1}, "prosodic.parsing.parselists.ParseList.stats": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.parsing.positions.ParsePosition.__init__": {"tf": 1}, "prosodic.parsing.slots.ParseSlot.__init__": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}, "prosodic.texts.lines.Line.__init__": {"tf": 1}, "prosodic.texts.lines.Line.to_html": {"tf": 1}, "prosodic.texts.lines.Line.stats": {"tf": 1}, "prosodic.texts.lines.Line.stats_d": {"tf": 1}, "prosodic.texts.stanzas.Stanza.__init__": {"tf": 1}, "prosodic.texts.texts.Text.__init__": {"tf": 1}, "prosodic.texts.texts.Text.get_meter": {"tf": 1}, "prosodic.texts.texts.Text.set_meter": {"tf": 1}, "prosodic.texts.texts.Text.needs_parsing": {"tf": 1}, "prosodic.texts.texts.Text.parse": {"tf": 1}, "prosodic.texts.texts.Text.render": {"tf": 1}, "prosodic.texts.texts.Text.reset_meter": {"tf": 1}, "prosodic.texts.texts.Text.parse_iter": {"tf": 1}, "prosodic.utils.from_json": {"tf": 1}, "prosodic.utils.load": {"tf": 1}, "prosodic.utils.to_html": {"tf": 1}, "prosodic.words.phonemes.PhonemeClass.__init__": {"tf": 1}, "prosodic.words.phonemes.Phoneme": {"tf": 1}, "prosodic.words.phonemes.PhonemeList.__init__": {"tf": 1}, "prosodic.words.syllables.Syllable.__init__": {"tf": 1}, "prosodic.words.words.WordToken.__init__": {"tf": 1}, "prosodic.words.words.WordType.__init__": {"tf": 1}}, "df": 37}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.print_bbc_warnings": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.catchSignals": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"prosodic.parsing.parses.Parse.constraint_d": {"tf": 1}, "prosodic.parsing.parses.Parse.categorical_constraint_d": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"prosodic.lib.lexconvert.hiragana_to_katakana": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sents_txt": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.ents.Entity.to_json": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"prosodic.lib.lexconvert.LexFormats": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1.7320508075688772}, "prosodic.lib.lexconvert.mainopt_convert": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 2}, "prosodic.lib.lexconvert.mainopt_phones2phones": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.makeVariantDic": {"tf": 1}, "prosodic.lib.lexconvert.macSayCommand": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1.4142135623730951}}, "df": 11, "r": {"docs": {"prosodic.lib.lexconvert.mainopt_ruby": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}, "prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1.4142135623730951}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon": {"tf": 1}, "prosodic.lib.lexconvert.MacBritish_System_Lexicon.__init__": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.parse_festival_dict": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_iter": {"tf": 1}, "prosodic.parsing.meter.Meter.parse_text_iter": {"tf": 1}, "prosodic.parsing.utils.iter_mpos": {"tf": 1}, "prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"prosodic.sents.tokenizers.tokenize_sentwords_iter": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"prosodic.lib.lexconvert.mainopt_festival_dictionary_to_espeak": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"prosodic.lib.lexconvert.mainopt_mac_uk": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"prosodic.lib.lexconvert.pipeThroughEspeak": {"tf": 1}, "prosodic.parsing.parselists.ParseList.get_df": {"tf": 1}, "prosodic.parsing.parses.Parse.get_df": {"tf": 1}, "prosodic.utils.encode_cache": {"tf": 1}, "prosodic.utils.decode_cache": {"tf": 1}, "prosodic.utils.force_int": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"prosodic.lib.lexconvert.my_xreadlines": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"prosodic.utils.get_initial_whitespace": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();